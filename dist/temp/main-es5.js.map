{"version":3,"sources":["webpack:///src/app/modules/user-side/home/home.component.ts","webpack:///src/app/modules/user-side/home/home.component.html","webpack:///src/app/modules/user-side/reset_password/reset.component.ts","webpack:///src/app/modules/user-side/reset_password/reset.component.html","webpack:///src/app/modules/security/RoleGuard.ts","webpack:///src/app/modules/user-side/login/login.component.ts","webpack:///src/app/modules/user-side/login/login.component.html","webpack:///src/app/services/banners.service.ts","webpack:///src/app/modules/admin-side/add-article/add-article.component.ts","webpack:///src/app/modules/admin-side/add-article/add-article.component.html","webpack:///src/app/modules/admin-side/admin-banners/components/banners-list/banners-list.component.ts","webpack:///src/app/modules/admin-side/admin-banners/components/banners-list/banners-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/modules/user-side/video/video/video.component.ts","webpack:///src/app/modules/user-side/video/video/video.component.html","webpack:///src/app/modules/admin-side/navigation/navbar/admin-navigation.component.ts","webpack:///src/app/modules/admin-side/navigation/navbar/admin-navigation.component.html","webpack:///src/app/shared/interfaces/banner.ts","webpack:///src/app/modules/admin-side/video/video/video.component.ts","webpack:///src/app/modules/admin-side/video/video/video.component.html","webpack:///src/app/modules/user-side/user-profile/user-profile.component.ts","webpack:///src/app/modules/user-side/user-profile/user-profile.component.html","webpack:///src/app/modules/user-side/user-list/user-list.component.ts","webpack:///src/app/modules/user-side/user-list/user-list.component.html","webpack:///src/app/services/checkbox.service.ts","webpack:///src/app/services/survey.service.ts","webpack:///src/app/modules/admin-side/admin-banners/components/predefined-categories-settings/predefined-categories-settings.component.ts","webpack:///src/app/modules/admin-side/admin-banners/components/predefined-categories-settings/predefined-categories-settings.component.html","webpack:///src/app/modules/admin-side/home/home.component.ts","webpack:///src/app/modules/admin-side/home/home.component.html","webpack:///src/app/modules/admin-side/admin-banners/components/banners-header/banners-header.component.ts","webpack:///src/app/modules/admin-side/admin-banners/components/banners-header/banners-header.component.html","webpack:///src/app/services/Registration.service.ts","webpack:///src/app/modules/user-side/user.ts","webpack:///src/app/shared/interfaces/flashMessage.ts","webpack:///src/app/services/reset.service.ts","webpack:///src/app/modules/admin-side/admin-banners/components/edit-banner/edit-banner.component.ts","webpack:///src/app/modules/admin-side/admin-banners/components/edit-banner/edit-banner.component.html","webpack:///src/app/services/article.service.ts","webpack:///src/app/interceptors/auth.interceptor.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/pipes/video.pipe.ts","webpack:///src/app/services/sportCategory.service.ts","webpack:///src/app/modules/user-side/templates/footer/footer.component.ts","webpack:///src/app/modules/user-side/templates/footer/footer.component.html","webpack:///src/app/modules/user-side/registration/registration.component.ts","webpack:///src/app/modules/user-side/registration/registration.component.html","webpack:///src/app/modules/admin-side/admin-banners/admin-banners.module.ts","webpack:///src/app/pipes/safe.pipe.ts","webpack:///src/app/shared/interfaces/messagesEnum.ts","webpack:///src/app/app.module.ts","webpack:///src/app/modules/user-side/banners/banner-list-userside/banner-list-userside.component.ts","webpack:///src/app/modules/user-side/banners/banner-list-userside/banner-list-userside.component.html","webpack:///src/app/modules/admin-side/video/video-form/video-form.component.ts","webpack:///src/app/modules/admin-side/video/video-form/video-form.component.html","webpack:///src/app/modules/user-side/templates/header/header.component.ts","webpack:///src/app/modules/user-side/templates/header/header.component.html","webpack:///src/app/services/SendEmail.service.ts","webpack:///src/app/modules/user-side/banners/banner/banner.component.ts","webpack:///src/app/modules/user-side/banners/banner/banner.component.html","webpack:///src/app/modules/admin-side/video/video-edit/video-edit.component.ts","webpack:///src/app/modules/admin-side/video/video-edit/video-edit.component.html","webpack:///src/app/modules/admin-side/admin-banners/components/category-item/category-item.component.ts","webpack:///src/app/modules/admin-side/admin-banners/components/category-item/category-item.component.html","webpack:///src/app/modules/admin-side/flash-message/flash-message.component.ts","webpack:///src/app/modules/admin-side/flash-message/flash-message.component.html","webpack:///src/app/modules/user-side/reset_entity.ts","webpack:///src/app/modules/user-side/templates/navigation/navigation.component.ts","webpack:///src/app/modules/user-side/templates/navigation/navigation.component.html","webpack:///src/app/modules/admin-side/admin-banners/pages/banners-management/banners-management.component.ts","webpack:///src/app/modules/admin-side/admin-banners/pages/banners-management/banners-management.component.html","webpack:///src/app/services/authentification.service.ts","webpack:///src/app/modules/user-side/forgot_password/forgot_password.component.ts","webpack:///src/app/modules/user-side/forgot_password/forgot_password.component.html","webpack:///src/app/services/video.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/shared/app.constants.ts","webpack:///src/app/modules/admin-side/video/video-form-confirm/video-form-confirm.component.ts","webpack:///src/app/modules/admin-side/video/video-form-confirm/video-form-confirm.component.html","webpack:///src/app/modules/user-side/video/videos/videos.component.ts","webpack:///src/app/modules/user-side/video/videos/videos.component.html","webpack:///src/app/modules/admin-side/admin-banners/components/banner-item/banner-item.component.ts","webpack:///src/app/modules/admin-side/admin-banners/components/banner-item/banner-item.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/modules/module.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","articleService","arrowRightIco","getArticles","subscribe","data","articles","selector","templateUrl","styleUrls","ResetComponent","resetService","router","activatedRoute","visible","buttonRegister","submitted","enable","resetForm","get","disable","queryParams","params","token","console","log","invalid","resetData","setToken","setNewPassword","value","setConfirmPassword","getNewPassword","getConfirmPassword","reset","JSON","stringify","responseCode","window","alert","responseMsg","enableForm","error","navigateByUrl","newPassword","required","confirmPassword","RoleGuard","route","state","localStorage","getItem","navigate","providedIn","LoginComponent","loginClient","loginForm","userName","email","password","headers","Headers","loginData","setEmail","setPassword","login","usr","obj","parse","role","sessionStorage","setItem","getEmail","setValue","clearPass","BannerService","http","apiServerUrl","status","id","banner","file","formData","FormData","append","title","put","post","category","name","keyword","AddArticleComponent","fb","createForm","formGroup","group","description","event","target","files","length","uploadedFile","patchValue","addArticle","response","onFileChange","BannersListComponent","bannerService","selectedBannerChanged","selectedStatus","search","filter","getBannersByStatus","banners","index","emit","newStatus","bannersSearch","configureBanner","_","i","selectedBanner","sortOpenByStatus","searchBanners","sortBy","environment","production","VideoComponent","dialog","activateRoute","videoService","videos","snapshot","getById","video","getAll","data1","count","publish","push","text","AdminNavigationComponent","categoryService","categories","previousIndex","currentIndex","getNullParent","Paths","before","tmp","url","after","BannerStatusShort","BannerStatus","AdminVideoComponent","isSearch","shareAllow","views","messages","shareFromClass","type","dialogRef","open","width","document","body","offsetWidth","afterClosed","minWidth","message","warn","splice","indexOf","openDialog","UserProfileComponent","userService","surveyService","checkBoxService","uploadFile","updateUserForm","userIdFromRoute","username","new_pass","new_pass_2","updateSurveyForm","selectedSurveyId","question","isOpen","item","getCheckBoxOfSurvey","findAllBySurveyId","checkBoxes","updateSurvey","then","location","reload","deleteSurvey","updateAll","deleteUser","routeParams","paramMap","Number","getUserById","user","findOpenByUserId","openSurveys","findClosedByUserId","closedSurveys","checkNames","handleFileInput","updateUser","UserListComponent","findAll","users","CheckboxService","userUrl","userId","surveyId","SurveyService","updData","PredefinedCategoriesSettingsComponent","selectedCategoryChanged","predefinedCategories","showBanners","predefinedState","predefinedSetting","AdminHomeComponent","BannersHeaderComponent","addBanner","onButtonClick","httpOptions","RegistrationClientService","baseUrl","registrationUrl","requestRegistrationDTO","pipe","handleError","errorMessage","User","FlashMessage","ResetService","resetUrl","resetEntity","isEditingChange","isEditing","HttpErrorResponse","EditBannerComponent","isNew","updateBanner","createBanner","getBanner","ArticleService","API_URL","responseType","AuthInterceptor","req","next","basicHeader","clone","setHeaders","Authorization","handle","AppComponent","VideoPipe","input","view","res","filterInput","filterView","toLowerCase","val","lowerVal","SportCategoryService","httpClient","FooterComponent","filmIcon","RegistrationComponent","registrationClient","registrationForm","registrationData","setUsername","register","AdminBannersModule","declarations","exports","imports","SafePipe","sanitizer","uploaded","arr","split","link","bypassSecurityTrustResourceUrl","MessagesEnum","AppModule","provide","useClass","multi","providers","bootstrap","BannerListUsersideComponent","VideoFormComponent","formVideo","showComments","close","changeDisable","change","add","update","checkUrlInput","onNoClick","addVideo","HeaderComponent","authenticationService","languageOptions","language","searchText","isUserLoggedIn","getLoggedUser","language_","SendEmailService","forgotUrl","BannerComponent","VideoEditComponent","saveVideo","save","allowCommentChange","CategoryItemComponent","categoryChange","predefinedCategory","categoryChanged","FlashMessageComponent","Reset_entity","NavigationComponent","sportCategoryService","beforeCategories","afterCategories","layers","sportCategory","parent","layer","layerCategory","slice","layerElement","copy","children","forEach","elem","last_layer_action","clearLayers","sportCategories","generate_first_layer","check_double_click","check_previous_layer","click_layer_action","BannersManagementComponent","isSelectedBannerNew","getBanners","getPredefined","predefined","setSelectedBanner","AuthentificationService","loginUrl","requestLoginDTO","btoa","userData","authString","removeItem","getByEmail","Forgot_passwordComponent","sendEmailService","buttonForgot","forgotForm","getElementById","innerHTML","send","sendMail","VideoService","videoDTO","UserService","AppConstants","URL_PORT","MEDIA_PATH","ulr","viewValue","VideoFormConfirmComponent","deleteMessage","publishMessage","successful","VideosComponent","getPublished","BannerItemComponent","modalService","bannerChange","bannerDeleted","closeResult","trash","content","ariaLabelledBy","result","deleteBanner","reason","ESC","BACKDROP_CLICK","getCategories","option","key","cat1","cat2","dismissAll","bannerChanged","routes","path","component","canActivate","expectedRole","AppRoutingModule","forRoot","ModuleModule","bootstrapModule","err","webpackEmptyAsyncContext","Promise","resolve","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ArticleService } from '@services/article.service';\nimport { Article } from '@shared/interfaces/article';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  articles: Article[];\n  arrowRightIco = faArrowRight;\n\n  constructor(private articleService: ArticleService) { }\n\n  ngOnInit(): void {\n    this.getArticles();\n  }\n\n  getArticles(): void {\n    this.articleService.getArticles()\n        .subscribe(data => {\n          this.articles = data;\n        });\n  }\n}\n","<app-header></app-header>\n<!--<div class=\"header bg-danger\">Sports Hub</div>-->\n<app-navigation></app-navigation>\n\n<div class=\"bg-caption\">\n    all\n</div>\n\n<div class=\"content-container\">\n    <div class=\"main-article\" *ngIf=\"articles[0]\">\n        <div class=\"img-container\">\n            <img src=\"assets/img/{{articles[0].imagePath}}\" alt=\"\">\n            <!--            <div class=\"corner-link\">{{articles[0]?.category.name}}}</div>-->\n            <div class=\"corner-link\">NBA</div>\n        </div>\n    </div>\n\n    <!--  REMOVE PADDING  -->\n    <div class=\"content pb-2\">\n        <div class=\"article-col-container\" *ngFor=\"let article of articles | slice:1:5\">\n            <div class=\"img-container\"><img src=\"assets/img/{{article.imagePath}}\" alt=\"\"></div>\n            <div class=\"title\">{{article.title}}</div>\n            <div class=\"description\">{{article.description}}</div>\n            <fa-icon class=\"a-c-ico\" [icon]=\"arrowRightIco\"></fa-icon>\n        </div>\n    </div>\n</div>\n\n<!--<div class=\"d-flex justify-content-center\">\n    <div class=\"spinner-border text-danger\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>-->\n<app-footer></app-footer>\n","import {Component, OnInit, Input} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {ResponseData} from '../response-data';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ResetService} from '@services/reset.service';\nimport {Reset_entity} from '../reset_entity';\n\n@Component({\n    selector: 'app-reset-form',\n    templateUrl: './reset.component.html',\n    styleUrls: ['./reset.component.scss']\n})\nexport class ResetComponent implements OnInit {\n    visible = false;\n    buttonRegister = true;\n    submitted = false;\n    token: string;\n    private resetData: Reset_entity;\n    resetForm: FormGroup;\n\n\n    constructor(\n        public resetService: ResetService, public router: Router,\n        private activatedRoute: ActivatedRoute\n    ) {\n\n    }\n\n\n    enableForm(enable: boolean) {\n        if (enable) {\n\n            this.resetForm.get('newPassword').enable();\n            this.resetForm.get('confirmPassword').enable();\n\n            this.buttonRegister = true;\n        } else {\n            this.resetForm.get('newPassword').disable();\n            this.resetForm.get('confirmPassword').disable();\n            this.buttonRegister = false;\n        }\n    }\n\n    reset() {\n        this.activatedRoute.queryParams.subscribe(params => {\n            this.token = params['token'];\n            console.log(this.token); // Print the parameter to the console.\n        });\n        this.submitted = true;\n        if (this.resetForm.invalid) {\n            return;\n        } else {\n            this.resetData = new Reset_entity();\n            this.resetData.setToken(this.token);\n            this.resetData.setNewPassword(this.resetForm.get('newPassword').value);\n            this.resetData.setConfirmPassword(this.resetForm.get('confirmPassword').value);\n            console.log(this.resetData.getNewPassword());\n            console.log(this.resetData.getConfirmPassword());\n            this.resetService.reset(this.resetData).subscribe((data: ResponseData) => {\n                console.log('RESPONSE DATA ' + JSON.stringify(data));\n                if (data.responseCode === '200') {\n                    window.alert(data.responseMsg);\n                    this.visible = true;\n                    this.enableForm(false);\n                } else {\n                    this.enableForm(true);\n                }\n            }, error => {\n                console.log('An Error Occured ' + error);\n            });\n\n            this.router.navigateByUrl('/');\n        }\n    }\n\n    ngOnInit() {\n        this.resetForm = new FormGroup({\n         //   token: new FormControl('', [Validators.required]),\n            newPassword: new FormControl('', [Validators.required]),\n            confirmPassword: new FormControl('', [Validators.required])\n        });\n    }\n\n    setSubmitted(submitted: boolean) {\n        this.submitted = submitted;\n    }\n\n}\n","<app-footer></app-footer>\n<div class=\"sidenav\">\n    <div class=\"login-main-text\">\n    </div>\n</div>\n<!--<div class=\"main\">-->\n<!--<div class=\"col-md-6 col-sm-12\">-->\n<!--    <div class=\"login-form\">-->\n\n        <div class=\"alert alert-danger\" *ngIf=\"resetForm.controls['newPassword'].errors && submitted\">\n            <div *ngIf=\"resetForm.controls['newPassword'].errors.required\">First Name is required</div>\n        </div>\n        <div class=\"alert alert-danger\" *ngIf=\"resetForm.controls['confirmPassword'].errors  && submitted\">\n            <div *ngIf=\"resetForm.controls['confirmPassword'].errors.required\">Last Name is required</div>\n        </div>\n\n<!--    </div>-->\n<!--</div>-->\n<div class=\"main\">\n    <div class=\"col-md-6 col-sm-12\">\n        <div class=\"login-form\">\n            <form [formGroup]=\"resetForm\" class=\"form-signin\">\n\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"newPassword\" placeholder=\"newPassword\" class=\"form-control\" id=\"newPassword\">\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"confirmPassword\" placeholder=\"confirmPassword\" class=\"form-control\"\n                           id=\"confirmPassword\">\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"buttonRegister==false\"\n                        (click)=\"reset()\"\n                >submit\n                </button>\n\n            </form>\n        </div>\n        <div class=\"col-md-6\">\n            <div *ngIf=\"visible==true\">\n            </div>\n        </div>\n    </div>\n</div>\n<!--</div>-->\n","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class RoleGuard implements CanActivate {\n\n    constructor(private router: Router) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (localStorage.getItem('role') === 'ROLE_ADMIN') {\n            return true;\n        } else {\n            this.router.navigate(['/']);\n            return false;\n        }\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AuthentificationService} from '@services/authentification.service';\nimport {Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {User} from '../user';\nimport {ResponseData} from '../response-data';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    role: string;\n    loginForm: FormGroup;\n    private submitted = false;\n    private loginData: User;\n\n    constructor(\n        public loginClient: AuthentificationService,\n        public router: Router\n    ) {\n        //  console.log(this.router.getCurrentNavigation().extras.state);\n    }\n\n    // tslint:disable-next-line:typedef\n    ngOnInit() {\n        this.loginForm = new FormGroup({\n            userName: new FormControl('', [Validators.required, Validators.email]),\n            password: new FormControl('', Validators.required),\n        });\n        //this.loginForm=history.state;\n    }\n\n    login(): void {\n        let headers = new Headers();\n        this.submitted = true;\n        if (this.loginForm.invalid) {\n            return;\n        } else {\n            this.loginData = new User();\n            this.loginData.setEmail(this.loginForm.get('userName').value);\n            this.loginData.setPassword(this.loginForm.get('password').value);\n            this.loginClient.login(this.loginData).subscribe((data: ResponseData) => {\n                console.log('RESPONSE DATA ' + JSON.stringify(data));\n                //    console.log(data.responseCode);\n                var usr = JSON.stringify(data);\n                const obj = JSON.parse(usr);\n                console.log(obj.role);\n                this.role = obj.role;\n                sessionStorage.setItem('isLoggedIn', 'true');\n                sessionStorage.setItem('email', this.loginData.getEmail());\n                localStorage.setItem('role', obj.role);\n\n                //   }\n                this.router.navigateByUrl('/');\n                //   window.alert(data.responseMsg);\n            }, error => {\n                console.log('An Error Occured ' + error);\n            });\n        }\n    }\n\n    clearPass(): void {\n        this.loginForm.get('password').setValue('');\n    }\n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n\n<div class=\"sidenav\">\n    <div class=\"login-main-text\">\n        <h2>Application<br> Login Page</h2>\n        <p>Login or register from here to access.</p>\n    </div>\n</div>\n<div class=\"main\">\n    <div class=\"col-md-6 col-sm-12\">\n        <div class=\"login-form\">\n            <form [formGroup]=\"loginForm\" class=\"form-signin\">\n\n                <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n                <input type=\"text\" placeholder=\"User Name\" formControlName=\"userName\" class=\"form-control\" id=\"username\">\n                <label for=\"inputEmail\" class=\"sr-only\">Input Password</label>\n                <input type=\"password\" (focus)=\"clearPass()\" placeholder=\"Password\" formControlName=\"password\" class=\"form-control\" id=\"password\">\n                <button type=\"submit\" class=\"btn btn-black\" id=\"go\" value=\"Login\" (click)=\"login()\">\n                    Login\n                </button>\n                <button onclick=\"location.href='/registration'\" type=\"submit\" class=\"btn btn-secondary\">Register\n                </button>\n                <a href=\"/forgot_password\">Forgot Password?</a>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!--<div class=\"text-center\">-->\n<!--    <div class=\"container\">-->\n<!--        <form [formGroup]=\"loginForm\" class=\"form-signin\">-->\n<!--            <div class=\"row\">-->\n<!--                <div class=\"col-md-4\">-->\n<!--                    <img class=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">-->\n<!--                    <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>-->\n<!--                    <label for=\"inputEmail\" class=\"sr-only\">Email address</label>-->\n<!--                    <input type=\"text\" placeholder=\"User Name\" formControlName=\"userName\" class=\"form-control\" id=\"username\">-->\n<!--                    <label for=\"inputEmail\" class=\"sr-only\">Input Password</label>-->\n<!--                    <input type=\"password\" (focus)=\"clearPass()\" placeholder=\"Password\" formControlName=\"password\" class=\"form-control\" id=\"password\">-->\n<!--                    <button class=\"btn btn-lg btn-primary btn-block\" style=\"width: 100%; background-color: purple; color: white\" (click)=\"login()\" type=\"submit\">Sign in</button>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--        </form>-->\n<!--    </div>-->\n<!--</div>-->\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Banner, BannerStatusShort} from \"@shared/interfaces/banner\";\nimport {SportCategory} from \"@shared/interfaces/sportCategory\";\n\n@Injectable({providedIn: 'root'})\nexport class BannerService {\n    private apiServerUrl = \"http://localhost:8082\";\n\n    constructor(private http: HttpClient){}\n\n    public getBanners(): Observable<Banner[]> {\n        return this.http.get<Banner[]>(`${this.apiServerUrl}/banners`);\n    }\n\n    public getBannersByStatus(status: string): Observable<Banner[]> {\n        return this.http.get<Banner[]>(`${this.apiServerUrl}/banners/${status}`);\n    }\n\n    public getPredefined(): Observable<SportCategory[]> {\n        return this.http.get<SportCategory[]>(`${this.apiServerUrl}/banners/predefinedCategories`);\n    }\n\n    public getBanner(id : number): Observable<Banner> {\n        return this.http.get<Banner>(`${this.apiServerUrl}/banners/${id}`);\n    }\n\n    public getBannerForUpdate(id: number): Observable<Banner> {\n        return this.http.get<Banner>(`${this.apiServerUrl}/banners/${id}`);\n    }\n\n    public updateBanner(banner: Banner, file: File): Observable<Banner> {\n        const formData: FormData = new FormData();\n        formData.append('file', file);\n        formData.append('title', banner.title)\n        return this.http.put<Banner>(`${this.apiServerUrl}/banners/update/${banner.id}`, formData);\n    }\n\n    public createBanner(banner: Banner, file: File): Observable<Banner> {\n        const formData: FormData = new FormData();\n        formData.append('file', file);\n        formData.append('title', banner.title)\n        return this.http.post<Banner>(`${this.apiServerUrl}/banners`, formData);\n    }\n\n    public deleteBanner(banner: Banner): Observable<void> {\n        console.log('sending req...');\n        return this.http.delete<void>(`${this.apiServerUrl}/banners/${banner.id}`);\n    }\n\n    public configureBanner(banner: Banner): Observable<Banner> {\n        return this.http.put<Banner>(`${this.apiServerUrl}/banners/configure`, banner);\n    }\n\n    public getCategories(): Observable<SportCategory[]> {\n        return this.http.get<SportCategory[]>(`${this.apiServerUrl}/sportCategory/basicNavigationList`);\n    }\n\n    public predefinedSetting(category : SportCategory, state : String): Observable<SportCategory>{\n        return this.http.put<SportCategory>(`${this.apiServerUrl}/banners/${state}?category=${category.name}`, \"\");\n    }\n\n    public getBannersByCategory(category: String): Observable<Banner[]> {\n        return this.http.get<Banner[]>(`${this.apiServerUrl}/banners/filterUserSide?category=${category}`);\n    }\n\n    public bannersSearch(keyword: String): Observable<Banner[]> {\n        return this.http.get<Banner[]>(`${this.apiServerUrl}/banners/search?title=${keyword}`);\n    }\n\n    public sortOpenByStatus(status: String): Observable<Banner[]>{\n        return this.http.get<Banner[]>(`${this.apiServerUrl}/banners/sortByStatus?status=${status}`)\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ArticleService } from '@services/article.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-article',\n  templateUrl: './add-article.component.html',\n  styleUrls: ['./add-article.component.scss']\n})\nexport class AddArticleComponent implements OnInit {\n\n  formGroup: FormGroup;\n\n  constructor(public fb: FormBuilder, private articleService: ArticleService) {\n    this.createForm();\n  }\n\n    private createForm(): void {\n      this.formGroup = this.fb.group(\n          {\n              title: ['', [Validators.required]],\n              description: ['', [Validators.required]],\n              file: [null]\n          }\n      );\n    }\n\n    onFileChange(event): void {\n        if (event.target.files && event.target.files.length) {\n            const uploadedFile = event.target.files[0];\n\n            this.formGroup.patchValue({\n                file: uploadedFile\n            });\n        }\n    }\n\n  addArticle(): void {\n    const formData: FormData = new FormData();\n    const file = this.formGroup.get('file').value;\n\n    if (file != null) {\n        formData.append('file', file, file.name);\n    }\n    formData.append('articleDto', JSON.stringify(this.formGroup.value));\n\n    this.articleService.addArticle(formData)\n        .subscribe(\n            (response) => console.log(response),\n            (error: HttpErrorResponse) => console.log(error)\n        );\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--<app-header></app-header>-->\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"addArticle()\" action=\"\">\n    <p>Form value: {{ formGroup.value | json }}</p>\n\n    <div class=\"dnd-box\">\n        <input type=\"file\" (change)=\"onFileChange($event)\" id=\"fileDrop\">\n        <div class=\"dnd-msg\">\n            <img src=\"assets/img/dd_camera.svg\" alt=\"Upload camera\">\n            <label for=\"fileDrop\"><span class=\"text-danger\">+Add picture</span></label>\n            or drop it right here <br> You can add next formats: png. jpg. jpeg. tif\n        </div>\n    </div>\n\n    <div class=\"container-fluid pb-5\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <label for=\"conferenceSelect\">Conference</label>\n                <!-- TODO: ngFor options -->\n                <select name=\"conference\" id=\"conferenceSelect\">\n                    <option>Not Selected</option>\n                </select>\n            </div>\n            <div class=\"col\">\n                <label for=\"teamSelect\">Team</label>\n                <select name=\"team\" id=\"teamSelect\">\n                    <option>Not Selected</option>\n                </select>\n            </div>\n            <div class=\"col\">\n                <label for=\"locationSelect\">Location</label>\n                <select name=\"location\" id=\"locationSelect\">\n                    <option>Not Selected</option>\n                </select>\n            </div>\n        </div>\n\n\n        <!--    formControl-->\n        <label for=\"altImgName\">Alt. *</label>\n        <input id=\"altImgName\" type=\"text\" placeholder=\"Alternative text for picture\">\n\n        <label for=\"headline\">Article Headline *</label>\n        <input id=\"headline\" type=\"text\" formControlName=\"title\" placeholder=\"Name\">\n\n        <!--    formControl-->\n        <label for=\"caption\">Caption *</label>\n        <input id=\"caption\" type=\"text\" placeholder=\"Name\">\n\n        <label for=\"description\">Сontent *</label>\n        <div class=\"text-format-tool\">\n            <ul class=\"hr\">\n                <li>h1</li>\n                <li>h2</li>\n                <li>p</li>\n            </ul>\n            <ul class=\"hr\">\n                <li class=\"font-weight-bold\">b</li>\n                <li class=\"font-italic\">i</li>\n                <li>u</li>\n            </ul>\n            <ul class=\"hr\">\n                <li><img src=\"assets/img/left-text-alignment-option.svg\" alt=\"Align left\"\n                         class=\"filter-grey flip-hor\"></li>\n                <li><img src=\"assets/img/centered-text-of-alignment-button.svg\" alt=\"Align left\"\n                         class=\"filter-grey flip-hor\">\n                </li>\n                <li><img src=\"assets/img/right-text-alignment.svg\" alt=\"Align left\" class=\"filter-grey flip-hor\"></li>\n            </ul>\n            <ul class=\"hr\">\n                <li><img src=\"assets/img/bullets.svg\" alt=\"Align left\" class=\"filter-grey\"></li>\n                <li><img src=\"assets/img/list.svg\" alt=\"Align left\" class=\"filter-grey\"></li>\n            </ul>\n        </div>\n<!--        <input id=\"description\" type=\"text\" formControlName=\"description\" placeholder=\"Please add text here\">-->\n\n        <textarea name=\"description\" id=\"description\" placeholder=\"Please add text here\"></textarea>\n\n        <div class=\"commentSwitch align-middle\">Comments: <span class=\"text-dark pr-2\">Show</span>\n            <mat-slide-toggle\n                    color=\"warn\" checked></mat-slide-toggle>\n        </div>\n\n        <!--    <button type=\"submit\">Save</button>-->\n    </div>\n</form>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Banner, BannerStatusShort} from \"../../../../../shared/interfaces/banner\";\nimport {BannerService} from \"../../../../../services/banners.service\";\nimport { faSearch, faFilter } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-banners-list',\n  templateUrl: './banners-list.component.html',\n  styleUrls: ['./banners-list.component.scss']\n})\nexport class BannersListComponent implements OnInit {\n\n  @Input() banners: Banner[];\n  public selectedBanner: Banner;\n  @Output() selectedBannerChanged = new EventEmitter<Banner>();\n  selectedStatus = 'open';\n  public keyword: String;\n  search = faSearch;\n  filter = faFilter;\n\n  constructor(private bannerService: BannerService){}\n\n  ngOnInit() {\n    this.bannerService.getBannersByStatus(this.selectedStatus).subscribe(data => this.banners = data);\n  }\n\n  selectBannerAt(index: number) {\n      this.selectedBannerChanged.emit(this.banners[index]);\n  }\n\n  getBannersByStatus(newStatus: string) {\n    if (this.selectedStatus !== newStatus) {\n      this.selectedStatus = newStatus;\n      this.bannerService.getBannersByStatus(newStatus).subscribe(data => this.banners = data);\n    }\n  }\n\n  searchBanners(keyword: String){\n    this.bannerService.bannersSearch(keyword).subscribe(data => this.banners = data );\n  }\n\n  get statuses() {\n    return ['open', 'closed'];\n  }\n\n  configureBanner(banner: Banner) {\n      this.bannerService.configureBanner(banner).subscribe(\n          data => console.log(data));\n  }\n\n  onBannerDeleted(index: number): void {\n    this.banners = this.banners.filter((_, i) => i !== index);\n    this.selectedBanner = null;\n    this.selectedBannerChanged.emit();\n  }\n\n  sortBy(status: String){\n    this.bannerService.sortOpenByStatus(status).subscribe(data => this.banners = data );\n  }\n}\n","<div class=\"banner-list-menu mb-2\">\n    <button class=\"open-closed-button\"\n           [ngClass]=\"{'active': status === selectedStatus}\"\n           *ngFor=\"let status of statuses\"\n           (click)=\"getBannersByStatus(status)\">\n       {{status | uppercase}}\n   </button>\n    <div class=\"float-right banner-search-area\">\n        <input type=\"text\" [(ngModel)]=\"keyword\" class=\"form-control search-input\"  placeholder=\"Enter a banner name here\">\n        <button class=\"search-button custom-svg-inline--fa ml-2 mr-2\" (click)=\"searchBanners(keyword)\"><fa-icon [icon]=\"search\"></fa-icon></button>\n    </div>\n</div>\n<div class=\"container banner-list\">\n    <div class=\"banner-list-title h-100 pt-3 pb-4 mb-3\">\n        <div class=\"float-left w-50\">\n            <p>BANNER NAME</p>\n        </div>\n        <div class=\"float-right w-50\">\n            <div class=\"width-45 d-inline-flex\">\n                <p>STATUS</p>\n                <button class=\"filter-button ml-2 mr-2\"><fa-icon [icon]=\"filter\"></fa-icon> </button>\n                <mat-select>\n                    <p class=\"m-0 p-0\">Sort by</p>\n                    <hr>\n                    <mat-option (click)=\"sortBy('PUBLISHED')\">\n                        published\n                    </mat-option>\n                    <mat-option (click)=\"sortBy('NOT_PUBLISHED')\">\n                        not published\n                    </mat-option>\n                </mat-select>\n<!--                <mat-form-field color=\"warn\">-->\n<!--                    <fa-icon [icon]=\"filter\"></fa-icon>-->\n<!--                    <mat-select class = \"select-form\">-->\n<!--                        <mat-option (click)=\"changeView('published')\">-->\n<!--                            published-->\n<!--                        </mat-option>-->\n<!--                        <mat-option (click)=\"changeView('not published')\">-->\n<!--                            not published-->\n<!--                        </mat-option>-->\n<!--                    </mat-select>-->\n<!--                </mat-form-field>-->\n            </div>\n            <div class=\"width-45 d-inline-flex\">\n                <p>PUBLISHED IN</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"row d-block\">\n        <div *ngFor=\"let b of banners; let i = index\" class=\"pl-0 pr-0\">\n            <app-banner-item (bannerDeleted)=\"onBannerDeleted(i)\" [banner]=\"b\" (bannerChange)=\"configureBanner($event)\" (click)=\"selectBannerAt(i)\"></app-banner-item>\n        </div>\n    </div>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {VideoService} from '../../../../services/video.service';\nimport {Video} from '../../../../shared/interfaces/video';\n\n@Component({\n    selector: 'app-video',\n    templateUrl: './video.component.html',\n    styleUrls: ['./video.component.scss']\n})\nexport class VideoComponent implements OnInit {\n\n\n    video: Video;\n\n    videos = [];\n\n    id: number;\n    text: string;\n\n\n    constructor(private dialog: MatDialog,\n                private activateRoute: ActivatedRoute,\n                private videoService: VideoService) {\n        this.id = activateRoute.snapshot.params.id;\n    }\n\n    ngOnInit(): void {\n        this.videoService.getById(this.id).subscribe(data => {\n            this.video = data;\n            this.videoService.getAll().subscribe(data1 => {\n            let count = 0;\n            for (const video of data1) {\n                if (count === 4) {\n                    break;\n                } else {\n                    if (video.id !== this.video.id && video.publish) {\n                        this.videos.push(video);\n                        ++count;\n                    }\n                }\n            }\n        });\n        });\n    }\n\n    sendComment(text: string): void {\n        console.log(text);\n    }\n}\n\n","<app-header></app-header>\n<app-navigation></app-navigation>\n<mat-card class=\"container-fluid col-6 m-auto mt-md-5 position-relative\">\n    <h3>\n        <a href=\"/videos\" class=\"text-secondary\">\n            VIDEO\n        </a>\n        <mat-icon class=\"material-icons-outlined text-danger\">\n            arrow_forward_ios\n        </mat-icon>\n        <span class=\"text-danger\">\n            {{ video.title }}\n        </span>\n    </h3>\n    <video *ngIf=\"video.uploaded\" class=\"mt-3\" [src]=\"video | safe\" controls>\n    </video>\n    <div *ngIf=\"video.uploaded == false\" class=\"main-video-frame\">\n        <iframe [src]=\"video | safe\"></iframe>\n    </div>\n    <div class=\"row\" *ngIf=\"!video.showComments\">\n        <div class=\"col h-25 container-fluid\" *ngFor=\"let subVideo of videos | slice:0:2\">\n            <a [href]=\"'/videos/' + subVideo.id\" *ngIf=\"subVideo.uploaded\" class=\"bg-black\">\n                <video class=\"mt-3 video\" [src]=\"subVideo | safe\">\n                </video>\n                <h2 class=\"title\">\n                    {{ subVideo.title }}\n                </h2>\n            </a>\n            <a [href]=\"'/videos/' + subVideo.id\" *ngIf=\"subVideo.uploaded == false\" class=\"bg-black\">\n                <div>\n                    <iframe [src]=\"subVideo | safe\" class=\"mt-3 video\"></iframe>\n                </div>\n                <h2 class=\"title\">\n                    {{ subVideo.title }}\n                </h2>\n            </a>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!video.showComments\">\n        <div class=\"col h-25 container-fluid\" *ngFor=\"let subVideo of videos | slice:2:4\">\n            <a [href]=\"'/videos/' + subVideo.id\" *ngIf=\"subVideo.uploaded\" class=\"bg-black\">\n                <video class=\"mt-3 video\" [src]=\"subVideo | safe\">\n                </video>\n                <h2 class=\"title\">\n                    {{ subVideo.title }}\n                </h2>\n            </a>\n            <a [href]=\"'/videos/' + subVideo.id\" *ngIf=\"subVideo.uploaded == false\" class=\"bg-black\">\n                <div class=\"m-0 p-0\">\n                    <iframe [src]=\"subVideo | safe\"></iframe>\n                </div>\n                <h2 class=\"title\">\n                    {{ subVideo.title }}\n                </h2>\n            </a>\n        </div>\n    </div>\n\n    <mat-card class=\"comment-box\" *ngIf=\"video.showComments\">\n        <mat-card-title>\n            <h4>\n                <b>\n                    COMMENTS ({{ video.comments.length}})\n                </b>\n            </h4>\n        </mat-card-title>\n        <mat-card class=\"comment-box-input\">\n            <img src=\"favicon.ico\">\n            <!--            <input type=\"text\" placeholder=\"Write a comment\">-->\n            <textarea matInput placeholder=\"Write a comment\" rows=\"1\" [(ngModel)]=\"text\"></textarea>\n            <button class=\"comment-button text-secondary\" (click)=\"sendComment(text)\">Submit</button>\n        </mat-card>\n        {{ video.comments | json }}\n        <mat-card class=\"comment-box-content\">\n            <mat-card-content *ngFor=\"let comment of video.comments\">\n                <div class=\"text-secondary\">\n                    <h4>\n                        <b>\n                            {{ comment.time | date:'MMM d'}}\n                        </b>\n                    </h4>\n                </div>\n                <h2>{{ comment.comment }}</h2>\n                <hr>\n                <mat-icon class=\"material-icons-outlined\">\n                thumb_up\n                </mat-icon>\n                {{ comment.likes }}\n                <mat-icon class=\"material-icons-outlined\">\n                thumb_down\n                </mat-icon>\n                {{ comment.dislikes }}\n            </mat-card-content>\n        </mat-card>\n    </mat-card>\n</mat-card>\n\n\n<app-footer></app-footer>\n","import {Component, OnInit} from '@angular/core';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {AppConstants} from '../../../../shared/app.constants';\nimport {VideoService} from '../../../../services/video.service';\nimport {SportCategoryService} from '../../../../services/sportCategory.service';\nimport {unwrapLazyLoadHelperCall} from '@angular/localize/src/tools/src/source_file_utils';\n\n@Component({\n    selector: 'app-admin-navigation',\n    templateUrl: './admin-navigation.component.html',\n    styleUrls: ['./admin-navigation.component.scss']\n})\nexport class AdminNavigationComponent implements OnInit {\n\n    categories = [];\n\n    constructor(private categoryService: SportCategoryService) {\n    }\n\n\n    drop(event: CdkDragDrop<string[]>): void {\n        moveItemInArray(this.categories, event.previousIndex, event.currentIndex);\n    }\n\n    ngOnInit(): any {\n        // this.sportCategories = await this.categoryService.getNullParent();\n        this.categoryService.getNullParent().subscribe(data => {\n\n            for (const category of AppConstants.Paths.before) {\n                this.categories.push(category);\n            }\n            for (const category of data) {\n                const tmp = {name: category.name, url: '/'};\n                this.categories.push(tmp);\n            }\n            for (const category of AppConstants.Paths.after) {\n                this.categories.push(category);\n            }\n        });\n    }\n}\n","<div>\n    <carousel class=\"example-list\" [cellWidth]=\"200\" height=\"10\" *ngIf=\"categories.length\" [arrowsOutside]=\"true\">\n        <div class=\"carousel-cell example-box\" *ngFor=\"let category of categories\">\n            <a class=\"text-danger\" href=\"admin{{category.ulr}}\">{{category.name | uppercase}}</a>\n        </div>\n    </carousel>\n</div>\n","import {SportCategory} from \"./sportCategory\";\n\nexport interface Banner {\n    id?: number;\n    title: string;\n    imgPath?: string;\n    status?: string;\n    category?: SportCategory;\n    lastUpdated?: string;\n}\n\nexport enum BannerStatusShort {\n    OPEN = 'open',\n    CLOSED = 'closed'\n}\n\nexport enum BannerStatus {\n    PUBLISHED = 'published',\n    NOT_PUBLISHED = 'not published',\n    CLOSED = 'closed'\n}\n","import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {VideoFormComponent} from '../video-form/video-form.component';\nimport {Router} from '@angular/router';\nimport {VideoService} from '../../../../services/video.service';\nimport {Video} from '../../../../shared/interfaces/video';\nimport {VideoFormConfirmComponent} from '../video-form-confirm/video-form-confirm.component';\nimport {FlashMessage} from '../../../../shared/interfaces/flashMessage';\nimport {MessagesEnum} from '../../../../shared/interfaces/messagesEnum';\n\n@Component({\n    selector: 'app-video',\n    templateUrl: './video.component.html',\n    styleUrls: ['./video.component.scss']\n})\nexport class AdminVideoComponent implements OnInit {\n    isSearch = false;\n\n    shareAllow = 'Yes';\n\n    views = [\n        {name: 'All', value: null},\n        {name: 'Published', value: true},\n        {name: 'Unpublished', value: false}\n    ];\n\n    messages: FlashMessage[] = [];\n\n    videos: Array<Video>;\n\n    // todo: Class var\n    shareFromClass = true;\n\n    // todo: Class var\n    input: any;\n    type = null;\n\n\n    constructor(private dialog: MatDialog, private router: Router,\n                private videoService: VideoService) {\n    }\n\n    ngOnInit(): void {\n        this.videoService.getAll().subscribe(data => {\n            this.videos = data;\n        });\n        if (this.shareFromClass === true) {\n            this.shareAllow = 'Yes';\n        } else {\n            this.shareAllow = 'No';\n        }\n    }\n\n\n    toggleSearch(): void {\n        this.isSearch = !this.isSearch;\n    }\n\n    allowSaveChange(): void {\n        if (this.shareAllow === 'Yes') {\n            this.shareFromClass = !this.shareFromClass;\n            this.shareAllow = 'No';\n        } else {\n            this.shareAllow = 'Yes';\n            this.shareFromClass = !this.shareFromClass;\n        }\n    }\n\n    changeView(value: string): void {\n        this.type = value;\n    }\n\n    openDialog(): void {\n        // @ts-ignore\n        const dialogRef = this.dialog.open(VideoFormComponent, {\n            width: document.body.offsetWidth * 0.45\n        });\n        dialogRef.afterClosed();\n    }\n\n    changePublish(video: Video): any {\n        // @ts-ignore\n        const dialogRef = this.dialog.open(VideoFormConfirmComponent,\n            {\n                width: document.body.offsetWidth * 0.3,\n                minWidth: '200px',\n                data: {\n                    publish: true,\n                    video\n                }\n            });\n        dialogRef.afterClosed().subscribe(\n            response => {\n                this.messages.push(response.message);\n            }\n        );\n    }\n\n    delete(video: Video): any {\n        // @ts-ignore\n        const dialogRef = this.dialog.open(VideoFormConfirmComponent,\n            {\n                width: document.body.offsetWidth * 0.3,\n                minWidth: '200px',\n                data: {\n                    delete: true,\n                    video\n                }\n            });\n        dialogRef.afterClosed().subscribe(response => {\n            if (response.message.type === MessagesEnum.warn) {\n                this.videos.splice(\n                    this.videos.indexOf(video), 1\n                );\n                this.messages.push(response.message);\n            }\n        });\n    }\n\n}\n\n","<div class=\"col-12 pl-5 border-bottom\">\n    <div class=\"container-fluid d-flex justify-content-between\">\n        <h2 class=\"text-danger\">Video</h2>\n        <div class=\"text-danger mr-md-4\">\n            <button mat-raised-button color=\"warn\" class=\"add-button\" (click)=\"openDialog()\">\n                + New Video\n            </button>\n        </div>\n    </div>\n</div>\n\n<app-admin-navigation></app-admin-navigation>\n<app-flash-message [messages]=\"messages\"></app-flash-message>\n<mat-card class=\"m-auto col-md-8 col-12\">\n    <div class=\"justify-content-around\">\n        <div class=\"d-md-flex justify-content-between\">\n            <mat-form-field appearance=\"legacy\" color=\"warn\">\n                <mat-select [value]=\"views[0].name\">\n                    <mat-option *ngFor=\"let view of views\" [value]='view.name' (click)=\"changeView(view.value)\">\n                        {{view.name}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <!--        <mat-slide-toggle class=\"flex-md-column mt-3\" labelPosition=\"before\" color=\"warn\" [checked]=\"shareFromClass\"-->\n            <!--                          (toggleChange)=\"allowSaveChange()\">-->\n            <!--            Allow to share videos:-->\n            <!--            <span class=\"allowText\">{{ shareAllow }}</span>-->\n            <!--        </mat-slide-toggle>-->\n            <div *ngIf=\"isSearch\" class=\"search-div border border-1 align-self-center\">\n                <div class=\"input-div\">\n                    <span class=\"material-icons align-middle\" (click)=\"toggleSearch()\">\n                        search\n                    </span>\n                    <input type=\"search\" [(ngModel)]=\"input\" placeholder=\"Type here to search\">\n                </div>\n            </div>\n            <span class=\"material-icons\" *ngIf=\"!isSearch\" (click)=\"toggleSearch()\">\n        search\n        </span>\n        </div>\n    </div>\n    <div *ngFor=\"let video of videos | VideoPipe: input:type\" class=\"container-fluid\">\n        <mat-card class=\"home-card container-fluid\">\n            <mat-card-content>\n                <div class=\"home-container\">\n                    <a class=\"text-danger\" [routerLink]=\"video.id\">\n                        <video *ngIf=\"video.uploaded\" disabled=\"true\">\n                            <source\n                                    src=\"assets/videos/{{video.url}}\"\n                                    type='video/mp4'>\n                        </video>\n                        <iframe *ngIf=\"!video.uploaded\" [src]=\"video | safe\"></iframe>\n                    </a>\n                    <div class=\"content\">\n                        <div class=\"video-option-menu\">\n                            <div class=\"video-option\">\n                                <mat-select value=\"SomeValue\">\n                                    <mat-option *ngIf=\"video.publish\" class=\"custom-option\"\n                                                (click)=\"changePublish(video)\">Unpublish\n                                    </mat-option>\n                                    <mat-option *ngIf=\"!video.publish\" class=\"custom-option\"\n                                                (click)=\"changePublish(video)\">Publish\n                                    </mat-option>\n                                    <mat-option class=\"custom-option\" (click)=\"delete(video)\">Delete</mat-option>\n                                </mat-select>\n                            </div>\n                        </div>\n                        <a class=\"text-danger\" [routerLink]=\"video.id\">\n                            <div class=\"content-title\">\n                                <h3>{{ video.title }}</h3>\n                            </div>\n                            <div class=\"video-indecator\" *ngIf=\"video.publish\">\n                            <span class=\"published material-icons\">\n                                brightness_1\n                            </span>\n                                Published\n                            </div>\n                            <div class=\"video-indecator\" *ngIf=\"!video.publish\">\n                            <span class=\"unpublished material-icons\">\n                                brightness_1\n                            </span>\n                                Unpublished\n                            </div>\n                        </a>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserService} from '@services/user.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Survey} from '../../../shared/interfaces/survey';\nimport {SurveyService} from '../../../services/survey.service';\nimport {CheckboxService} from '../../../services/checkbox.service';\nimport {CheckBox} from \"../../../shared/interfaces/checkBox\";\n\ndeclare function checkNames(): any;\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './user-profile.component.html',\n    styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n    user;\n    userIdFromRoute: number;\n    uploadFile: File = null;\n    updateUserForm: FormGroup;\n    updateSurveyForm: FormGroup;\n    openSurveys;\n    closedSurveys;\n    selectedSurveyId: number;\n    checkBoxes;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private userService: UserService,\n                private surveyService: SurveyService,\n                private checkBoxService: CheckboxService\n    ) {\n    }\n\n    private createForm(): void {\n        this.updateUserForm = new FormGroup({\n            id: new FormControl(this.userIdFromRoute),\n            username: new FormControl(null),\n            email: new FormControl(null),\n            password: new FormControl(null),\n            new_pass: new FormControl(null),\n            new_pass_2: new FormControl(null)\n        });\n\n        this.updateSurveyForm = new FormGroup({\n            id: new FormControl(this.selectedSurveyId),\n            question: new FormControl(null),\n            isOpen: new FormControl(null)\n        });\n    }\n\n    handleFileInput(files: FileList): void {\n        this.uploadFile = files.item(0);\n    }\n\n    getSelectedSurveyId(id): void {\n        this.selectedSurveyId = id;\n        this.getCheckBoxOfSurvey();\n    }\n\n    getCheckBoxOfSurvey(): void {\n        this.checkBoxService.findAllBySurveyId(this.userIdFromRoute, this.selectedSurveyId)\n            .subscribe((data: CheckBox[]) => {\n                console.log(data);\n                this.checkBoxes = data;\n            });\n    }\n\n    updateSurvey(): void {\n        this.surveyService.updateSurvey(this.userIdFromRoute, this.selectedSurveyId, this.updateSurveyForm.value);\n        this.router.navigate([`user/${this.userIdFromRoute}`])\n            .then(() => {\n                window.location.reload();\n            });\n    }\n\n    deleteSurvey(): void {\n        this.surveyService.deleteSurvey(this.userIdFromRoute, this.selectedSurveyId);\n        this.router.navigate([`user/${this.userIdFromRoute}`])\n            .then(() => {\n                window.location.reload();\n            });\n    }\n\n\n    updateUser(): void {\n        this.userService.updateAll(this.userIdFromRoute, this.uploadFile, this.updateUserForm.value);\n        this.router.navigate([`user/${this.userIdFromRoute}`])\n            .then(() => {\n                window.location.reload();\n            });\n    }\n\n    deleteUser(): void {\n        this.userService.deleteUser(this.userIdFromRoute);\n        this.router.navigate(['']);\n    }\n\n\n    ngOnInit(): void {\n        const routeParams = this.route.snapshot.paramMap;\n        this.userIdFromRoute = Number(routeParams.get('user_id'));\n\n        this.userService.getUserById(this.userIdFromRoute)\n            .subscribe((data: string[]) => {\n                console.log(data);\n                this.user = data;\n            });\n\n        this.surveyService.findOpenByUserId(this.userIdFromRoute)\n            .subscribe((data: Survey[]) => {\n                console.log(data);\n                this.openSurveys = data;\n            });\n\n        this.surveyService.findClosedByUserId(this.userIdFromRoute)\n            .subscribe((data: Survey[]) => {\n                console.log(data);\n                this.closedSurveys = data;\n            });\n\n        this.createForm();\n        checkNames();\n    }\n}\n","<app-header></app-header>\n<app-navigation></app-navigation>\n\n<div class=\"container\">\n    <mat-tab-group>\n        <form [formGroup]=\"updateUserForm\" name=\"test\">\n\n            <mat-tab label=\"Personal\">\n                <div class=\"example-large-box mat-elevation-z4\">\n                    <div class=\"example-container\">\n\n                        <div class=\"form-group image-upload\">\n                            <label for=\"file\">\n                                <img src=\"assets/img/{{ user.photoUrl }}\">\n                            </label>\n                            <input type=\"file\"\n                                   (change)=\"handleFileInput($event.target.files)\"\n                                   id=\"file\"\n                                   class=\"upload-input\"/>\n                        </div>\n                        <div>\n                            <label>Username</label>\n                            <input class=\"form-control\" maxlength=\"10\"\n                                   type=\"text\"\n                                   formControlName=\"username\"\n                                   id=\"username\"\n                                   placeholder=\"{{ user.username }}\">\n                        </div>\n                        <div>\n                            <label>Email</label>\n                            <input class=\"form-control\"\n                                   type=\"text\"\n                                   formControlName=\"email\"\n                                   id=\"email\"\n                                   autocomplete=\"email\"\n                                   placeholder=\"{{ user.email }}\">\n                        </div>\n                        <div class=\"container\">\n                            <button type=\"button\" class=\"btn btn-success\" (click)=\"updateUser()\">Update</button>\n                            <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteUser()\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n\n\n            <mat-tab label=\"Password\">\n                <div class=\"example-large-box mat-elevation-z4\">\n                    <div class=\"example-container\">\n                        <div>\n                            <label>old password</label>\n                            <input class=\"form-control\"\n                                   type=\"password\"\n                                   formControlName=\"password\"\n                                   id=\"password\"\n                                   placeholder=\"Enter your old password\">\n                        </div>\n                        <div>\n                            <label>new password</label>\n                            <input class=\"form-control\" onkeyup='checkNames()'\n                                   type=\"password\"\n                                   formControlName=\"new_pass\"\n                                   id=\"new_pass\"\n                                   name=\"new_pass\"\n                                   placeholder=\"8+ upper and lowercase letters\">\n                        </div>\n                        <div>\n                            <label>new password</label>\n                            <input class=\"form-control\" onkeyup='checkNames()'\n                                   type=\"password\"\n                                   formControlName=\"new_pass_2\"\n                                   id=\"new_pass_2\"\n                                   name=\"new_pass_2\"\n                                   placeholder=\"Enter new password again\">\n                            <span id='message'></span>\n                        </div>\n                        <div class=\"container\">\n                            <button type=\"button\" class=\"btn btn-success\" id=\"password_butt\" disabled\n                                    (click)=\"updateUser()\">Update\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </form>\n\n        <mat-tab label=\"My surveys\">\n            <form [formGroup]=\"updateSurveyForm\" name=\"test\">\n                <div class=\"example-container survey\">\n                    <mat-tab-group>\n\n                        <mat-tab label=\"OPEN\">\n\n                            <div class=\"survey-boxes\">\n                                <mat-selection-list #selectedso [multiple]=\"false\">\n                                    <h3 class=\"questions\">Questions</h3>\n                                    <mat-list-option *ngFor=\"let so of openSurveys\" [value]=\"so\"\n                                                     (click)=\"getSelectedSurveyId(selectedso.selectedOptions.selected[0]?.value.id)\">\n                                        {{so.question}}\n                                    </mat-list-option>\n                                </mat-selection-list>\n                            </div>\n\n                            <div class=\"survey-boxes two\">\n\n                                <h3 class=\"questions\">Reader poll</h3>\n                                <h4 class=\"questions solid\">{{selectedso.selectedOptions.selected[0]?.value.question}}</h4>\n\n                                <mat-list role=\"list\">\n                                    <mat-list-item role=\"listitem\" *ngFor=\"let cb of checkBoxes\">\n                                        <mat-radio-button [value]=\"cb\">\n                                            {{cb.text}} ({{cb.responses_count}} votes)\n                                        </mat-radio-button>\n                                    </mat-list-item>\n                                </mat-list>\n\n                                <div class=\"container\">\n                                    <button type=\"button\" class=\"btn btn-outline-danger\"\n                                            (click)=\"updateSurvey()\">\n                                        Close survey\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-danger\"\n                                            (click)=\"deleteSurvey()\">\n                                        Delete\n                                    </button>\n                                </div>\n\n                            </div>\n                        </mat-tab>\n\n                        <mat-tab label=\"CLOSED\">\n\n                            <div class=\"survey-boxes\">\n                                <mat-selection-list #selectedsc [multiple]=\"false\">\n                                    <h3 class=\"questions\">Questions</h3>\n                                    <mat-list-option *ngFor=\"let sc of closedSurveys\" [value]=\"sc\"\n                                                     (click)=\"getSelectedSurveyId(selectedsc.selectedOptions.selected[0]?.value.id)\">\n                                        {{sc.question}}\n                                    </mat-list-option>\n                                </mat-selection-list>\n                            </div>\n\n                            <div class=\"survey-boxes two\">\n\n                                <h3 class=\"questions\">Reader poll</h3>\n                                <h4 class=\"questions solid\">{{selectedsc.selectedOptions.selected[0]?.value.question}}</h4>\n\n                                <mat-list role=\"list\">\n                                    <mat-list-item role=\"listitem\" *ngFor=\"let cb of checkBoxes\">\n                                        <mat-radio-button [value]=\"cb\">\n                                            {{cb.text}} ({{cb.responses_count}} votes)\n                                        </mat-radio-button>\n                                    </mat-list-item>\n                                </mat-list>\n\n                                <div class=\"container\">\n                                    <button type=\"button\" class=\"btn btn-outline-danger\"\n                                            (click)=\"updateSurvey()\">\n                                        Open survey\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-danger\"\n                                            (click)=\"deleteSurvey()\">\n                                        Delete\n                                    </button>\n                                </div>\n\n                            </div>\n\n                        </mat-tab>\n                        btn-info\n\n                    </mat-tab-group>\n                </div>\n            </form>\n        </mat-tab>\n\n        <mat-tab label=\"Favourite\">\n            <div class=\"example-large-box mat-elevation-z4\">\n\n            </div>\n        </mat-tab>\n\n\n    </mat-tab-group>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {User} from '@shared/interfaces/user';\nimport {UserService} from '@services/user.service';\n\n@Component({\n    selector: 'app-user-list',\n    templateUrl: './user-list.component.html',\n    styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n    users: User[];\n\n    constructor(private userService: UserService) {\n    }\n\n    ngOnInit(): void {\n        this.userService.findAll().subscribe(data => {\n            this.users = data;\n        });\n    }\n}\n","<h2> user list </h2>\n<div class=\"card my-5\">\n    <div class=\"card-body\">\n        <table class=\"table table-bordered table-striped\">\n            <thead class=\"thead-dark\">\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let user of users\">\n                <td>{{ user.id }}</td>\n                <td>{{ user.username }}</td>\n                <td>{{ user.email }}</td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {CheckBox} from '../shared/interfaces/checkBox';\n\n\n@Injectable({providedIn: 'root'})\nexport class CheckboxService {\n\n    private readonly userUrl: string;\n\n    constructor(\n        private http: HttpClient) {\n        this.userUrl = 'http://localhost:8082/user/';\n    }\n\n    public findAllBySurveyId(userId: number, surveyId: number): Observable<CheckBox[]> {\n        console.log('Getting options for survey ' + surveyId);\n        const url = `${this.userUrl}${userId}/surveys/${surveyId}`;\n        return this.http.get<CheckBox[]>(url);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, Subscription} from 'rxjs';\nimport {Survey} from '../shared/interfaces/survey';\nimport {User} from \"../shared/interfaces/user\";\n\n@Injectable({providedIn: 'root'})\nexport class SurveyService {\n\n    private readonly userUrl: string;\n\n    constructor(\n        private http: HttpClient) {\n        this.userUrl = 'http://localhost:8082/user/';\n    }\n\n    public findAllByUserId(userId: number): Observable<Survey[]> {\n        const url = `${this.userUrl}${userId}/surveys`;\n        return this.http.get<Survey[]>(url);\n    }\n\n    public findOpenByUserId(userId: number): Observable<Survey[]> {\n        const url = `${this.userUrl}${userId}/surveys/open`;\n        return this.http.get<Survey[]>(url);\n    }\n\n    public findClosedByUserId(userId: number): Observable<Survey[]> {\n        const url = `${this.userUrl}${userId}/surveys/closed`;\n        return this.http.get<Survey[]>(url);\n    }\n\n    public updateSurvey(userId: number, surveyId: number, updData): any {\n\n        const url = `${this.userUrl}${userId}/surveys/${surveyId}`;\n        updData.id = surveyId;\n        console.log(updData);\n\n        const formData: FormData = new FormData();\n        formData.append('surveyDTO', JSON.stringify(updData));\n        return this.http.post<any>(url, formData).subscribe(data => {\n            console.log('Survey opened/closed successfully!');\n        }, error => {\n            console.log(JSON.stringify(error));\n        });\n    }\n\n    public deleteSurvey(userId: number, surveyId: number): Subscription {\n        const url = `${this.userUrl}${userId}/surveys/${surveyId}`;\n\n        return this.http.delete<Survey>(url).subscribe(data => {\n            console.log('Successful survey deleting!!!');\n        }, error => {\n            console.log(JSON.stringify(error));\n        });\n    }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {SportCategory} from \"../../../../../shared/interfaces/sportCategory\";\nimport {Observable} from \"rxjs\";\nimport {BannerService} from \"../../../../../services/banners.service\";\n\n@Component({\n  selector: 'app-predefined-categories-settings',\n  templateUrl: './predefined-categories-settings.component.html',\n  styleUrls: ['./predefined-categories-settings.component.scss']\n})\nexport class PredefinedCategoriesSettingsComponent implements OnInit {\n\n  @Input() predefinedCategories: Observable<SportCategory[]>;\n  public selectedCategory: SportCategory;\n  @Output() selectedCategoryChanged = new EventEmitter<SportCategory>();\n  private predefinedState: String;\n\n  constructor(private bannerService : BannerService) { }\n\n  ngOnInit(): void {\n  }\n\n  selectCategoryAt(index: number) {\n    this.selectedCategoryChanged.emit(this.predefinedCategories[index]);\n  }\n\n  predefinedSetting(category: SportCategory) {\n    if (category.showBanners == true) {\n      this.predefinedState = \"show\";\n    }\n    else {\n      this.predefinedState = \"hide\";\n    }\n    this.bannerService.predefinedSetting(category, this.predefinedState).subscribe(\n        data => console.log(data));\n  }\n\n}\n","<div class=\"pb-5\">\n    <div class=\"predefined-ann bg-white w-100 m-0\">\n        <p>PREDEFINED BANNERS</p>\n    </div>\n    <div class=\"container categories-list mb-5\" >\n        <div class=\"predefined-list-title h-100 pt-3 pb-4 mb-3\">\n            <div class=\"float-left w-50\">\n                <p>CATEGORY NAME</p>\n            </div>\n            <div class=\"float-right w-50\">\n                <p>SHOW/HIDE</p>\n            </div>\n        </div>\n        <div class=\"row d-block\">\n            <div *ngFor=\"let pc of predefinedCategories; let i = index\" class=\"pl-0 pr-0\">\n                <app-category-item [predefinedCategory]=\"pc\" (categoryChange)=\"predefinedSetting($event)\" (click)=\"selectCategoryAt(i)\"></app-category-item>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-banners-header',\n  templateUrl: './banners-header.component.html',\n  styleUrls: ['./banners-header.component.scss']\n})\nexport class BannersHeaderComponent implements OnInit {\n  @Output() addBanner: EventEmitter<any> = new EventEmitter<any>();\n\n  onButtonClick() {\n    this.addBanner.emit();\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"banner-header mb-3\">\n    <div class=\"float-left\">\n        <h4>BANNERS</h4>\n    </div>\n    <div class=\"float-right\">\n        <button type=\"button\" class=\"add-button\" (click)=\"onButtonClick()\">+ New Banner</button>\n    </div>\n</div>\n<hr>\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {ResponseData} from '@modules/user-side/response-data';\nimport {User} from '@modules/user-side/user';\n\n\nconst httpOptions = {\n    headers: new HttpHeaders(\n        {\n            'Content-Type' : 'application/json'\n        }\n    )\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegistrationClientService {\n\n    baseUrl = 'http://localhost:8082';\n    registrationUrl = '/registration';\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    register(requestRegistrationDTO: User): Observable<ResponseData> {\n        return this.http.post<ResponseData>(\n            this.baseUrl + this.registrationUrl,\n            requestRegistrationDTO,\n            httpOptions\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        );\n    }\n\n    handleError(error) {\n        const errorMessage = `Error Code: ${error.status} - ${error.error.error} \\nMessage: ${error.error.message}`;\n        window.alert(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","export class User {\n    email: string;\n    password: string;\n    username: string;\n    role: string;\n    newPassword: string;\n    confirmPassword: string;\n    token: string;\n\n\n\n    public setRole(role: string) {\n        this.role = role;\n    }\n\n    public getRole(): string {\n        return this.role;\n    }\n\n    public setEmail(email: string) {\n        this.email = email;\n    }\n\n    public getEmail(): string {\n        return this.email;\n    }\n\n    public setUsername(username: string) {\n        this.username = username;\n    }\n\n    public getUsername(): string {\n        return this.username;\n    }\n\n    public setPassword(password: string) {\n        this.password = password;\n    }\n\n    public getPassword(): string {\n        return this.password;\n    }\n\n\n\n}\n\n","import {MessagesEnum} from './messagesEnum';\n\nexport class FlashMessage {\n    public title: string;\n    public text: string;\n    public type: MessagesEnum;\n\n\n    constructor() {\n    }\n}\n","import {Observable, throwError} from 'rxjs';\nimport {ResponseData} from '@modules/user-side/response-data';\nimport {catchError, retry} from 'rxjs/operators';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Reset_entity} from '@modules/user-side/reset_entity';\n\nconst httpOptions = {\n    headers: new HttpHeaders(\n        {\n            'Content-Type': 'application/json'\n        }\n    )\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ResetService {\n\n    baseUrl = 'http://localhost:8082';\n    resetUrl = '/reset_password';\n    constructor(\n        private http: HttpClient\n    ) { }\n    reset(resetEntity: Reset_entity): Observable<ResponseData> {\n        return this.http.post<ResponseData>(\n            this.baseUrl + this.resetUrl,\n            resetEntity,\n            httpOptions\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        );\n    }\n\n    handleError(error) {\n        const errorMessage = `Error Code: ${error.status} - ${error.error.error} \\nMessage: ${error.error.message}`;\n        window.alert(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {Banner} from \"../../../../../shared/interfaces/banner\";\nimport {BannerService} from \"../../../../../services/banners.service\";\n\n\nclass HttpErrorResponse {\n  message: \"No banners\";\n}\n\n@Component({\n  selector: 'app-edit-banner',\n  templateUrl: './edit-banner.component.html',\n  styleUrls: ['./edit-banner.component.scss']\n})\nexport class EditBannerComponent implements OnInit {\n\n  @Input() banner: Banner;\n  @Input() isNew: boolean;\n  uploadFile: File = null;\n  @Input() isEditing: boolean;\n  @Output() isEditingChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  constructor(private bannerService: BannerService){}\n\n  ngOnInit() {\n  }\n\n  handleFileInput(files: FileList) {\n      this.uploadFile = files[0];\n  }\n\n    editBanner(){\n      if (!this.isNew) {\n          this.isEditing = true;\n          this.isEditingChange.emit(this.isEditing);\n          this.bannerService.updateBanner(this.banner, this.uploadFile).subscribe(\n              data => console.log(data)\n          );\n          this.isEditing = false;\n      } else {\n          this.bannerService.createBanner(this.banner, this.uploadFile).subscribe(\n              data => console.log(data)\n          )\n          this.isEditing = false;\n      }\n    }\n\n\n    public getBanner(): void {\n    this.bannerService.getBanner(2).subscribe(\n        (response: Banner) => {\n          this.banner = response;\n          console.log(this.banner);\n        },\n        (error: HttpErrorResponse) => {\n          console.log(error);\n        }\n    );\n  }\n\n}\n","<div class=\"banner-card test\" *ngIf=\"banner\">\n    <div *ngIf=\"isEditing else preview\">\n        <form #editForm=\"ngForm\" (ngSubmit)=\"editBanner()\">\n            <div class=\"form-group\">\n                <input type=\"text\" [(ngModel)]=\"banner.title\" name=\"title\" class=\"form-control title-field\" id=\"title\"\n                    placeholder=\"Name\">\n                <div class=\"dropzone\">\n<!--                    <img src=\"../../../../assets/uploaded_images/{{banner.imgPath}}\" alt=\"\" />-->\n                    <img src=\"../../../../assets/add_picture.svg\" class=\"upload-icon\" alt=\"\" />\n                    <input type=\"file\" (change)=\"handleFileInput($event.target.files);\" name=\"file\" id=\"file\"\n                        class=\"upload-input\" />\n                </div>\n            </div>\n            <div>\n                <button (click)=\"isEditing = !isEditing; isEditingChange.emit(isEditing)\" type=\"reset\" class=\"cancel-button\">Cancel</button>\n                <button type=\"submit\" class=\"save-button\" >Save</button>\n            </div>\n        </form>\n        <div class=\"banner-date inside outside\">\n            <p>Last updated {{banner.lastUpdated}} </p>\n        </div>\n    </div>\n    <ng-template #preview>\n        <div class=\"banner-title\">\n            <h6>{{banner.title | uppercase}} </h6>\n        </div>\n        <div class=\"img-container\">\n            <img src=\"../../../../assets/uploaded_images/{{banner.imgPath}}\" alt=\"\" />\n        </div>\n        <button class=\"save-button\" (click)=\"isEditing = !isEditing; isEditingChange.emit(isEditing)\">Edit</button>\n        <div class=\"banner-date inside outside\">\n            <p>Last updated {{banner.lastUpdated}} </p>\n        </div>\n    </ng-template>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Article } from '@shared/interfaces/article';\nimport { AppConstants } from '@shared/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n\n  constructor(private http: HttpClient) { }\n\n  getArticles(): Observable<Article[]> {\n    return this.http.get<Article[]>(AppConstants.API_URL + '/articles');\n  }\n\n  addArticle(formData): Observable<any> {\n    return this.http.post(`${AppConstants.API_URL}/articles`, formData,\n        { responseType: 'text'});\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport class AuthInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const basicHeader = JSON.parse(JSON.stringify(sessionStorage.getItem('Authorization')));\n        if (basicHeader) {\n            req = req.clone({\n                setHeaders: {\n                    Authorization: basicHeader,\n                }\n            });\n        }\n        return next.handle(req);\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor() {}\n}\n","<router-outlet></router-outlet>","import {Pipe, PipeTransform} from '@angular/core';\nimport {Video} from '../shared/interfaces/video';\n\n@Pipe({\n    name: 'VideoPipe'\n})\nexport class VideoPipe implements PipeTransform {\n\n    transform(value: Video[], input: any, view: any): any {\n        let res = [];\n        if (input) {\n            res = this.filterInput(value, input);\n            return this.filterView(res, view);\n        } else {\n            return this.filterView(value, view);\n        }\n    }\n\n    filterInput(value: any, input: any): any {\n        input = input.toLowerCase();\n        const res = [];\n        for (const val of value) {\n            if (val.title !== '') {\n                const lowerVal = val.title.toLowerCase();\n                if (lowerVal.indexOf(input) >= 0) {\n                    res.push(val);\n                }\n            }\n            else{\n                if (input === 'none') {\n                    res.push(val);\n                }\n            }\n        }\n        return res;\n    }\n\n\n    filterView(value: any, view: any): any {\n        if (view !== null) {\n            const res = [];\n            for (const val of value) {\n                if (val.publish === view) {\n                    res.push(val);\n                }\n            }\n            return res;\n        } else {\n            return value;\n        }\n    }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {SportCategory} from '../shared/interfaces/sportCategory';\nimport {AppConstants} from '../shared/app.constants';\n\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SportCategoryService {\n\n    constructor(private httpClient: HttpClient) {\n    }\n\n    getNullParent(): any {\n        return this.httpClient.get<Array<SportCategory>>('http://localhost:8082/sportCategory/basicNavigationList');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { faFilm } from '@fortawesome/free-solid-svg-icons';\nimport {faTwitter} from '@fortawesome/free-brands-svg-icons';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  filmIcon = faTwitter;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"container-fluid footer-page bg-danger\">\n        <div class=\"row p-3\">\n            <div class=\"col-xl-2 col-lg-4 col-md-6 col-sm-12 p-0 m-0\">\n                <h3 class=\"text-white\">Sport Hub</h3>\n            </div>\n            <div class=\"col-xl-10 col-lg-8 col-md-6 col-sm-12 text-xl-end text-lg-end text-md-end text-sm-start text-start\">\n                <p class=\"footer-content-size p-0 m-0 text-white\">Copyright &copy;2021 Sport Hub</p>\n                <a href=\"#\" class=\"footer-content-size nav-link text-white text-xl-end text-lg-end text-md-end text-sm-start text-start p-0\">Privacy/Terms</a>\n            </div>\n        </div>\n</footer>\n","import {Component, OnInit, Input} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {User} from '../user';\nimport {ResponseData} from '../response-data';\nimport {RegistrationClientService} from '@services/Registration.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-registration-form',\n    templateUrl: './registration.component.html',\n    styleUrls: [ './registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n    visible = false;\n    buttonRegister = true;\n    submitted = false;\n\n    private registrationData: User;\n    registrationForm: FormGroup;\n\n\n    constructor(\n        public registrationClient: RegistrationClientService, public router: Router\n    ) {\n    }\n\n\n    enableForm(enable: boolean) {\n        if (enable) {\n\n            this.registrationForm.get('username').enable();\n            this.registrationForm.get('password').enable();\n            this.registrationForm.get('email').enable();\n            this.buttonRegister = true;\n        } else {\n            this.registrationForm.get('username').disable();\n            this.registrationForm.get('password').disable();\n            this.registrationForm.get('email').disable();\n            this.buttonRegister = false;\n        }\n    }\n\n    register() {\n        this.submitted = true;\n        if (this.registrationForm.invalid) {\n            return;\n        } else {\n            this.registrationData = new User();\n            this.registrationData.setUsername(this.registrationForm.get('username').value);\n            this.registrationData.setEmail(this.registrationForm.get('email').value);\n            this.registrationData.setPassword(this.registrationForm.get('password').value);\n            this.registrationClient.register(this.registrationData).subscribe((data: ResponseData) => {\n                console.log('RESPONSE DATA ' + JSON.stringify(data));\n            if (data.responseCode === '200') {\n                    window.alert(data.responseMsg);\n                    this.visible = true;\n                    this.enableForm(false);\n                } else {\n                    this.enableForm(true);\n                }\n            }, error => {\n                console.log('An Error Occured ' + error);\n            });\n            this.router.navigateByUrl('/');\n        }\n    }\n\n    ngOnInit() {\n        this.registrationForm = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            email: new FormControl('', [Validators.required, Validators.email]),\n            password: new FormControl('', [Validators.required])\n        });\n    }\n\n    setSubmitted(submitted: boolean) {\n        this.submitted = submitted;\n    }\n\n}\n","<app-footer></app-footer>\n<div class=\"sidenav\">\n    <div class=\"login-main-text\">\n        <h2>Application<br> Registration Page</h2>\n        <p>Register from here to access.</p>\n    </div>\n</div>\n<!--<div class=\"main\">-->\n<!--<div class=\"col-md-6 col-sm-12\">-->\n<!--    <div class=\"login-form\">-->\n\n        <div class=\"alert alert-danger\" *ngIf=\"registrationForm.controls['username'].errors && submitted\">\n            <div *ngIf=\"registrationForm.controls['username'].errors.required\">First Name is required</div>\n        </div>\n        <div class=\"alert alert-danger\" *ngIf=\"registrationForm.controls['password'].errors  && submitted\">\n            <div *ngIf=\"registrationForm.controls['password'].errors.required\">Last Name is required</div>\n        </div>\n        <div class=\"alert alert-danger\" *ngIf=\"registrationForm.controls['email'].errors  && submitted\">\n            <div *ngIf=\"registrationForm.controls['email'].errors.required\">Email is required</div>\n            <div *ngIf=\"registrationForm.controls['email'].errors.email\">Please Enter Valid Email Format</div>\n        </div>\n<!--    </div>-->\n<!--</div>-->\n<div class=\"main\">\n    <div class=\"col-md-6 col-sm-12\">\n        <div class=\"login-form\">\n            <form [formGroup]=\"registrationForm\" class=\"form-signin\">\n\n                <div class=\"form-group\">\n                    <input type=\"email\" formControlName=\"email\" placeholder=\"Email\" class=\"form-control\" id=\"email\">\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"username\" placeholder=\"username\" class=\"form-control\"\n                           id=\"username\">\n                </div>\n                <div class=\"form-group\">\n\n                    <input type=\"text\" placeholder=\"password\" class=\"form-control\" id=\"password\"\n                           formControlName=\"password\">\n                </div>\n\n\n                <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"buttonRegister==false\"\n                        (click)=\"register()\"\n                >Register\n                </button>\n\n            </form>\n        </div>\n        <div class=\"col-md-6\">\n            <div *ngIf=\"visible==true\">\n            </div>\n        </div>\n    </div>\n</div>\n<!--</div>-->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BannersManagementComponent } from './pages/banners-management/banners-management.component';\nimport { EditBannerComponent } from './components/edit-banner/edit-banner.component';\nimport { BannerItemComponent } from './components/banner-item/banner-item.component';\nimport { BannersListComponent } from './components/banners-list/banners-list.component';\nimport { PredefinedCategoriesSettingsComponent } from './components/predefined-categories-settings/predefined-categories-settings.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {BannersHeaderComponent} from \"./components/banners-header/banners-header.component\";\nimport {CategoryItemComponent} from \"./components/category-item/category-item.component\";\nimport {ModuleModule} from \"../../module.module\";\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatSelectModule} from \"@angular/material/select\";\n\n\n@NgModule({\n    declarations: [BannersManagementComponent, EditBannerComponent, BannerItemComponent, BannersListComponent, PredefinedCategoriesSettingsComponent, BannersHeaderComponent, CategoryItemComponent],\n  exports: [\n      BannerItemComponent,\n      BannersListComponent,\n      EditBannerComponent,\n      BannersManagementComponent\n  ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        ModuleModule,\n        FontAwesomeModule,\n        MatFormFieldModule,\n        MatSelectModule\n    ]\n})\nexport class AdminBannersModule { }\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Video} from '../shared/interfaces/video';\n\n@Pipe({name: 'safe'})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {\n    }\n\n    transform(video: Video): any {\n        let res: string;\n        if (!video.uploaded) {\n            const url = video.url;\n\n            const arr = url.split('?v=');\n            const link = arr[1].split('&')[0];\n            res = 'https://www.youtube-nocookie.com/embed/' + link + '?controls=1';\n            res = (this.sanitizer.bypassSecurityTrustResourceUrl(res) as string);\n        } else {\n            res = 'assets/videos/' + video.url;\n        }\n        console.log(res);\n        return res;\n    }\n}\n","export enum MessagesEnum{\n    successful, warn\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {AdminBannersModule} from \"@modules/admin-side/admin-banners/admin-banners.module\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ModuleModule} from '@modules/module.module';\nimport {AuthentificationService} from '@services/authentification.service';\nimport {UserService} from '@services/user.service';\nimport {AuthInterceptor} from './interceptors/auth.interceptor';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n    declarations: [\n        AppComponent\n        //  Forgot_passwordComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        ModuleModule,\n        FontAwesomeModule,\n        HttpClientModule,\n        AdminBannersModule,\n        HttpClientModule,\n        NoopAnimationsModule,\n        MatListModule,\n        FormsModule,\n        MatSlideToggleModule\n    ],\n    providers: [\n        UserService,\n        AuthentificationService,\n        { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    ],\n    bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner-list-userside',\n  templateUrl: './banner-list-userside.component.html',\n  styleUrls: ['./banner-list-userside.component.scss']\n})\nexport class BannerListUsersideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>banner-list-userside works!</p>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Video} from '../../../../shared/interfaces/video';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {VideoService} from '../../../../services/video.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-video-form',\n    templateUrl: './video-form.component.html',\n    styleUrls: ['./video-form.component.scss']\n})\nexport class VideoFormComponent implements OnInit {\n\n    formVideo: Video = {\n        id: 0,\n        title: '',\n        url: '',\n        publish: false,\n        uploaded: true,\n        showComments: true,\n    };\n\n    file: File;\n\n    disable = true;\n\n    constructor(\n        public dialogRef: MatDialogRef<VideoFormComponent>,\n        private videoService: VideoService,\n        private router: Router,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n    }\n\n    changeDisable(): void {\n        this.disable = false;\n    }\n\n    handleFileInput(files: FileList): void {\n        this.changeDisable();\n        this.file = files.item(0);\n    }\n\n    addVideo(): void {\n        if (this.data == null || this.data.change == null) {\n            if (this.formVideo.url) {\n                this.file = null;\n                this.formVideo.uploaded = false;\n            }\n            this.videoService.add(this.formVideo, this.file);\n        } else {\n            if (this.formVideo.url && this.data.video.uploaded) {\n                this.data.video.uploaded = false;\n                this.data.video.url = this.formVideo.url;\n                this.videoService.update(this.data.video, this.file);\n            }\n\n            if (this.formVideo.url !== this.data.video.url) {\n                this.data.video.url = this.formVideo.url;\n                this.videoService.update(this.data.video, this.file);\n            }\n\n            if (!this.data.video.uploaded && this.file) {\n                this.data.video.uploaded = true;\n                this.videoService.update(this.data.video, this.file);\n            }\n            this.dialogRef.close(this.data.video);\n        }\n        this.dialogRef.close();\n    }\n\n    checkUrlInput(): void {\n        if (this.formVideo.url) {\n            this.changeDisable();\n        } else {\n            this.disable = true;\n        }\n    }\n}\n","<h1 mat-dialog-title class=\"text-center\">Add new video</h1>\n<div mat-dialog-content class=\"container m-md-3\">\n    <mat-label>\n        <h4 class=\"text-secondary mt-5\">ADD URL</h4>\n        <label class=\"w-100 justify-content-center\">\n            <input id=\"url-input\" [(ngModel)]=\"formVideo.url\" (change)=\"checkUrlInput()\" type=\"text\" placeholder=\"Add new url\"/>\n        </label>\n    </mat-label>\n    <mat-label *ngIf=\"!formVideo.url\">\n        <h4 class=\"text-secondary mt-4\">UPLOAD</h4>\n        <label id=\"upload-label\" class=\"w-80\" for=\"upload-video\">\n            <div class=\"upload-section\">\n                <span *ngIf=\"file\" class=\"file-input\">{{ file.name }}</span>\n                <span *ngIf=\"!file\" class=\"file-input\"></span>\n                <span class=\"badge-danger file-button text-center align-items-center\">Upload</span>\n            </div>\n        </label>\n        <label>\n            <input type=\"file\" id=\"upload-video\" (change)=\"handleFileInput($event.target.files)\">\n        </label>\n\n    </mat-label>\n</div>\n<div mat-dialog-actions class=\"float-right mt-0\">\n    <button mat-button class=\"text-danger border-0 text-center\" (click)=\"onNoClick()\">Cancel</button>\n    <button mat-button class=\"bg-danger border-0 text-white text-center\" (click)=\"addVideo()\" [disabled]=\"disable\">Add</button>\n    <!--  <button mat-button [mat-dialog-close]=\"data.title\" cdkFocusInitial>Ok</button>-->\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AppConstants} from '../../../../shared/app.constants';\nimport {AuthentificationService} from '../../../../services/authentification.service';\nimport {User} from '../../../../shared/interfaces/user';\nimport {Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n    languageOptions = [];\n\n    language = null;\n\n    user: User = null;\n\n    searchText: string = null;\n\n\n    constructor(private authenticationService: AuthentificationService,\n                private router: Router) {\n    }\n\n\n    ngOnInit(): void {\n        this.languageOptions = AppConstants.languageOptions;\n        this.language = this.languageOptions[0];\n        if (this.authenticationService.isUserLoggedIn()) {\n            this.authenticationService.getLoggedUser().subscribe(data => {\n                    this.user = data;\n                },\n                error => {\n                    return this.router.navigate(['/login']);\n                });\n        }\n    }\n\n\n    // tslint:disable-next-line:variable-name\n    changeLanguage(language_: any): void {\n        this.language = language_;\n    }\n}\n","<header class=\"mb-2\">\n    <div class=\"container-fluid row m-0 p-0 border-bottom border-1\">\n        <div class=\"col-md-2 bg-danger text-center\">\n            <a href=\"/\" class=\"text-white\">\n                <h2 id=\"header-name\">\n                    Sports Hub\n                </h2>\n            </a>\n        </div>\n        <div class=\"col-md-4 text-center border-right border-1\">\n            <div class=\"search-box\">\n                <span class=\"material-icons\" id=\"search-icon\">\n                    search\n                </span>\n                <input type=\"text\" placeholder=\"Search by\" [(ngModel)]=\"searchText\" [matAutocomplete]=\"auto\">\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option>23</mat-option>\n                    <mat-option>23</mat-option>\n                    <mat-option>23</mat-option>\n                </mat-autocomplete>\n            </div>\n        </div>\n        <div class=\"col-md-2 text-center border-right border-1\">\n            <div class=\"share-box\">\n                <label class=\"text-secondary\">Share</label>\n                <div class=\"btn-group share-group\">\n                    <a href=\"#\" class=\"fa fa-facebook share-button text-dark icon\"></a>\n                    <a href=\"#\" class=\"fa fa-twitter share-button text-dark icon\"></a>\n                    <a href=\"#\" class=\"fa fa-google-plus share-button text-dark icon\"></a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-3 text-center text-center\">\n            <div class=\"user-div\" *ngIf=\"user\">\n                <div class=\"user-image row justify-content-center\">\n                    <div class=\"col-md-4 col-2 text-end p-0\">\n                        <img src=\"favicon.ico\">\n                    </div>\n                    <div class=\"col-md-8 col-10 text-start d-flex\">\n                        <div class=\"col username-admin-div\" *ngIf=\"user.role === 'ROLE_ADMIN'\">\n                            <div class=\"row\">\n                                {{ user.username }}\n                            </div>\n                            <div class=\"row text-secondary p-0\">\n                                <h6 class=\"administrator-text\">Administrator</h6>\n                            </div>\n                        </div>\n                        <div class=\"username-user-div\" *ngIf=\"user.role === 'ROLE_USER'\">\n                            {{ user.username }}\n                        </div>\n                        <div class=\"col p-0\">\n                            <mat-form-field color=\"warn\">\n                                <mat-select>\n                                    <mat-option (click)=\"router.navigate(['user/' + user.id])\">\n                                        Profile\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"!user\" class=\"login-box flex-row\">\n                <a href=\"/registration\" class=\"bg-white btn text-danger sing-up-btn\">Sign up</a>\n                <a href=\"/login\" class=\"bg-white btn text-danger login-btn\">Log in</a>\n            </div>\n        </div>\n        <div class=\"col-md-1 align-self-center text-end language\">\n            <mat-form-field appearance=\"legacy\" color=\"warn\">\n                <mat-select [value]=\"language.viewValue\">\n                    <mat-option *ngFor=\"let language_ of languageOptions\" [value]=\"language_.viewValue\"\n                                (click)=\"changeLanguage(language_)\">\n                        {{ language_.viewValue }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n</header>\n","import {Observable, throwError} from 'rxjs';\nimport {ResponseData} from '@modules/user-side/response-data';\nimport {catchError, retry} from 'rxjs/operators';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {User} from '@modules/user-side/user';\n\n\nconst httpOptions = {\n    headers: new HttpHeaders(\n        {\n            'Content-Type': 'application/json'\n        }\n    )\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SendEmailService {\n\n    baseUrl = 'http://localhost:8082';\n    forgotUrl = '/forgot_password';\n    constructor(\n        private http: HttpClient\n    ) { }\n    send(requestRegistrationDTO: User): Observable<ResponseData> {\n        return this.http.post<ResponseData>(\n            this.baseUrl + this.forgotUrl,\n            requestRegistrationDTO,\n            httpOptions\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        );\n    }\n\n    handleError(error) {\n        let errorMessage = `Error Code: ${error.status} - ${error.error.error} \\nMessage: ${error.error.message}`;\n        window.alert(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>banner works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Video} from '../../../../shared/interfaces/video';\nimport {VideoService} from '../../../../services/video.service';\nimport {VideoFormComponent} from '../video-form/video-form.component';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-video-edit',\n    templateUrl: './video-edit.component.html',\n    styleUrls: ['./video-edit.component.scss']\n})\nexport class VideoEditComponent implements OnInit {\n\n    id: number;\n\n    video: Video;\n\n    constructor(private activateRoute: ActivatedRoute,\n                private dialog: MatDialog,\n                private videoService: VideoService) {\n        this.id = activateRoute.snapshot.params.id;\n    }\n\n    ngOnInit(): void {\n        this.videoService.getById(this.id).subscribe(data => {\n            this.video = data;\n        });\n    }\n\n    allowCommentChange(): void {\n        this.video.showComments = !this.video.showComments;\n    }\n\n    changeVideo(): void {\n        // @ts-ignore\n        const dialogRef = this.dialog.open(VideoFormComponent, {\n            width: document.body.offsetWidth * 0.5,\n            data: {\n                change: true,\n                video: this.video\n            }\n        });\n        dialogRef.afterClosed().subscribe(data => {\n            this.video.url = data.url;\n        });\n    }\n\n    save(): void {\n        this.videoService.saveVideo(this.video);\n    }\n}\n","<div class=\"col-12 pl-5 border-bottom\">\n    <div class=\"container-fluid d-flex justify-content-between\">\n        <h2 class=\"text-danger\">Video</h2>\n        <div class=\"text-danger mr-md-4\">\n            <a href=\"/admin/videos\">\n                <button mat-raised-button color=\"warn\" class=\"add-button text-danger bg-white\">\n                    Cancel\n                </button>\n            </a>\n            <button mat-raised-button color=\"warn\" class=\"add-button\" id=\"save\" (click)=\"save()\">\n                Save\n            </button>\n        </div>\n    </div>\n</div>\n<app-admin-navigation></app-admin-navigation>\n<mat-card class=\"container-fluid col-6 m-auto mt-md-5 position-relative\">\n    <div class=\"preview float-right\">\n        <a [href]=\"'videos/'+id\" class=\"preview-text text-danger\" (click)=\"save()\">\n        <span class=\"material-icons align-middle\">\n            visibility\n        </span>\n            Preview\n        </a>\n    </div>\n    <video *ngIf=\"video.uploaded\" class=\"mt-3 video\" [src]=\"video | safe\" (click)=\"changeVideo()\">\n    </video>\n    <div *ngIf=\"video.uploaded == false\">\n        <iframe id=\"frame\" [src]=\"video | safe\"></iframe>\n        <div class=\"text-right\">\n            <button mat-raised-button color=\"warn\" class=\"add-button\" id=\"change-button\" (click)=\"changeVideo()\">\n                CHANGE\n            </button>\n        </div>\n    </div>\n    <div class=\"text-left m-3\">\n        <h4 class=\"text-secondary\">VIDEO TITLE</h4>\n        <label class=\"w-100 justify-content-center\">\n            <input matInput [(ngModel)]=\"video.title\" type=\"text\" placeholder=\"Add title\" required=\"true\"/>\n        </label>\n    </div>\n    <mat-slide-toggle class=\"text-left w-100 ml-3\" labelPosition=\"before\" color=\"warn\" [checked]=\"video.showComments\"\n                      (toggleChange)=\"allowCommentChange()\">\n        Comments: Show\n    </mat-slide-toggle>\n</mat-card>\n\n\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {SportCategory} from \"../../../../../shared/interfaces/sportCategory\";\n\n@Component({\n  selector: 'app-category-item',\n  templateUrl: './category-item.component.html',\n  styleUrls: ['./category-item.component.scss']\n})\nexport class CategoryItemComponent implements OnInit {\n\n  @Input() predefinedCategory: SportCategory;\n  @Output() categoryChange: EventEmitter<SportCategory> = new EventEmitter<SportCategory>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  categoryChanged() {\n    this.categoryChange.emit(this.predefinedCategory);\n  }\n\n}\n","<div class=\"list-item pt-2 pb-2\">\n    <div class=\"float-left w-50 pl-2 pt-2\">\n        <p>{{predefinedCategory?.name}}</p>\n    </div>\n    <div class=\"float-right w-50 pl-2\">\n<!--        <p>{{predefinedCategory?.showBanners}}</p>-->\n        <div class=\"form-check form-switch switch pl-5\">\n            <input [(ngModel)]=\"predefinedCategory.showBanners\" (ngModelChange)=\"categoryChanged()\" class=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\">\n            <label *ngIf=\"predefinedCategory.showBanners\" class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Show</label>\n            <label *ngIf=\"!predefinedCategory.showBanners\" class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Hide</label>\n        </div>\n    </div>\n</div>\n","import {Component, Inject, OnInit, Input} from '@angular/core';\nimport {FlashMessage} from '../../../shared/interfaces/flashMessage';\n\n@Component({\n    selector: 'app-flash-message',\n    templateUrl: './flash-message.component.html',\n    styleUrls: ['./flash-message.component.scss']\n})\nexport class FlashMessageComponent implements OnInit {\n\n    @Input()\n    messages: FlashMessage[];\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    clear(message: any): void {\n        // @ts-ignore\n        this.messages.splice(this.messages.indexOf(message), 1);\n    }\n}\n","<div class=\"messages\">\n    <div *ngFor=\"let message of messages\">\n        <div class=\"row bg-white message\">\n            <div class=\"col-2 mt-3\">\n                <span class=\"material-icons\" id=\"success\">\n                    check_circle\n                </span>\n            </div>\n            <div class=\"col-10 mt-3\">\n                <button class=\"close-btn\" (click)=\"clear(message)\">\n                    <span class=\"material-icons\">\n                        clear\n                    </span>\n                </button>\n                <b>{{message.title}}</b>\n                <h4>{{message.text}}</h4>\n            </div>\n        </div>\n    </div>\n</div>\n","export class Reset_entity{\n    newPassword: string;\n    confirmPassword: string;\n    token: string;\n\n    public getToken(): string {\n        return this.token;\n    }\n\n    public setToken(token: string) {\n        this.token = token;\n    }\n    public setNewPassword(newPassword: string) {\n        this.newPassword = newPassword;\n    }\n\n    public getNewPassword() {\n        return this.newPassword;\n    }\n\n    public setConfirmPassword(confirmPassword: string) {\n        this.confirmPassword = confirmPassword;\n    }\n\n    public getConfirmPassword() {\n        return this.confirmPassword;\n    }\n}\n","\nimport {AppConstants} from '../../../../shared/app.constants';\nimport {Component, OnInit, Renderer2} from '@angular/core';\nimport {SportCategory} from '@shared/interfaces/sportCategory';\nimport {SportCategoryService} from '@services/sportCategory.service';\n\n\n\n@Component({\n        selector: 'app-navigation',\n        templateUrl: './navigation.component.html',\n        styleUrls: ['./navigation.component.scss']\n    }\n)\nexport class NavigationComponent implements OnInit {\n\n    beforeCategories = AppConstants.Paths.before;\n    afterCategories = AppConstants.Paths.after;\n\n    layers = [];\n\n    sportCategories: Array<SportCategory>;\n\n\n    constructor(private sportCategoryService: SportCategoryService) {\n    }\n\n\n    private generate_first_layer(sportCategory: SportCategory): void {\n        if (sportCategory.parent === null) {\n            if (this.layers.length) {\n                if (this.layers[0][0][0].parent === sportCategory.id) {\n                    console.log('Yes');\n                } else {\n                    this.layers = [];\n                }\n            }\n        }\n        if (this.layers.length !== 0) {\n            for (const layer of this.layers) {\n                for (const layerCategory of layer) {\n                    if (layerCategory.parent === sportCategory.id) {\n                        this.layers = this.layers.slice(0, this.layers.indexOf(layer) + 1);\n                    }\n                }\n            }\n        }\n    }\n\n\n    private check_double_click(sportCategory: SportCategory): void {\n        for (const layer of this.layers) {\n            for (const layerElement of layer) {\n                for (const layerCategory of layerElement) {\n                    if (layerCategory.parent === sportCategory.id) {\n                        this.layers = this.layers.slice(0, this.layers.indexOf(layer) + 1);\n                    }\n                }\n            }\n        }\n    }\n\n\n    private check_previous_layer(sportCategory: SportCategory): void {\n        for (const layer of this.layers) {\n            for (const layerElement of layer) {\n                for (const layerCategory of layerElement) {\n                    if (layerCategory.parent === sportCategory.parent) {\n                        this.layers = this.layers.slice(0, this.layers.indexOf(layer) + 1);\n                    }\n                }\n            }\n        }\n    }\n\n    private click_layer_action(sportCategory: SportCategory): void {\n        let copy = false;\n        let index;\n        if (sportCategory.children.length !== 0) {\n            sportCategory.children.forEach(elem => {\n                for (const layer of this.layers) {\n                    for (const layerElement of layer) {\n                        for (const layerCategory of layerElement) {\n                            if (layerCategory.id === elem.id) {\n                                copy = true;\n                                index = this.layers.indexOf(layer);\n                            }\n                        }\n                    }\n                }\n                elem.parent = sportCategory.id;\n            });\n        } else {\n            this.last_layer_action();\n            return;\n        }\n        if (!copy) {\n            this.layers.push([sportCategory.children]);\n        } else {\n            this.clearLayers();\n            // this.layers = this.layers.slice(0, index + 1);\n        }\n    }\n\n    private last_layer_action(): void {\n        this.clearLayers();\n        return;\n    }\n\n    getChild(sportCategory: SportCategory): void {\n        console.log(this.sportCategories);\n        console.log(this.layers);\n\n        // first layer\n        this.generate_first_layer(sportCategory);\n\n        this.check_double_click(sportCategory);\n\n        // for layer from previous\n        this.check_previous_layer(sportCategory);\n\n        // for double click layer\n        this.click_layer_action(sportCategory);\n\n        return;\n    }\n\n    clearLayers(): void {\n        this.layers = [];\n    }\n\n    ngOnInit(): void {\n        this.sportCategoryService.getNullParent().subscribe(data => {\n            for (const category of data) {\n                category.parent = null;\n            }\n            this.sportCategories = data;\n        });\n    }\n}\n","<div class=\"position-absolute w-18 pt-3\">\n    <div class=\"navbar pl-5 pr-5 w-18 float-left align-items-baseline\">\n        <div class=\"nav-item\">\n            <div *ngFor=\"let category of beforeCategories\">\n                <a class=\"link text-danger\" [href]=\"category.ulr\">{{category.name | uppercase}}</a>\n            </div>\n            <div *ngFor=\"let category of sportCategories\" class=\"nav-item text-danger\">\n                <a class=\"link text-danger\" (click)=\"getChild(category)\">\n                    {{ category.name }}\n                </a>\n            </div>\n\n\n            <div *ngFor=\"let category of afterCategories\">\n                <a class=\"link text-danger\" [href]=\"category.ulr\">{{category.name | uppercase}}</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"navbar p-4 w-18 float-left bg-light align-items-baseline\" *ngFor=\"let layer of layers\">\n        <div class=\"nav-item\" *ngFor=\"let comp of layer\">\n            <div class=\"text-danger\" *ngFor=\"let t of comp\" (click)=\"getChild(t)\">\n                <a class=\"nav-link text-danger\">{{ t.name }}</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n<!--copy-->\n\n<div class=\"position-relative d-print-none pt-3\">\n    <div class=\"navbar pl-5 pr-5 w-18 float-left align-items-baseline\">\n        <div class=\"nav-item\">\n\n\n            <div *ngFor=\"let category of beforeCategories\">\n                <a class=\"link text-danger\" [href]=\"category.ulr\">{{category.name | uppercase}}</a>\n            </div>\n\n\n            <div *ngFor=\"let category of sportCategories\" class=\"nav-item text-danger\">\n                <a class=\"link text-danger\" (click)=\"getChild(category)\">\n                    {{ category.name }}\n                </a>\n            </div>\n\n            <div *ngFor=\"let category of afterCategories\">\n                <a class=\"link text-danger\" [href]=\"category.ulr\">{{category.name | uppercase}}</a>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Banner, BannerStatusShort} from \"../../../../../shared/interfaces/banner\";\nimport {BannerService} from \"../../../../../services/banners.service\";\nimport {SportCategory} from \"../../../../../shared/interfaces/sportCategory\";\n\n@Component({\n  selector: 'app-banners-management',\n  templateUrl: './banners-management.component.html',\n  styleUrls: ['./banners-management.component.scss']\n})\nexport class BannersManagementComponent implements OnInit {\n  banners: Banner[];\n  predefined: SportCategory[];\n  selectedBanner: Banner;\n  isSelectedBannerNew: boolean = true;\n  isEditing: boolean;\n\n  constructor(private bannerService: BannerService) { }\n\n  ngOnInit(): void {\n    this.bannerService.getBanners().subscribe( data =>{\n      this.banners = data;\n    });\n    this.bannerService.getPredefined().subscribe( data =>{\n      this.predefined = data;\n    })\n  }\n\n  setSelectedBanner(banner: Banner, isNew = false) {\n    this.isSelectedBannerNew = isNew;\n    this.selectedBanner = banner;\n    this.isEditing = false;\n  }\n\n  addBanner() {\n    this.setSelectedBanner({title: ''}, true);\n  }\n}\n","<div>\n    <app-header></app-header>\n    <app-banners-header (addBanner)=\"addBanner()\"></app-banners-header>\n    <app-admin-navigation></app-admin-navigation>\n    <div class=\"banners-management pt-4\">\n        <app-banners-list [banners]=\"banners\" (selectedBannerChanged)=\"setSelectedBanner($event)\" ></app-banners-list>\n        <app-edit-banner [(isEditing)]=\"isEditing\" [isNew]=\"isSelectedBannerNew\" [banner]=\"selectedBanner\"></app-edit-banner>\n        <app-predefined-categories-settings [predefinedCategories]=\"predefined\"></app-predefined-categories-settings>\n    </div>\n    <app-footer></app-footer>\n</div>\n","import {Injectable, OnInit} from '@angular/core';\nimport {ResponseData} from '../modules/user-side/response-data';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {User} from '../shared/interfaces/user';\nimport {UserService} from './user.service';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthentificationService implements OnInit {\n    private baseUrl = 'http://localhost:8082';\n    private loginUrl = '/login';\n    private httpOptions: { headers: HttpHeaders };\n\n    constructor(\n        private http: HttpClient,\n        private userService: UserService\n    ) {\n    }\n\n\n    login(requestLoginDTO): Observable<ResponseData> {\n\n        this.httpOptions = {\n            headers: new HttpHeaders(\n                {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Basic ' + btoa(requestLoginDTO.email + ':' + requestLoginDTO.password)\n                }\n            )\n        };\n        return this.http.post<ResponseData>(\n            this.baseUrl + this.loginUrl,\n            JSON.stringify(requestLoginDTO),\n            this.httpOptions\n        ).pipe(\n            map(\n                userData => {\n                    sessionStorage.setItem('email', requestLoginDTO.email);\n                    const authString = 'Basic ' + btoa(requestLoginDTO.email + ':' + requestLoginDTO.password);\n                    sessionStorage.setItem('Authorization', authString);\n                    return userData;\n                })\n        );\n    }\n\n    // handleError(error) {\n    //     let errorMessage = `Error Code: ${error.status} - ${error.error.error} \\nMessage: ${error.error.message}`;\n    //     window.alert(errorMessage);\n    //     return throwError(errorMessage);\n    // }\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem('email');\n        console.log(!(user === null));\n        return !(user === null);\n    }\n\n    logOut() {\n        sessionStorage.removeItem('email');\n    }\n\n    getLoggedUser(): Observable<User>{\n        return this.userService.getByEmail(sessionStorage.getItem('email'));\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ResponseData} from '../response-data';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {SendEmailService} from '@services/SendEmail.service';\nimport {User} from '../user';\n\n@Component({\n    selector: 'app-forgot-form',\n    templateUrl: './forgot_password.component.html',\n    styleUrls: ['./forgot_password.component.scss']\n})\nexport class Forgot_passwordComponent implements OnInit {\n    visible = false;\n    submitted = false;\n    forgotForm: FormGroup;\n    buttonForgot = true;\n    private user: User;\n\n    constructor(public sendEmailService: SendEmailService, public router: Router,\n                private activatedRoute: ActivatedRoute) {\n    }\n\n\n    enableForm(enable: boolean): void {\n        if (enable) {\n            this.forgotForm.get('email').enable();\n\n            this.buttonForgot = true;\n        } else {\n            this.forgotForm.get('email').disable();\n            this.buttonForgot = false;\n        }\n    }\n\n    sendMail() {\n        document.getElementById('text').innerHTML = 'Email sent successfully';\n        this.submitted = true;\n        if (this.forgotForm.invalid) {\n            return;\n        } else {\n            this.user = new User();\n            this.user.setEmail(this.forgotForm.get('email').value);\n            console.log(this.user.getEmail());\n            this.sendEmailService.send(this.user).subscribe((data: ResponseData) => {\n                console.log('RESPONSE DATA ' + JSON.stringify(data));\n                if (data.responseCode === '200') {\n                    window.alert(data.responseMsg);\n                    this.visible = true;\n                    this.enableForm(false);\n                } else {\n                    this.enableForm(true);\n                }\n            }, error => {\n                console.log('An Error Occured ' + error);\n            });\n\n      //      this.router.navigateByUrl('/');\n        }\n    }\n\n    ngOnInit(): void {\n        this.forgotForm = new FormGroup({\n            //   token: new FormControl('', [Validators.required]),\n            email: new FormControl('', [Validators.required, Validators.email]),\n        });\n    }\n\n    setSubmitted(submitted: boolean): void {\n        this.submitted = submitted;\n    }\n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n\n<app-footer></app-footer>\n<div class=\"sidenav\">\n    <div class=\"login-main-text\">\n        <h2>Application<br> Forgot password Page</h2>\n    </div>\n</div>\n<div class=\"main\">\n    <div class=\"col-md-6 col-sm-12\">\n        <div class=\"login-form\">\n\n            <form>\n                <div [formGroup]=\"forgotForm\" class=\"form\">\n                    <label>Email Address</label>\n                    <div class=\"form-group\">\n                        <input type=\"email\" formControlName=\"email\" placeholder=\"Email\" class=\"form-control\" id=\"email\">\n                    </div>\n                </div>\n                <p id=\"text\"></p>\n                <!--                <button type=\"submit\" class=\"btn btn-black\" id=\"go\" value=\"Login\" (click)=\"doLogin()\">Login</button>-->\n                <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"buttonForgot==false\"\n                        (click)=\"sendMail()\"\n                >Send email\n                </button>\n            </form>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Video} from '../shared/interfaces/video';\nimport {J} from '@angular/cdk/keycodes';\nimport {Router} from '@angular/router';\nimport {log} from 'util';\nimport {AppConstants} from '../shared/app.constants';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class VideoService {\n\n    private url = '/videos/';\n\n    constructor(private httpClient: HttpClient,\n                private router: Router) {\n    }\n\n    getAll(): any {\n        return this.httpClient.get<Array<Video>>(AppConstants.API_URL + this.url);\n    }\n\n    getById(id: number): any {\n        return this.httpClient.get<Array<Video>>(AppConstants.API_URL + this.url + id);\n    }\n\n    getPublished(): any {\n        return this.httpClient.get<Array<Video>>(AppConstants.API_URL + this.url + 'published');\n    }\n\n    add(videoDTO: Video, file: File): any {\n        const formData: FormData = new FormData();\n        formData.append('file', file);\n        formData.append('videoDTO', JSON.stringify(videoDTO));\n        this.httpClient.post<Video>(AppConstants.API_URL + this.url , formData).subscribe(data => {\n            console.log(data);\n\n            this.router.navigate(['admin/videos/' + data.id]);\n        });\n    }\n\n    update(videoDTO: Video, file: File): any {\n        const formData: FormData = new FormData();\n        formData.append('file', file);\n        formData.append('videoDTO', JSON.stringify(videoDTO));\n        this.httpClient.put<Video>(AppConstants.API_URL + this.url , formData).subscribe(data => {\n            this.router.navigate(['admin/videos/' + data.id]);\n        });\n    }\n\n\n    saveVideo(videoDTO: Video): any {\n        const formData: FormData = new FormData();\n        formData.append('videoDTO', JSON.stringify(videoDTO));\n        this.httpClient.put<Video>(AppConstants.API_URL + this.url, formData).subscribe(data => {\n            this.router.navigate(['admin/videos/']);\n        });\n    }\n\n\n    delete(video: Video): any {\n        this.httpClient.delete<Video>(AppConstants.API_URL + this.url + video.id).subscribe(data => {\n            this.router.navigate(['admin/video/']);\n        });\n    }\n\n    comment(video: Video, text: string): any{\n        this.httpClient.post(AppConstants.API_URL + this.url + '/' + video.id + '/comment', text);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, Subscription} from 'rxjs';\nimport {User} from '../shared/interfaces/user';\nimport {ResponseData} from '../modules/user-side/response-data';\nimport {catchError, retry} from 'rxjs/operators';\n\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n    private readonly userUrl: string;\n\n    constructor(\n        private http: HttpClient) {\n        this.userUrl = 'http://localhost:8082/user/';\n    }\n\n    public findAll(): Observable<User[]> {          // only for ROLE = ADMIN\n        return this.http.get<User[]>('http://localhost:8082/users',\n        );\n    }\n\n    public getUserById(id: number): Observable<string[]> {\n        console.log('Trying get user ' + id);\n        const url = `${this.userUrl}${id}`;\n\n        return this.http.get<string[]>(url);\n    }\n\n    public updateAll(id: number, file: File, updData): Subscription {\n        console.log('Trying user information update...');\n        const url = `${this.userUrl}${id}`;\n\n        const formData: FormData = new FormData();\n        if (file != null) {\n            formData.append('file', file, file.name);\n        }\n        formData.append('userDTO', JSON.stringify(updData));\n\n        return this.http.post<any>(url, formData)\n            .subscribe(data => {\n                console.log('Successful user updating!!!');\n            }, error => {\n                console.log(JSON.stringify(error));\n            });\n    }\n\n\n    public deleteUser(id: number): Subscription {\n        console.log('Trying user delete...');\n        const url = `${this.userUrl}${id}`;\n\n        return this.http.delete<User>(url).subscribe(data => {\n            console.log('Successful user deleting!!!');\n        }, error => {\n            console.log(JSON.stringify(error));\n        });\n    }\n\n\n    public getByEmail(email: string): Observable<User> {\n        return this.http.get<User>(this.userUrl + 'email/' + email);\n    }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AppConstants {\n    public static URL_PORT = '8082';\n    public static API_URL = `http://localhost:${AppConstants.URL_PORT}`;\n    public static MEDIA_PATH = '';\n\n    public static Paths =\n        {\n            before: [\n                {name: 'Home', ulr: '/'}\n            ],\n            after: [\n                {name: 'Video', ulr: '/videos'},\n                {name: 'DealBook', ulr: '/'},\n                {name: 'LifeStyle', ulr: '/'},\n                {name: 'TeamHub', ulr: '/teamHub'}\n            ]\n        };\n\n    public static languageOptions = [\n        {value: 1, viewValue: 'EN'},\n        {value: 2, viewValue: 'UA'},\n        {value: 2, viewValue: 'FR'},\n        {value: 3, viewValue: 'DE'}\n    ]\n\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Video} from '../../../../shared/interfaces/video';\nimport {VideoService} from '../../../../services/video.service';\nimport {FlashMessage} from '../../../../shared/interfaces/flashMessage';\nimport {MessagesEnum} from '../../../../shared/interfaces/messagesEnum';\nimport {Message} from '@angular/compiler/src/i18n/i18n_ast';\n\n@Component({\n    selector: 'app-video-form-confirm',\n    templateUrl: './video-form-confirm.component.html',\n    styleUrls: ['./video-form-confirm.component.scss']\n})\nexport class VideoFormConfirmComponent implements OnInit {\n\n    video: Video;\n    delete = false;\n    publish = false;\n\n    constructor(public dialogRef: MatDialogRef<VideoFormConfirmComponent>,\n                @Inject(MAT_DIALOG_DATA) private data: any,\n                private videoService: VideoService) {\n    }\n\n    ngOnInit(): void {\n        this.video = this.data.video;\n        if (this.data.delete === true) {\n            this.delete = true;\n        }\n        if (this.data.publish === true) {\n            this.publish = true;\n        }\n        console.log(this.data);\n    }\n\n    deleteVideo(): void {\n        this.videoService.delete(this.video);\n\n        this.dialogRef.close({\n            message: this.deleteMessage()\n        });\n    }\n\n    publishVideo(): void {\n        this.video.publish = !this.video.publish;\n        this.videoService.saveVideo(this.video);\n        this.dialogRef.close(\n            {\n                message: this.publishMessage()\n            });\n    }\n\n\n    deleteMessage(): FlashMessage {\n        const message = new FlashMessage();\n        message.title = 'Successful';\n        message.text = 'Video successfully deleted';\n        message.type = MessagesEnum.warn;\n        return message;\n    }\n\n\n    publishMessage(): FlashMessage {\n        const message = new FlashMessage();\n        message.title = 'Successful';\n        message.text = 'Video successfully changed';\n        message.type = MessagesEnum.successful;\n        return message;\n    }\n}\n","<div *ngIf=\"delete\">\n    <div mat-dialog-title class=\"text-center\">\n        <div class=\"circle\">\n\n        </div>\n        <mat-icon class=\"material-icons-outlined text-white\">\n            delete\n        </mat-icon>\n    </div>\n    <div mat-dialog-content>\n        <mat-label class=\"text-center\">\n            <h4><b>You are about to delete the video<br></b>\n                This video will be deleted from Sports Hub!<br>\n                Are you sure?\n            </h4>\n        </mat-label>\n    </div>\n    <div mat-dialog-actions class=\"float-right mt-0\">\n        <button class=\"text-center bg-white text-danger\" (click)=\"dialogRef.close()\">Cancel</button>\n        <button class=\"text-center bg-danger text-white\" (click)=\"deleteVideo()\">Delete</button>\n    </div>\n</div>\n<div *ngIf=\"publish\">\n    <div mat-dialog-title class=\"text-center\">\n        <div class=\"circle\" id=\"info\">\n\n        </div>\n        <mat-icon class=\"material-icons-outlined text-white\">\n            warning\n        </mat-icon>\n    </div>\n    <div mat-dialog-content>\n        <mat-label class=\"text-center\">\n            <h4 *ngIf=\"video.publish\"><b>You are about to unpublish the video<br></b>\n                This video will be unpublished in Sports Hub!<br>\n                Are you sure?\n            </h4>\n            <h4 *ngIf=\"!video.publish\"><b>You are about to publish the video<br></b>\n                This video will be published in Sports Hub!<br>\n                Are you sure?\n            </h4>\n        </mat-label>\n    </div>\n    <div mat-dialog-actions class=\"float-right mt-0\">\n        <button class=\"text-center bg-white text-danger\" (click)=\"dialogRef.close()\">Cancel</button>\n        <button class=\"text-center bg-danger text-white\" (click)=\"publishVideo()\">Change</button>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Router} from '@angular/router';\nimport {VideoService} from '../../../../services/video.service';\nimport {Video} from '../../../../shared/interfaces/video';\n\n@Component({\n    selector: 'app-video',\n    templateUrl: './videos.component.html',\n    styleUrls: ['./videos.component.scss']\n})\nexport class VideosComponent implements OnInit {\n\n\n    videos: Array<Video>;\n\n    // todo: Class var\n    shareFromClass = true;\n\n    // todo: Class var\n    input: any;\n    isSearch = false;\n\n\n    constructor(private dialog: MatDialog, private router: Router,\n                private videoService: VideoService) {\n    }\n\n    ngOnInit(): void {\n        this.videoService.getPublished().subscribe(data => {\n            this.videos = data;\n        });\n    }\n\n\n    toggleSearch(): void {\n        this.isSearch = !this.isSearch;\n    }\n}\n\n","<app-header></app-header>\n<app-navigation></app-navigation>\n<mat-card class=\"m-auto col-md-8 col-12\">\n    <div class=\"container-fluid text-end\">\n        <div *ngIf=\"isSearch\" class=\"search-div border border-1\">\n            <div class=\"input-div\">\n                    <span class=\"material-icons align-middle\" (click)=\"toggleSearch()\">\n                        search\n                    </span>\n                <input type=\"search\" [(ngModel)]=\"input\" placeholder=\"Type here to search\">\n            </div>\n        </div>\n        <span class=\"material-icons\" *ngIf=\"!isSearch\" (click)=\"toggleSearch()\">\n            search\n        </span>\n    </div>\n    <div class=\"d-md-flex justify-content-between\">\n    </div>\n    <div *ngFor=\"let video of videos | VideoPipe: input:null\" class=\"container-fluid\">\n        <mat-card class=\"home-card container-fluid\">\n            <mat-card-content>\n                <div class=\"home-container\">\n                    <a class=\"text-danger\" [routerLink]=\"video.id\">\n                        <video *ngIf=\"video.uploaded\" disabled=\"true\">\n                            <source\n                                    src=\"assets/videos/{{video.url}}\"\n                                    type='video/mp4'>\n                        </video>\n                        <iframe *ngIf=\"!video.uploaded\" [src]=\"video | safe\"></iframe>\n                    </a>\n                    <div class=\"content\">\n                        <div class=\"video-option-menu\">\n                            <div class=\"video-option\">\n                            </div>\n                        </div>\n                        <a class=\"text-danger\" [routerLink]=\"video.id\">\n                            <div class=\"content-title\">\n                                <h3>{{ video.title }}</h3>\n                            </div>\n                        </a>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</mat-card>\n<app-footer></app-footer>\n","import {EventEmitter, Input, Output} from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport {Banner, BannerStatus} from \"../../../../../shared/interfaces/banner\";\nimport {SportCategory} from \"../../../../../shared/interfaces/sportCategory\";\nimport {BannerService} from \"../../../../../services/banners.service\";\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\n\n@Component({\n  selector: 'app-banner-item',\n  templateUrl: './banner-item.component.html',\n  styleUrls: ['./banner-item.component.scss']\n})\nexport class BannerItemComponent implements OnInit {\n  @Input() banner: Banner;\n  @Output() bannerChange: EventEmitter<Banner> = new EventEmitter<Banner>();\n  @Output() bannerDeleted: EventEmitter<void> = new EventEmitter<void>();\n  categories : SportCategory[];\n  closeResult = '';\n  trash = faTrash;\n\n  constructor(private bannerService : BannerService, private modalService: NgbModal) {\n  }\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then(result => {\n      this.deleteBanner(this.banner);\n    }, reason => { });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  ngOnInit(): void {\n    this.bannerService.getCategories().subscribe( data =>{\n      this.categories = data;\n    })\n  }\n\n  get statuses() {\n    const result = [];\n    for (let option in BannerStatus) {\n      result.push({key: option, value: BannerStatus[option]});\n    }\n\n    return result;\n  }\n\n  bannerChanged() {\n    this.bannerChange.emit(this.banner);\n  }\n\n  compareCategories(cat1, cat2) {\n    return cat1.name === cat2.name;\n  }\n\n  deleteBanner(banner: Banner){\n    this.bannerService.deleteBanner(banner).subscribe(_ => {});\n    this.modalService.dismissAll();\n    this.bannerDeleted.emit();\n  }\n\n}\n","<div class=\"list-item pt-2\">\n     <div class=\"float-left w-50 pl-2 pt-2\">\n         <p>{{banner?.title}}</p>\n     </div>\n     <div class=\"float-right w-50\">\n         <div class=\"width-45 d-inline-flex\">\n             <select [(ngModel)]=\"banner.status\" (ngModelChange)=\"bannerChanged()\" class=\"form-control status-select-drop-down\">\n                 <option *ngFor=\"let option of statuses\" [ngValue]=\"option.key\">{{option.value}}</option>\n             </select>\n         </div>\n         <div class=\"width-45 d-inline-flex\">\n             <select [compareWith]=\"compareCategories\" [ngModel]=\"banner.category ? banner.category : {name: ''}\" (ngModelChange)=\"banner.category = $event; bannerChanged()\" class=\"form-control category-select-drop-down\">\n                 <option *ngFor=\"let category of categories\" [ngValue]=\"category\">{{category.name}}</option>\n             </select>\n         </div>\n         <div class=\"delete-button-trash\">\n             <button class=\"btn btn-lg trash-button custom-svg-inline--fa\" (click)=\"open(content)\"><fa-icon [icon]=\"trash\"></fa-icon></button>\n         </div>\n     </div>\n</div>\n\n<ng-template #content let-modal class=\"custom-modal-content\">\n    <div class=\"ml-auto mr-auto mt-3\">\n        <img src=\"../../../../assets/trash-popup.svg\" alt=\"\" />\n    </div>\n    <div class=\"modal-body\">\n      <h4 class=\"font-weight-bold text-center mb-1\">You are about to delete this banner!</h4>\n      <h4 class=\"text-center mb-1\">This banner will be deleted</h4>\n        <h4  class=\"text-center mb-1\">Are you sure?</h4>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"cancel-button mt-3\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">Cancel</button>\n        <button type=\"submit\" class=\"delete-button mt-3\" (click)=\"deleteBanner(banner)\" >Delete</button>\n    </div>\n</ng-template>\n\n","import {NgModule} from '@angular/core';\n\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from '@modules/user-side/home/home.component';\nimport {BannersManagementComponent} from \"@modules/admin-side/admin-banners/pages/banners-management/banners-management.component\";\nimport {LoginComponent} from '@modules/user-side/login/login.component';\nimport {Forgot_passwordComponent} from '@modules/user-side/forgot_password/forgot_password.component';\nimport {RegistrationComponent} from '@modules/user-side/registration/registration.component';\nimport {UserProfileComponent} from '@modules/user-side/user-profile/user-profile.component';\nimport {UserListComponent} from '@modules/user-side/user-list/user-list.component';\nimport {ResetComponent} from '@modules/user-side/reset_password/reset.component';\nimport {RoleGuard} from '@modules/security/RoleGuard';\nimport {VideoComponent} from '@modules/user-side/video/video/video.component';\nimport {VideosComponent} from '@modules/user-side/video/videos/videos.component';\nimport {AdminHomeComponent} from '@modules/admin-side/home/home.component';\nimport {VideoEditComponent} from '@modules/admin-side/video/video-edit/video-edit.component';\nimport {AdminVideoComponent} from '@modules/admin-side/video/video/video.component';\nimport {AddArticleComponent} from '@modules/admin-side/add-article/add-article.component';\n\n\n\nconst routes: Routes = [\n    {path: '', component: HomeComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'forgot_password', component: Forgot_passwordComponent},\n    {path: 'registration', component: RegistrationComponent},\n    {path: 'user/:user_id', component: UserProfileComponent},\n    {path: 'reset_password',component: ResetComponent},\n\n    {path: 'users', component: UserListComponent, canActivate: [RoleGuard]},\n    {path: 'reset_password', component: ResetComponent},\n    {\n        path: 'admin/add-article',\n        component: AddArticleComponent,\n        data: {\n            expectedRole: 'admin'\n        }\n    },\n    {\n        path: 'admin/banners',\n        component: BannersManagementComponent,\n        // canActivate: [RoleGuard]\n    },\n    {path: 'videos', component: VideosComponent},\n    {path: 'videos/:id', component: VideoComponent},\n    {\n        path: 'admin', component: AdminHomeComponent, children: [\n            {path: 'videos', component: AdminVideoComponent},\n            {path: 'videos/:id', component: VideoEditComponent}\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {HeaderComponent} from './user-side/templates/header/header.component';\nimport {FooterComponent} from './user-side/templates/footer/footer.component';\nimport {NavigationComponent} from './user-side/templates/navigation/navigation.component';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {LoginComponent} from './user-side/login/login.component';\nimport {Forgot_passwordComponent} from './user-side/forgot_password/forgot_password.component';\nimport {RegistrationComponent} from './user-side/registration/registration.component';\nimport {HomeComponent} from './user-side/home/home.component';\nimport {UserProfileComponent} from './user-side/user-profile/user-profile.component';\nimport {UserListComponent} from './user-side/user-list/user-list.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport {ResetComponent} from './user-side/reset_password/reset.component';\nimport { BannerComponent } from './user-side/banners/banner/banner.component';\nimport { BannerListUsersideComponent } from './user-side/banners/banner-list-userside/banner-list-userside.component';\nimport {AdminVideoComponent} from './admin-side/video/video/video.component';\nimport {VideoComponent} from './user-side/video/video/video.component';\nimport {AdminHomeComponent} from './admin-side/home/home.component';\nimport {VideoEditComponent} from './admin-side/video/video-edit/video-edit.component';\nimport {VideosComponent} from './user-side/video/videos/videos.component';\nimport {VideoFormComponent} from './admin-side/video/video-form/video-form.component';\nimport {VideoFormConfirmComponent} from './admin-side/video/video-form-confirm/video-form-confirm.component';\nimport {AdminNavigationComponent} from './admin-side/navigation/navbar/admin-navigation.component';\nimport {FlashMessageComponent} from './admin-side/flash-message/flash-message.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatOptionModule} from '@angular/material/core';\nimport {MatCardModule} from '@angular/material/card';\nimport {VideoPipe} from '../pipes/video.pipe';\nimport {SafePipe} from '../pipes/safe.pipe';\nimport {MatSelectModule} from '@angular/material/select';\nimport {IvyCarouselModule} from 'angular-responsive-carousel';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {AddArticleComponent} from './admin-side/add-article/add-article.component';\n\n\n@NgModule({\n    declarations: [HomeComponent,\n        LoginComponent,\n        Forgot_passwordComponent,\n        HeaderComponent,\n        NavigationComponent,\n        FooterComponent,\n        RegistrationComponent,\n        UserProfileComponent,\n        ResetComponent,\n        UserListComponent,\n        AdminVideoComponent,\n        VideoComponent,\n        AdminHomeComponent,\n        VideoEditComponent,\n        VideosComponent,\n        VideoFormComponent,\n        VideoFormConfirmComponent,\n        AdminNavigationComponent,\n        FlashMessageComponent, VideoPipe, SafePipe,\n        AddArticleComponent,\n        BannerComponent,\n        BannerListUsersideComponent\n    ],\n    exports: [\n        HeaderComponent,\n        FooterComponent,\n        AdminNavigationComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        FormsModule,\n        MatTabsModule,\n        MatInputModule,\n        MatButtonModule,\n        ReactiveFormsModule,\n        MatListModule,\n        MatRadioModule,\n        MatDialogModule,\n        MatOptionModule,\n        MatCardModule,\n        MatSelectModule,\n        MatIconModule,\n        IvyCarouselModule,\n        MatSlideToggleModule,\n        MatAutocompleteModule\n    ]\n})\nexport class ModuleModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}