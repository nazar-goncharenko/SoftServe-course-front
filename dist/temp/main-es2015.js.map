{"version":3,"sources":["./src/app/modules/user-side/home/home.component.ts","./src/app/modules/user-side/home/home.component.html","./src/app/modules/user-side/reset_password/reset.component.ts","./src/app/modules/user-side/reset_password/reset.component.html","./src/app/modules/security/RoleGuard.ts","./src/app/modules/user-side/login/login.component.ts","./src/app/modules/user-side/login/login.component.html","./src/app/services/banners.service.ts","./src/app/modules/admin-side/add-article/add-article.component.ts","./src/app/modules/admin-side/add-article/add-article.component.html","./src/app/modules/admin-side/admin-banners/components/banners-list/banners-list.component.ts","./src/app/modules/admin-side/admin-banners/components/banners-list/banners-list.component.html","./src/environments/environment.ts","./src/app/modules/user-side/video/video/video.component.ts","./src/app/modules/user-side/video/video/video.component.html","./src/app/modules/admin-side/navigation/navbar/admin-navigation.component.ts","./src/app/modules/admin-side/navigation/navbar/admin-navigation.component.html","./src/app/shared/interfaces/banner.ts","./src/app/modules/admin-side/video/video/video.component.ts","./src/app/modules/admin-side/video/video/video.component.html","./src/app/modules/user-side/user-profile/user-profile.component.ts","./src/app/modules/user-side/user-profile/user-profile.component.html","./src/app/modules/user-side/user-list/user-list.component.ts","./src/app/modules/user-side/user-list/user-list.component.html","./src/app/services/checkbox.service.ts","./src/app/services/survey.service.ts","./src/app/modules/admin-side/admin-banners/components/predefined-categories-settings/predefined-categories-settings.component.ts","./src/app/modules/admin-side/admin-banners/components/predefined-categories-settings/predefined-categories-settings.component.html","./src/app/modules/admin-side/home/home.component.ts","./src/app/modules/admin-side/home/home.component.html","./src/app/modules/admin-side/admin-banners/components/banners-header/banners-header.component.ts","./src/app/modules/admin-side/admin-banners/components/banners-header/banners-header.component.html","./src/app/services/Registration.service.ts","./src/app/modules/user-side/user.ts","./src/app/shared/interfaces/flashMessage.ts","./src/app/services/reset.service.ts","./src/app/modules/admin-side/admin-banners/components/edit-banner/edit-banner.component.ts","./src/app/modules/admin-side/admin-banners/components/edit-banner/edit-banner.component.html","./src/app/services/article.service.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pipes/video.pipe.ts","./src/app/services/sportCategory.service.ts","./src/app/modules/user-side/templates/footer/footer.component.ts","./src/app/modules/user-side/templates/footer/footer.component.html","./src/app/modules/user-side/registration/registration.component.ts","./src/app/modules/user-side/registration/registration.component.html","./src/app/modules/admin-side/admin-banners/admin-banners.module.ts","./src/app/pipes/safe.pipe.ts","./src/app/shared/interfaces/messagesEnum.ts","./src/app/app.module.ts","./src/app/modules/user-side/banners/banner-list-userside/banner-list-userside.component.ts","./src/app/modules/user-side/banners/banner-list-userside/banner-list-userside.component.html","./src/app/modules/admin-side/video/video-form/video-form.component.ts","./src/app/modules/admin-side/video/video-form/video-form.component.html","./src/app/modules/user-side/templates/header/header.component.ts","./src/app/modules/user-side/templates/header/header.component.html","./src/app/services/SendEmail.service.ts","./src/app/modules/user-side/banners/banner/banner.component.ts","./src/app/modules/user-side/banners/banner/banner.component.html","./src/app/modules/admin-side/video/video-edit/video-edit.component.ts","./src/app/modules/admin-side/video/video-edit/video-edit.component.html","./src/app/modules/admin-side/admin-banners/components/category-item/category-item.component.ts","./src/app/modules/admin-side/admin-banners/components/category-item/category-item.component.html","./src/app/modules/admin-side/flash-message/flash-message.component.ts","./src/app/modules/admin-side/flash-message/flash-message.component.html","./src/app/modules/user-side/reset_entity.ts","./src/app/modules/user-side/templates/navigation/navigation.component.ts","./src/app/modules/user-side/templates/navigation/navigation.component.html","./src/app/modules/admin-side/admin-banners/pages/banners-management/banners-management.component.ts","./src/app/modules/admin-side/admin-banners/pages/banners-management/banners-management.component.html","./src/app/services/authentification.service.ts","./src/app/modules/user-side/forgot_password/forgot_password.component.ts","./src/app/modules/user-side/forgot_password/forgot_password.component.html","./src/app/services/video.service.ts","./src/app/services/user.service.ts","./src/app/shared/app.constants.ts","./src/app/modules/admin-side/video/video-form-confirm/video-form-confirm.component.ts","./src/app/modules/admin-side/video/video-form-confirm/video-form-confirm.component.html","./src/app/modules/user-side/video/videos/videos.component.ts","./src/app/modules/user-side/video/videos/videos.component.html","./src/app/modules/admin-side/admin-banners/components/banner-item/banner-item.component.ts","./src/app/modules/admin-side/admin-banners/components/banner-item/banner-item.component.html","./src/app/app-routing.module.ts","./src/app/modules/module.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ArticleService } from '@services/article.service';\nimport { Article } from '@shared/interfaces/article';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  articles: Article[];\n  arrowRightIco = faArrowRight;\n\n  constructor(private articleService: ArticleService) { }\n\n  ngOnInit(): void {\n    this.getArticles();\n  }\n\n  getArticles(): void {\n    this.articleService.getArticles()\n        .subscribe(data => {\n          this.articles = data;\n        });\n  }\n}\n","<app-header></app-header>\n<!--<div class=\"header bg-danger\">Sports Hub</div>-->\n<app-navigation></app-navigation>\n\n<div class=\"bg-caption\">\n    all\n</div>\n\n<div class=\"content-container\">\n    <div class=\"main-article\" *ngIf=\"articles[0]\">\n        <div class=\"img-container\">\n            <img src=\"assets/img/{{articles[0].imagePath}}\" alt=\"\">\n            <!--            <div class=\"corner-link\">{{articles[0]?.category.name}}}</div>-->\n            <div class=\"corner-link\">NBA</div>\n        </div>\n    </div>\n\n    <!--  REMOVE PADDING  -->\n    <div class=\"content pb-2\">\n        <div class=\"article-col-container\" *ngFor=\"let article of articles | slice:1:5\">\n            <div class=\"img-container\"><img src=\"assets/img/{{article.imagePath}}\" alt=\"\"></div>\n            <div class=\"title\">{{article.title}}</div>\n            <div class=\"description\">{{article.description}}</div>\n            <fa-icon class=\"a-c-ico\" [icon]=\"arrowRightIco\"></fa-icon>\n        </div>\n    </div>\n</div>\n\n<!--<div class=\"d-flex justify-content-center\">\n    <div class=\"spinner-border text-danger\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>-->\n<app-footer></app-footer>\n","import {Component, OnInit, Input} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {ResponseData} from '../response-data';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ResetService} from '@services/reset.service';\nimport {Reset_entity} from '../reset_entity';\n\n@Component({\n    selector: 'app-reset-form',\n    templateUrl: './reset.component.html',\n    styleUrls: ['./reset.component.scss']\n})\nexport class ResetComponent implements OnInit {\n    visible = false;\n    buttonRegister = true;\n    submitted = false;\n    token: string;\n    private resetData: Reset_entity;\n    resetForm: FormGroup;\n\n\n    constructor(\n        public resetService: ResetService, public router: Router,\n        private activatedRoute: ActivatedRoute\n    ) {\n\n    }\n\n\n    enableForm(enable: boolean) {\n        if (enable) {\n\n            this.resetForm.get('newPassword').enable();\n            this.resetForm.get('confirmPassword').enable();\n\n            this.buttonRegister = true;\n        } else {\n            this.resetForm.get('newPassword').disable();\n            this.resetForm.get('confirmPassword').disable();\n            this.buttonRegister = false;\n        }\n    }\n\n    reset() {\n        this.activatedRoute.queryParams.subscribe(params => {\n            this.token = params['token'];\n            console.log(this.token); // Print the parameter to the console.\n        });\n        this.submitted = true;\n        if (this.resetForm.invalid) {\n            return;\n        } else {\n            this.resetData = new Reset_entity();\n            this.resetData.setToken(this.token);\n            this.resetData.setNewPassword(this.resetForm.get('newPassword').value);\n            this.resetData.setConfirmPassword(this.resetForm.get('confirmPassword').value);\n            console.log(this.resetData.getNewPassword());\n            console.log(this.resetData.getConfirmPassword());\n            this.resetService.reset(this.resetData).subscribe((data: ResponseData) => {\n                console.log('RESPONSE DATA ' + JSON.stringify(data));\n                if (data.responseCode === '200') {\n                    window.alert(data.responseMsg);\n                    this.visible = true;\n                    this.enableForm(false);\n                } else {\n                    this.enableForm(true);\n                }\n            }, error => {\n                console.log('An Error Occured ' + error);\n            });\n\n            this.router.navigateByUrl('/');\n        }\n    }\n\n    ngOnInit() {\n        this.resetForm = new FormGroup({\n         //   token: new FormControl('', [Validators.required]),\n            newPassword: new FormControl('', [Validators.required]),\n            confirmPassword: new FormControl('', [Validators.required])\n        });\n    }\n\n    setSubmitted(submitted: boolean) {\n        this.submitted = submitted;\n    }\n\n}\n","<app-footer></app-footer>\n<div class=\"sidenav\">\n    <div class=\"login-main-text\">\n    </div>\n</div>\n<!--<div class=\"main\">-->\n<!--<div class=\"col-md-6 col-sm-12\">-->\n<!--    <div class=\"login-form\">-->\n\n        <div class=\"alert alert-danger\" *ngIf=\"resetForm.controls['newPassword'].errors && submitted\">\n            <div *ngIf=\"resetForm.controls['newPassword'].errors.required\">First Name is required</div>\n        </div>\n        <div class=\"alert alert-danger\" *ngIf=\"resetForm.controls['confirmPassword'].errors  && submitted\">\n            <div *ngIf=\"resetForm.controls['confirmPassword'].errors.required\">Last Name is required</div>\n        </div>\n\n<!--    </div>-->\n<!--</div>-->\n<div class=\"main\">\n    <div class=\"col-md-6 col-sm-12\">\n        <div class=\"login-form\">\n            <form [formGroup]=\"resetForm\" class=\"form-signin\">\n\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"newPassword\" placeholder=\"newPassword\" class=\"form-control\" id=\"newPassword\">\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"confirmPassword\" placeholder=\"confirmPassword\" class=\"form-control\"\n                           id=\"confirmPassword\">\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"buttonRegister==false\"\n                        (click)=\"reset()\"\n                >submit\n                </button>\n\n            </form>\n        </div>\n        <div class=\"col-md-6\">\n            <div *ngIf=\"visible==true\">\n            </div>\n        </div>\n    </div>\n</div>\n<!--</div>-->\n","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class RoleGuard implements CanActivate {\n\n    constructor(private router: Router) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (localStorage.getItem('role') === 'ROLE_ADMIN') {\n            return true;\n        } else {\n            this.router.navigate(['/']);\n            return false;\n        }\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AuthentificationService} from '@services/authentification.service';\nimport {Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {User} from '../user';\nimport {ResponseData} from '../response-data';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    role: string;\n    loginForm: FormGroup;\n    private submitted = false;\n    private loginData: User;\n\n    constructor(\n        public loginClient: AuthentificationService,\n        public router: Router\n    ) {\n        //  console.log(this.router.getCurrentNavigation().extras.state);\n    }\n\n    // tslint:disable-next-line:typedef\n    ngOnInit() {\n        this.loginForm = new FormGroup({\n            userName: new FormControl('', [Validators.required, Validators.email]),\n            password: new FormControl('', Validators.required),\n        });\n        //this.loginForm=history.state;\n    }\n\n    login(): void {\n        let headers = new Headers();\n        this.submitted = true;\n        if (this.loginForm.invalid) {\n            return;\n        } else {\n            this.loginData = new User();\n            this.loginData.setEmail(this.loginForm.get('userName').value);\n            this.loginData.setPassword(this.loginForm.get('password').value);\n            this.loginClient.login(this.loginData).subscribe((data: ResponseData) => {\n                console.log('RESPONSE DATA ' + JSON.stringify(data));\n                //    console.log(data.responseCode);\n                var usr = JSON.stringify(data);\n                const obj = JSON.parse(usr);\n                console.log(obj.role);\n                this.role = obj.role;\n                sessionStorage.setItem('isLoggedIn', 'true');\n                sessionStorage.setItem('email', this.loginData.getEmail());\n                localStorage.setItem('role', obj.role);\n\n                //   }\n                this.router.navigateByUrl('/');\n                //   window.alert(data.responseMsg);\n            }, error => {\n                console.log('An Error Occured ' + error);\n            });\n        }\n    }\n\n    clearPass(): void {\n        this.loginForm.get('password').setValue('');\n    }\n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n\n<div class=\"sidenav\">\n    <div class=\"login-main-text\">\n        <h2>Application<br> Login Page</h2>\n        <p>Login or register from here to access.</p>\n    </div>\n</div>\n<div class=\"main\">\n    <div class=\"col-md-6 col-sm-12\">\n        <div class=\"login-form\">\n            <form [formGroup]=\"loginForm\" class=\"form-signin\">\n\n                <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n                <input type=\"text\" placeholder=\"User Name\" formControlName=\"userName\" class=\"form-control\" id=\"username\">\n                <label for=\"inputEmail\" class=\"sr-only\">Input Password</label>\n                <input type=\"password\" (focus)=\"clearPass()\" placeholder=\"Password\" formControlName=\"password\" class=\"form-control\" id=\"password\">\n                <button type=\"submit\" class=\"btn btn-black\" id=\"go\" value=\"Login\" (click)=\"login()\">\n                    Login\n                </button>\n                <button onclick=\"location.href='/registration'\" type=\"submit\" class=\"btn btn-secondary\">Register\n                </button>\n                <a href=\"/forgot_password\">Forgot Password?</a>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!--<div class=\"text-center\">-->\n<!--    <div class=\"container\">-->\n<!--        <form [formGroup]=\"loginForm\" class=\"form-signin\">-->\n<!--            <div class=\"row\">-->\n<!--                <div class=\"col-md-4\">-->\n<!--                    <img class=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">-->\n<!--                    <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>-->\n<!--                    <label for=\"inputEmail\" class=\"sr-only\">Email address</label>-->\n<!--                    <input type=\"text\" placeholder=\"User Name\" formControlName=\"userName\" class=\"form-control\" id=\"username\">-->\n<!--                    <label for=\"inputEmail\" class=\"sr-only\">Input Password</label>-->\n<!--                    <input type=\"password\" (focus)=\"clearPass()\" placeholder=\"Password\" formControlName=\"password\" class=\"form-control\" id=\"password\">-->\n<!--                    <button class=\"btn btn-lg btn-primary btn-block\" style=\"width: 100%; background-color: purple; color: white\" (click)=\"login()\" type=\"submit\">Sign in</button>-->\n<!--                </div>-->\n<!--            </div>-->\n<!--        </form>-->\n<!--    </div>-->\n<!--</div>-->\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Banner, BannerStatusShort} from \"@shared/interfaces/banner\";\nimport {SportCategory} from \"@shared/interfaces/sportCategory\";\n\n@Injectable({providedIn: 'root'})\nexport class BannerService {\n    private apiServerUrl = \"http://localhost:8082\";\n\n    constructor(private http: HttpClient){}\n\n    public getBanners(): Observable<Banner[]> {\n        return this.http.get<Banner[]>(`${this.apiServerUrl}/banners`);\n    }\n\n    public getBannersByStatus(status: string): Observable<Banner[]> {\n        return this.http.get<Banner[]>(`${this.apiServerUrl}/banners/${status}`);\n    }\n\n    public getPredefined(): Observable<SportCategory[]> {\n        return this.http.get<SportCategory[]>(`${this.apiServerUrl}/banners/predefinedCategories`);\n    }\n\n    public getBanner(id : number): Observable<Banner> {\n        return this.http.get<Banner>(`${this.apiServerUrl}/banners/${id}`);\n    }\n\n    public getBannerForUpdate(id: number): Observable<Banner> {\n        return this.http.get<Banner>(`${this.apiServerUrl}/banners/${id}`);\n    }\n\n    public updateBanner(banner: Banner, file: File): Observable<Banner> {\n        const formData: FormData = new FormData();\n        formData.append('file', file);\n        formData.append('title', banner.title)\n        return this.http.put<Banner>(`${this.apiServerUrl}/banners/update/${banner.id}`, formData);\n    }\n\n    public createBanner(banner: Banner, file: File): Observable<Banner> {\n        const formData: FormData = new FormData();\n        formData.append('file', file);\n        formData.append('title', banner.title)\n        return this.http.post<Banner>(`${this.apiServerUrl}/banners`, formData);\n    }\n\n    public deleteBanner(banner: Banner): Observable<void> {\n        console.log('sending req...');\n        return this.http.delete<void>(`${this.apiServerUrl}/banners/${banner.id}`);\n    }\n\n    public configureBanner(banner: Banner): Observable<Banner> {\n        return this.http.put<Banner>(`${this.apiServerUrl}/banners/configure`, banner);\n    }\n\n    public getCategories(): Observable<SportCategory[]> {\n        return this.http.get<SportCategory[]>(`${this.apiServerUrl}/sportCategory/basicNavigationList`);\n    }\n\n    public predefinedSetting(category : SportCategory, state : String): Observable<SportCategory>{\n        return this.http.put<SportCategory>(`${this.apiServerUrl}/banners/${state}?category=${category.name}`, \"\");\n    }\n\n    public getBannersByCategory(category: String): Observable<Banner[]> {\n        return this.http.get<Banner[]>(`${this.apiServerUrl}/banners/filterUserSide?category=${category}`);\n    }\n\n    public bannersSearch(keyword: String): Observable<Banner[]> {\n        return this.http.get<Banner[]>(`${this.apiServerUrl}/banners/search?title=${keyword}`);\n    }\n\n    public sortOpenByStatus(status: String): Observable<Banner[]>{\n        return this.http.get<Banner[]>(`${this.apiServerUrl}/banners/sortByStatus?status=${status}`)\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ArticleService } from '@services/article.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-article',\n  templateUrl: './add-article.component.html',\n  styleUrls: ['./add-article.component.scss']\n})\nexport class AddArticleComponent implements OnInit {\n\n  formGroup: FormGroup;\n\n  constructor(public fb: FormBuilder, private articleService: ArticleService) {\n    this.createForm();\n  }\n\n    private createForm(): void {\n      this.formGroup = this.fb.group(\n          {\n              title: ['', [Validators.required]],\n              description: ['', [Validators.required]],\n              file: [null]\n          }\n      );\n    }\n\n    onFileChange(event): void {\n        if (event.target.files && event.target.files.length) {\n            const uploadedFile = event.target.files[0];\n\n            this.formGroup.patchValue({\n                file: uploadedFile\n            });\n        }\n    }\n\n  addArticle(): void {\n    const formData: FormData = new FormData();\n    const file = this.formGroup.get('file').value;\n\n    if (file != null) {\n        formData.append('file', file, file.name);\n    }\n    formData.append('articleDto', JSON.stringify(this.formGroup.value));\n\n    this.articleService.addArticle(formData)\n        .subscribe(\n            (response) => console.log(response),\n            (error: HttpErrorResponse) => console.log(error)\n        );\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--<app-header></app-header>-->\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"addArticle()\" action=\"\">\n    <p>Form value: {{ formGroup.value | json }}</p>\n\n    <div class=\"dnd-box\">\n        <input type=\"file\" (change)=\"onFileChange($event)\" id=\"fileDrop\">\n        <div class=\"dnd-msg\">\n            <img src=\"assets/img/dd_camera.svg\" alt=\"Upload camera\">\n            <label for=\"fileDrop\"><span class=\"text-danger\">+Add picture</span></label>\n            or drop it right here <br> You can add next formats: png. jpg. jpeg. tif\n        </div>\n    </div>\n\n    <div class=\"container-fluid pb-5\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <label for=\"conferenceSelect\">Conference</label>\n                <!-- TODO: ngFor options -->\n                <select name=\"conference\" id=\"conferenceSelect\">\n                    <option>Not Selected</option>\n                </select>\n            </div>\n            <div class=\"col\">\n                <label for=\"teamSelect\">Team</label>\n                <select name=\"team\" id=\"teamSelect\">\n                    <option>Not Selected</option>\n                </select>\n            </div>\n            <div class=\"col\">\n                <label for=\"locationSelect\">Location</label>\n                <select name=\"location\" id=\"locationSelect\">\n                    <option>Not Selected</option>\n                </select>\n            </div>\n        </div>\n\n\n        <!--    formControl-->\n        <label for=\"altImgName\">Alt. *</label>\n        <input id=\"altImgName\" type=\"text\" placeholder=\"Alternative text for picture\">\n\n        <label for=\"headline\">Article Headline *</label>\n        <input id=\"headline\" type=\"text\" formControlName=\"title\" placeholder=\"Name\">\n\n        <!--    formControl-->\n        <label for=\"caption\">Caption *</label>\n        <input id=\"caption\" type=\"text\" placeholder=\"Name\">\n\n        <label for=\"description\">Сontent *</label>\n        <div class=\"text-format-tool\">\n            <ul class=\"hr\">\n                <li>h1</li>\n                <li>h2</li>\n                <li>p</li>\n            </ul>\n            <ul class=\"hr\">\n                <li class=\"font-weight-bold\">b</li>\n                <li class=\"font-italic\">i</li>\n                <li>u</li>\n            </ul>\n            <ul class=\"hr\">\n                <li><img src=\"assets/img/left-text-alignment-option.svg\" alt=\"Align left\"\n                         class=\"filter-grey flip-hor\"></li>\n                <li><img src=\"assets/img/centered-text-of-alignment-button.svg\" alt=\"Align left\"\n                         class=\"filter-grey flip-hor\">\n                </li>\n                <li><img src=\"assets/img/right-text-alignment.svg\" alt=\"Align left\" class=\"filter-grey flip-hor\"></li>\n            </ul>\n            <ul class=\"hr\">\n                <li><img src=\"assets/img/bullets.svg\" alt=\"Align left\" class=\"filter-grey\"></li>\n                <li><img src=\"assets/img/list.svg\" alt=\"Align left\" class=\"filter-grey\"></li>\n            </ul>\n        </div>\n<!--        <input id=\"description\" type=\"text\" formControlName=\"description\" placeholder=\"Please add text here\">-->\n\n        <textarea name=\"description\" id=\"description\" placeholder=\"Please add text here\"></textarea>\n\n        <div class=\"commentSwitch align-middle\">Comments: <span class=\"text-dark pr-2\">Show</span>\n            <mat-slide-toggle\n                    color=\"warn\" checked></mat-slide-toggle>\n        </div>\n\n        <!--    <button type=\"submit\">Save</button>-->\n    </div>\n</form>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Banner, BannerStatusShort} from \"../../../../../shared/interfaces/banner\";\nimport {BannerService} from \"../../../../../services/banners.service\";\nimport { faSearch, faFilter } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-banners-list',\n  templateUrl: './banners-list.component.html',\n  styleUrls: ['./banners-list.component.scss']\n})\nexport class BannersListComponent implements OnInit {\n\n  @Input() banners: Banner[];\n  public selectedBanner: Banner;\n  @Output() selectedBannerChanged = new EventEmitter<Banner>();\n  selectedStatus = 'open';\n  public keyword: String;\n  search = faSearch;\n  filter = faFilter;\n\n  constructor(private bannerService: BannerService){}\n\n  ngOnInit() {\n    this.bannerService.getBannersByStatus(this.selectedStatus).subscribe(data => this.banners = data);\n  }\n\n  selectBannerAt(index: number) {\n      this.selectedBannerChanged.emit(this.banners[index]);\n  }\n\n  getBannersByStatus(newStatus: string) {\n    if (this.selectedStatus !== newStatus) {\n      this.selectedStatus = newStatus;\n      this.bannerService.getBannersByStatus(newStatus).subscribe(data => this.banners = data);\n    }\n  }\n\n  searchBanners(keyword: String){\n    this.bannerService.bannersSearch(keyword).subscribe(data => this.banners = data );\n  }\n\n  get statuses() {\n    return ['open', 'closed'];\n  }\n\n  configureBanner(banner: Banner) {\n      this.bannerService.configureBanner(banner).subscribe(\n          data => console.log(data));\n  }\n\n  onBannerDeleted(index: number): void {\n    this.banners = this.banners.filter((_, i) => i !== index);\n    this.selectedBanner = null;\n    this.selectedBannerChanged.emit();\n  }\n\n  sortBy(status: String){\n    this.bannerService.sortOpenByStatus(status).subscribe(data => this.banners = data );\n  }\n}\n","<div class=\"banner-list-menu mb-2\">\n    <button class=\"open-closed-button\"\n           [ngClass]=\"{'active': status === selectedStatus}\"\n           *ngFor=\"let status of statuses\"\n           (click)=\"getBannersByStatus(status)\">\n       {{status | uppercase}}\n   </button>\n    <div class=\"float-right banner-search-area\">\n        <input type=\"text\" [(ngModel)]=\"keyword\" class=\"form-control search-input\"  placeholder=\"Enter a banner name here\">\n        <button class=\"search-button custom-svg-inline--fa ml-2 mr-2\" (click)=\"searchBanners(keyword)\"><fa-icon [icon]=\"search\"></fa-icon></button>\n    </div>\n</div>\n<div class=\"container banner-list\">\n    <div class=\"banner-list-title h-100 pt-3 pb-4 mb-3\">\n        <div class=\"float-left w-50\">\n            <p>BANNER NAME</p>\n        </div>\n        <div class=\"float-right w-50\">\n            <div class=\"width-45 d-inline-flex\">\n                <p>STATUS</p>\n                <button class=\"filter-button ml-2 mr-2\"><fa-icon [icon]=\"filter\"></fa-icon> </button>\n                <mat-select>\n                    <p class=\"m-0 p-0\">Sort by</p>\n                    <hr>\n                    <mat-option (click)=\"sortBy('PUBLISHED')\">\n                        published\n                    </mat-option>\n                    <mat-option (click)=\"sortBy('NOT_PUBLISHED')\">\n                        not published\n                    </mat-option>\n                </mat-select>\n<!--                <mat-form-field color=\"warn\">-->\n<!--                    <fa-icon [icon]=\"filter\"></fa-icon>-->\n<!--                    <mat-select class = \"select-form\">-->\n<!--                        <mat-option (click)=\"changeView('published')\">-->\n<!--                            published-->\n<!--                        </mat-option>-->\n<!--                        <mat-option (click)=\"changeView('not published')\">-->\n<!--                            not published-->\n<!--                        </mat-option>-->\n<!--                    </mat-select>-->\n<!--                </mat-form-field>-->\n            </div>\n            <div class=\"width-45 d-inline-flex\">\n                <p>PUBLISHED IN</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"row d-block\">\n        <div *ngFor=\"let b of banners; let i = index\" class=\"pl-0 pr-0\">\n            <app-banner-item (bannerDeleted)=\"onBannerDeleted(i)\" [banner]=\"b\" (bannerChange)=\"configureBanner($event)\" (click)=\"selectBannerAt(i)\"></app-banner-item>\n        </div>\n    </div>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {VideoService} from '../../../../services/video.service';\nimport {Video} from '../../../../shared/interfaces/video';\n\n@Component({\n    selector: 'app-video',\n    templateUrl: './video.component.html',\n    styleUrls: ['./video.component.scss']\n})\nexport class VideoComponent implements OnInit {\n\n\n    video: Video;\n\n    videos = [];\n\n    id: number;\n    text: string;\n\n\n    constructor(private dialog: MatDialog,\n                private activateRoute: ActivatedRoute,\n                private videoService: VideoService) {\n        this.id = activateRoute.snapshot.params.id;\n    }\n\n    ngOnInit(): void {\n        this.videoService.getById(this.id).subscribe(data => {\n            this.video = data;\n            this.videoService.getAll().subscribe(data1 => {\n            let count = 0;\n            for (const video of data1) {\n                if (count === 4) {\n                    break;\n                } else {\n                    if (video.id !== this.video.id && video.publish) {\n                        this.videos.push(video);\n                        ++count;\n                    }\n                }\n            }\n        });\n        });\n    }\n\n    sendComment(text: string): void {\n        console.log(text);\n    }\n}\n\n","<app-header></app-header>\n<app-navigation></app-navigation>\n<mat-card class=\"container-fluid col-6 m-auto mt-md-5 position-relative\">\n    <h3>\n        <a href=\"/videos\" class=\"text-secondary\">\n            VIDEO\n        </a>\n        <mat-icon class=\"material-icons-outlined text-danger\">\n            arrow_forward_ios\n        </mat-icon>\n        <span class=\"text-danger\">\n            {{ video.title }}\n        </span>\n    </h3>\n    <video *ngIf=\"video.uploaded\" class=\"mt-3\" [src]=\"video | safe\" controls>\n    </video>\n    <div *ngIf=\"video.uploaded == false\" class=\"main-video-frame\">\n        <iframe [src]=\"video | safe\"></iframe>\n    </div>\n    <div class=\"row\" *ngIf=\"!video.showComments\">\n        <div class=\"col h-25 container-fluid\" *ngFor=\"let subVideo of videos | slice:0:2\">\n            <a [href]=\"'/videos/' + subVideo.id\" *ngIf=\"subVideo.uploaded\" class=\"bg-black\">\n                <video class=\"mt-3 video\" [src]=\"subVideo | safe\">\n                </video>\n                <h2 class=\"title\">\n                    {{ subVideo.title }}\n                </h2>\n            </a>\n            <a [href]=\"'/videos/' + subVideo.id\" *ngIf=\"subVideo.uploaded == false\" class=\"bg-black\">\n                <div>\n                    <iframe [src]=\"subVideo | safe\" class=\"mt-3 video\"></iframe>\n                </div>\n                <h2 class=\"title\">\n                    {{ subVideo.title }}\n                </h2>\n            </a>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!video.showComments\">\n        <div class=\"col h-25 container-fluid\" *ngFor=\"let subVideo of videos | slice:2:4\">\n            <a [href]=\"'/videos/' + subVideo.id\" *ngIf=\"subVideo.uploaded\" class=\"bg-black\">\n                <video class=\"mt-3 video\" [src]=\"subVideo | safe\">\n                </video>\n                <h2 class=\"title\">\n                    {{ subVideo.title }}\n                </h2>\n            </a>\n            <a [href]=\"'/videos/' + subVideo.id\" *ngIf=\"subVideo.uploaded == false\" class=\"bg-black\">\n                <div class=\"m-0 p-0\">\n                    <iframe [src]=\"subVideo | safe\"></iframe>\n                </div>\n                <h2 class=\"title\">\n                    {{ subVideo.title }}\n                </h2>\n            </a>\n        </div>\n    </div>\n\n    <mat-card class=\"comment-box\" *ngIf=\"video.showComments\">\n        <mat-card-title>\n            <h4>\n                <b>\n                    COMMENTS ({{ video.comments.length}})\n                </b>\n            </h4>\n        </mat-card-title>\n        <mat-card class=\"comment-box-input\">\n            <img src=\"favicon.ico\">\n            <!--            <input type=\"text\" placeholder=\"Write a comment\">-->\n            <textarea matInput placeholder=\"Write a comment\" rows=\"1\" [(ngModel)]=\"text\"></textarea>\n            <button class=\"comment-button text-secondary\" (click)=\"sendComment(text)\">Submit</button>\n        </mat-card>\n        {{ video.comments | json }}\n        <mat-card class=\"comment-box-content\">\n            <mat-card-content *ngFor=\"let comment of video.comments\">\n                <div class=\"text-secondary\">\n                    <h4>\n                        <b>\n                            {{ comment.time | date:'MMM d'}}\n                        </b>\n                    </h4>\n                </div>\n                <h2>{{ comment.comment }}</h2>\n                <hr>\n                <mat-icon class=\"material-icons-outlined\">\n                thumb_up\n                </mat-icon>\n                {{ comment.likes }}\n                <mat-icon class=\"material-icons-outlined\">\n                thumb_down\n                </mat-icon>\n                {{ comment.dislikes }}\n            </mat-card-content>\n        </mat-card>\n    </mat-card>\n</mat-card>\n\n\n<app-footer></app-footer>\n","import {Component, OnInit} from '@angular/core';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {AppConstants} from '../../../../shared/app.constants';\nimport {VideoService} from '../../../../services/video.service';\nimport {SportCategoryService} from '../../../../services/sportCategory.service';\nimport {unwrapLazyLoadHelperCall} from '@angular/localize/src/tools/src/source_file_utils';\n\n@Component({\n    selector: 'app-admin-navigation',\n    templateUrl: './admin-navigation.component.html',\n    styleUrls: ['./admin-navigation.component.scss']\n})\nexport class AdminNavigationComponent implements OnInit {\n\n    categories = [];\n\n    constructor(private categoryService: SportCategoryService) {\n    }\n\n\n    drop(event: CdkDragDrop<string[]>): void {\n        moveItemInArray(this.categories, event.previousIndex, event.currentIndex);\n    }\n\n    ngOnInit(): any {\n        // this.sportCategories = await this.categoryService.getNullParent();\n        this.categoryService.getNullParent().subscribe(data => {\n\n            for (const category of AppConstants.Paths.before) {\n                this.categories.push(category);\n            }\n            for (const category of data) {\n                const tmp = {name: category.name, url: '/'};\n                this.categories.push(tmp);\n            }\n            for (const category of AppConstants.Paths.after) {\n                this.categories.push(category);\n            }\n        });\n    }\n}\n","<div>\n    <carousel class=\"example-list\" [cellWidth]=\"200\" height=\"10\" *ngIf=\"categories.length\" [arrowsOutside]=\"true\">\n        <div class=\"carousel-cell example-box\" *ngFor=\"let category of categories\">\n            <a class=\"text-danger\" href=\"admin{{category.ulr}}\">{{category.name | uppercase}}</a>\n        </div>\n    </carousel>\n</div>\n","import {SportCategory} from \"./sportCategory\";\n\nexport interface Banner {\n    id?: number;\n    title: string;\n    imgPath?: string;\n    status?: string;\n    category?: SportCategory;\n    lastUpdated?: string;\n}\n\nexport enum BannerStatusShort {\n    OPEN = 'open',\n    CLOSED = 'closed'\n}\n\nexport enum BannerStatus {\n    PUBLISHED = 'published',\n    NOT_PUBLISHED = 'not published',\n    CLOSED = 'closed'\n}\n","import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {VideoFormComponent} from '../video-form/video-form.component';\nimport {Router} from '@angular/router';\nimport {VideoService} from '../../../../services/video.service';\nimport {Video} from '../../../../shared/interfaces/video';\nimport {VideoFormConfirmComponent} from '../video-form-confirm/video-form-confirm.component';\nimport {FlashMessage} from '../../../../shared/interfaces/flashMessage';\nimport {MessagesEnum} from '../../../../shared/interfaces/messagesEnum';\n\n@Component({\n    selector: 'app-video',\n    templateUrl: './video.component.html',\n    styleUrls: ['./video.component.scss']\n})\nexport class AdminVideoComponent implements OnInit {\n    isSearch = false;\n\n    shareAllow = 'Yes';\n\n    views = [\n        {name: 'All', value: null},\n        {name: 'Published', value: true},\n        {name: 'Unpublished', value: false}\n    ];\n\n    messages: FlashMessage[] = [];\n\n    videos: Array<Video>;\n\n    // todo: Class var\n    shareFromClass = true;\n\n    // todo: Class var\n    input: any;\n    type = null;\n\n\n    constructor(private dialog: MatDialog, private router: Router,\n                private videoService: VideoService) {\n    }\n\n    ngOnInit(): void {\n        this.videoService.getAll().subscribe(data => {\n            this.videos = data;\n        });\n        if (this.shareFromClass === true) {\n            this.shareAllow = 'Yes';\n        } else {\n            this.shareAllow = 'No';\n        }\n    }\n\n\n    toggleSearch(): void {\n        this.isSearch = !this.isSearch;\n    }\n\n    allowSaveChange(): void {\n        if (this.shareAllow === 'Yes') {\n            this.shareFromClass = !this.shareFromClass;\n            this.shareAllow = 'No';\n        } else {\n            this.shareAllow = 'Yes';\n            this.shareFromClass = !this.shareFromClass;\n        }\n    }\n\n    changeView(value: string): void {\n        this.type = value;\n    }\n\n    openDialog(): void {\n        // @ts-ignore\n        const dialogRef = this.dialog.open(VideoFormComponent, {\n            width: document.body.offsetWidth * 0.45\n        });\n        dialogRef.afterClosed();\n    }\n\n    changePublish(video: Video): any {\n        // @ts-ignore\n        const dialogRef = this.dialog.open(VideoFormConfirmComponent,\n            {\n                width: document.body.offsetWidth * 0.3,\n                minWidth: '200px',\n                data: {\n                    publish: true,\n                    video\n                }\n            });\n        dialogRef.afterClosed().subscribe(\n            response => {\n                this.messages.push(response.message);\n            }\n        );\n    }\n\n    delete(video: Video): any {\n        // @ts-ignore\n        const dialogRef = this.dialog.open(VideoFormConfirmComponent,\n            {\n                width: document.body.offsetWidth * 0.3,\n                minWidth: '200px',\n                data: {\n                    delete: true,\n                    video\n                }\n            });\n        dialogRef.afterClosed().subscribe(response => {\n            if (response.message.type === MessagesEnum.warn) {\n                this.videos.splice(\n                    this.videos.indexOf(video), 1\n                );\n                this.messages.push(response.message);\n            }\n        });\n    }\n\n}\n\n","<div class=\"col-12 pl-5 border-bottom\">\n    <div class=\"container-fluid d-flex justify-content-between\">\n        <h2 class=\"text-danger\">Video</h2>\n        <div class=\"text-danger mr-md-4\">\n            <button mat-raised-button color=\"warn\" class=\"add-button\" (click)=\"openDialog()\">\n                + New Video\n            </button>\n        </div>\n    </div>\n</div>\n\n<app-admin-navigation></app-admin-navigation>\n<app-flash-message [messages]=\"messages\"></app-flash-message>\n<mat-card class=\"m-auto col-md-8 col-12\">\n    <div class=\"justify-content-around\">\n        <div class=\"d-md-flex justify-content-between\">\n            <mat-form-field appearance=\"legacy\" color=\"warn\">\n                <mat-select [value]=\"views[0].name\">\n                    <mat-option *ngFor=\"let view of views\" [value]='view.name' (click)=\"changeView(view.value)\">\n                        {{view.name}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <!--        <mat-slide-toggle class=\"flex-md-column mt-3\" labelPosition=\"before\" color=\"warn\" [checked]=\"shareFromClass\"-->\n            <!--                          (toggleChange)=\"allowSaveChange()\">-->\n            <!--            Allow to share videos:-->\n            <!--            <span class=\"allowText\">{{ shareAllow }}</span>-->\n            <!--        </mat-slide-toggle>-->\n            <div *ngIf=\"isSearch\" class=\"search-div border border-1 align-self-center\">\n                <div class=\"input-div\">\n                    <span class=\"material-icons align-middle\" (click)=\"toggleSearch()\">\n                        search\n                    </span>\n                    <input type=\"search\" [(ngModel)]=\"input\" placeholder=\"Type here to search\">\n                </div>\n            </div>\n            <span class=\"material-icons\" *ngIf=\"!isSearch\" (click)=\"toggleSearch()\">\n        search\n        </span>\n        </div>\n    </div>\n    <div *ngFor=\"let video of videos | VideoPipe: input:type\" class=\"container-fluid\">\n        <mat-card class=\"home-card container-fluid\">\n            <mat-card-content>\n                <div class=\"home-container\">\n                    <a class=\"text-danger\" [routerLink]=\"video.id\">\n                        <video *ngIf=\"video.uploaded\" disabled=\"true\">\n                            <source\n                                    src=\"assets/videos/{{video.url}}\"\n                                    type='video/mp4'>\n                        </video>\n                        <iframe *ngIf=\"!video.uploaded\" [src]=\"video | safe\"></iframe>\n                    </a>\n                    <div class=\"content\">\n                        <div class=\"video-option-menu\">\n                            <div class=\"video-option\">\n                                <mat-select value=\"SomeValue\">\n                                    <mat-option *ngIf=\"video.publish\" class=\"custom-option\"\n                                                (click)=\"changePublish(video)\">Unpublish\n                                    </mat-option>\n                                    <mat-option *ngIf=\"!video.publish\" class=\"custom-option\"\n                                                (click)=\"changePublish(video)\">Publish\n                                    </mat-option>\n                                    <mat-option class=\"custom-option\" (click)=\"delete(video)\">Delete</mat-option>\n                                </mat-select>\n                            </div>\n                        </div>\n                        <a class=\"text-danger\" [routerLink]=\"video.id\">\n                            <div class=\"content-title\">\n                                <h3>{{ video.title }}</h3>\n                            </div>\n                            <div class=\"video-indecator\" *ngIf=\"video.publish\">\n                            <span class=\"published material-icons\">\n                                brightness_1\n                            </span>\n                                Published\n                            </div>\n                            <div class=\"video-indecator\" *ngIf=\"!video.publish\">\n                            <span class=\"unpublished material-icons\">\n                                brightness_1\n                            </span>\n                                Unpublished\n                            </div>\n                        </a>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserService} from '@services/user.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Survey} from '../../../shared/interfaces/survey';\nimport {SurveyService} from '../../../services/survey.service';\nimport {CheckboxService} from '../../../services/checkbox.service';\nimport {CheckBox} from \"../../../shared/interfaces/checkBox\";\n\ndeclare function checkNames(): any;\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './user-profile.component.html',\n    styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n    user;\n    userIdFromRoute: number;\n    uploadFile: File = null;\n    updateUserForm: FormGroup;\n    updateSurveyForm: FormGroup;\n    openSurveys;\n    closedSurveys;\n    selectedSurveyId: number;\n    checkBoxes;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private userService: UserService,\n                private surveyService: SurveyService,\n                private checkBoxService: CheckboxService\n    ) {\n    }\n\n    private createForm(): void {\n        this.updateUserForm = new FormGroup({\n            id: new FormControl(this.userIdFromRoute),\n            username: new FormControl(null),\n            email: new FormControl(null),\n            password: new FormControl(null),\n            new_pass: new FormControl(null),\n            new_pass_2: new FormControl(null)\n        });\n\n        this.updateSurveyForm = new FormGroup({\n            id: new FormControl(this.selectedSurveyId),\n            question: new FormControl(null),\n            isOpen: new FormControl(null)\n        });\n    }\n\n    handleFileInput(files: FileList): void {\n        this.uploadFile = files.item(0);\n    }\n\n    getSelectedSurveyId(id): void {\n        this.selectedSurveyId = id;\n        this.getCheckBoxOfSurvey();\n    }\n\n    getCheckBoxOfSurvey(): void {\n        this.checkBoxService.findAllBySurveyId(this.userIdFromRoute, this.selectedSurveyId)\n            .subscribe((data: CheckBox[]) => {\n                console.log(data);\n                this.checkBoxes = data;\n            });\n    }\n\n    updateSurvey(): void {\n        this.surveyService.updateSurvey(this.userIdFromRoute, this.selectedSurveyId, this.updateSurveyForm.value);\n        this.router.navigate([`user/${this.userIdFromRoute}`])\n            .then(() => {\n                window.location.reload();\n            });\n    }\n\n    deleteSurvey(): void {\n        this.surveyService.deleteSurvey(this.userIdFromRoute, this.selectedSurveyId);\n        this.router.navigate([`user/${this.userIdFromRoute}`])\n            .then(() => {\n                window.location.reload();\n            });\n    }\n\n\n    updateUser(): void {\n        this.userService.updateAll(this.userIdFromRoute, this.uploadFile, this.updateUserForm.value);\n        this.router.navigate([`user/${this.userIdFromRoute}`])\n            .then(() => {\n                window.location.reload();\n            });\n    }\n\n    deleteUser(): void {\n        this.userService.deleteUser(this.userIdFromRoute);\n        this.router.navigate(['']);\n    }\n\n\n    ngOnInit(): void {\n        const routeParams = this.route.snapshot.paramMap;\n        this.userIdFromRoute = Number(routeParams.get('user_id'));\n\n        this.userService.getUserById(this.userIdFromRoute)\n            .subscribe((data: string[]) => {\n                console.log(data);\n                this.user = data;\n            });\n\n        this.surveyService.findOpenByUserId(this.userIdFromRoute)\n            .subscribe((data: Survey[]) => {\n                console.log(data);\n                this.openSurveys = data;\n            });\n\n        this.surveyService.findClosedByUserId(this.userIdFromRoute)\n            .subscribe((data: Survey[]) => {\n                console.log(data);\n                this.closedSurveys = data;\n            });\n\n        this.createForm();\n        checkNames();\n    }\n}\n","<app-header></app-header>\n<app-navigation></app-navigation>\n\n<div class=\"container\">\n    <mat-tab-group>\n        <form [formGroup]=\"updateUserForm\" name=\"test\">\n\n            <mat-tab label=\"Personal\">\n                <div class=\"example-large-box mat-elevation-z4\">\n                    <div class=\"example-container\">\n\n                        <div class=\"form-group image-upload\">\n                            <label for=\"file\">\n                                <img src=\"assets/img/{{ user.photoUrl }}\">\n                            </label>\n                            <input type=\"file\"\n                                   (change)=\"handleFileInput($event.target.files)\"\n                                   id=\"file\"\n                                   class=\"upload-input\"/>\n                        </div>\n                        <div>\n                            <label>Username</label>\n                            <input class=\"form-control\" maxlength=\"10\"\n                                   type=\"text\"\n                                   formControlName=\"username\"\n                                   id=\"username\"\n                                   placeholder=\"{{ user.username }}\">\n                        </div>\n                        <div>\n                            <label>Email</label>\n                            <input class=\"form-control\"\n                                   type=\"text\"\n                                   formControlName=\"email\"\n                                   id=\"email\"\n                                   autocomplete=\"email\"\n                                   placeholder=\"{{ user.email }}\">\n                        </div>\n                        <div class=\"container\">\n                            <button type=\"button\" class=\"btn btn-success\" (click)=\"updateUser()\">Update</button>\n                            <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteUser()\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n\n\n            <mat-tab label=\"Password\">\n                <div class=\"example-large-box mat-elevation-z4\">\n                    <div class=\"example-container\">\n                        <div>\n                            <label>old password</label>\n                            <input class=\"form-control\"\n                                   type=\"password\"\n                                   formControlName=\"password\"\n                                   id=\"password\"\n                                   placeholder=\"Enter your old password\">\n                        </div>\n                        <div>\n                            <label>new password</label>\n                            <input class=\"form-control\" onkeyup='checkNames()'\n                                   type=\"password\"\n                                   formControlName=\"new_pass\"\n                                   id=\"new_pass\"\n                                   name=\"new_pass\"\n                                   placeholder=\"8+ upper and lowercase letters\">\n                        </div>\n                        <div>\n                            <label>new password</label>\n                            <input class=\"form-control\" onkeyup='checkNames()'\n                                   type=\"password\"\n                                   formControlName=\"new_pass_2\"\n                                   id=\"new_pass_2\"\n                                   name=\"new_pass_2\"\n                                   placeholder=\"Enter new password again\">\n                            <span id='message'></span>\n                        </div>\n                        <div class=\"container\">\n                            <button type=\"button\" class=\"btn btn-success\" id=\"password_butt\" disabled\n                                    (click)=\"updateUser()\">Update\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </form>\n\n        <mat-tab label=\"My surveys\">\n            <form [formGroup]=\"updateSurveyForm\" name=\"test\">\n                <div class=\"example-container survey\">\n                    <mat-tab-group>\n\n                        <mat-tab label=\"OPEN\">\n\n                            <div class=\"survey-boxes\">\n                                <mat-selection-list #selectedso [multiple]=\"false\">\n                                    <h3 class=\"questions\">Questions</h3>\n                                    <mat-list-option *ngFor=\"let so of openSurveys\" [value]=\"so\"\n                                                     (click)=\"getSelectedSurveyId(selectedso.selectedOptions.selected[0]?.value.id)\">\n                                        {{so.question}}\n                                    </mat-list-option>\n                                </mat-selection-list>\n                            </div>\n\n                            <div class=\"survey-boxes two\">\n\n                                <h3 class=\"questions\">Reader poll</h3>\n                                <h4 class=\"questions solid\">{{selectedso.selectedOptions.selected[0]?.value.question}}</h4>\n\n                                <mat-list role=\"list\">\n                                    <mat-list-item role=\"listitem\" *ngFor=\"let cb of checkBoxes\">\n                                        <mat-radio-button [value]=\"cb\">\n                                            {{cb.text}} ({{cb.responses_count}} votes)\n                                        </mat-radio-button>\n                                    </mat-list-item>\n                                </mat-list>\n\n                                <div class=\"container\">\n                                    <button type=\"button\" class=\"btn btn-outline-danger\"\n                                            (click)=\"updateSurvey()\">\n                                        Close survey\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-danger\"\n                                            (click)=\"deleteSurvey()\">\n                                        Delete\n                                    </button>\n                                </div>\n\n                            </div>\n                        </mat-tab>\n\n                        <mat-tab label=\"CLOSED\">\n\n                            <div class=\"survey-boxes\">\n                                <mat-selection-list #selectedsc [multiple]=\"false\">\n                                    <h3 class=\"questions\">Questions</h3>\n                                    <mat-list-option *ngFor=\"let sc of closedSurveys\" [value]=\"sc\"\n                                                     (click)=\"getSelectedSurveyId(selectedsc.selectedOptions.selected[0]?.value.id)\">\n                                        {{sc.question}}\n                                    </mat-list-option>\n                                </mat-selection-list>\n                            </div>\n\n                            <div class=\"survey-boxes two\">\n\n                                <h3 class=\"questions\">Reader poll</h3>\n                                <h4 class=\"questions solid\">{{selectedsc.selectedOptions.selected[0]?.value.question}}</h4>\n\n                                <mat-list role=\"list\">\n                                    <mat-list-item role=\"listitem\" *ngFor=\"let cb of checkBoxes\">\n                                        <mat-radio-button [value]=\"cb\">\n                                            {{cb.text}} ({{cb.responses_count}} votes)\n                                        </mat-radio-button>\n                                    </mat-list-item>\n                                </mat-list>\n\n                                <div class=\"container\">\n                                    <button type=\"button\" class=\"btn btn-outline-danger\"\n                                            (click)=\"updateSurvey()\">\n                                        Open survey\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-danger\"\n                                            (click)=\"deleteSurvey()\">\n                                        Delete\n                                    </button>\n                                </div>\n\n                            </div>\n\n                        </mat-tab>\n                        btn-info\n\n                    </mat-tab-group>\n                </div>\n            </form>\n        </mat-tab>\n\n        <mat-tab label=\"Favourite\">\n            <div class=\"example-large-box mat-elevation-z4\">\n\n            </div>\n        </mat-tab>\n\n\n    </mat-tab-group>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {User} from '@shared/interfaces/user';\nimport {UserService} from '@services/user.service';\n\n@Component({\n    selector: 'app-user-list',\n    templateUrl: './user-list.component.html',\n    styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n    users: User[];\n\n    constructor(private userService: UserService) {\n    }\n\n    ngOnInit(): void {\n        this.userService.findAll().subscribe(data => {\n            this.users = data;\n        });\n    }\n}\n","<h2> user list </h2>\n<div class=\"card my-5\">\n    <div class=\"card-body\">\n        <table class=\"table table-bordered table-striped\">\n            <thead class=\"thead-dark\">\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let user of users\">\n                <td>{{ user.id }}</td>\n                <td>{{ user.username }}</td>\n                <td>{{ user.email }}</td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {CheckBox} from '../shared/interfaces/checkBox';\n\n\n@Injectable({providedIn: 'root'})\nexport class CheckboxService {\n\n    private readonly userUrl: string;\n\n    constructor(\n        private http: HttpClient) {\n        this.userUrl = 'http://localhost:8082/user/';\n    }\n\n    public findAllBySurveyId(userId: number, surveyId: number): Observable<CheckBox[]> {\n        console.log('Getting options for survey ' + surveyId);\n        const url = `${this.userUrl}${userId}/surveys/${surveyId}`;\n        return this.http.get<CheckBox[]>(url);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, Subscription} from 'rxjs';\nimport {Survey} from '../shared/interfaces/survey';\nimport {User} from \"../shared/interfaces/user\";\n\n@Injectable({providedIn: 'root'})\nexport class SurveyService {\n\n    private readonly userUrl: string;\n\n    constructor(\n        private http: HttpClient) {\n        this.userUrl = 'http://localhost:8082/user/';\n    }\n\n    public findAllByUserId(userId: number): Observable<Survey[]> {\n        const url = `${this.userUrl}${userId}/surveys`;\n        return this.http.get<Survey[]>(url);\n    }\n\n    public findOpenByUserId(userId: number): Observable<Survey[]> {\n        const url = `${this.userUrl}${userId}/surveys/open`;\n        return this.http.get<Survey[]>(url);\n    }\n\n    public findClosedByUserId(userId: number): Observable<Survey[]> {\n        const url = `${this.userUrl}${userId}/surveys/closed`;\n        return this.http.get<Survey[]>(url);\n    }\n\n    public updateSurvey(userId: number, surveyId: number, updData): any {\n\n        const url = `${this.userUrl}${userId}/surveys/${surveyId}`;\n        updData.id = surveyId;\n        console.log(updData);\n\n        const formData: FormData = new FormData();\n        formData.append('surveyDTO', JSON.stringify(updData));\n        return this.http.post<any>(url, formData).subscribe(data => {\n            console.log('Survey opened/closed successfully!');\n        }, error => {\n            console.log(JSON.stringify(error));\n        });\n    }\n\n    public deleteSurvey(userId: number, surveyId: number): Subscription {\n        const url = `${this.userUrl}${userId}/surveys/${surveyId}`;\n\n        return this.http.delete<Survey>(url).subscribe(data => {\n            console.log('Successful survey deleting!!!');\n        }, error => {\n            console.log(JSON.stringify(error));\n        });\n    }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {SportCategory} from \"../../../../../shared/interfaces/sportCategory\";\nimport {Observable} from \"rxjs\";\nimport {BannerService} from \"../../../../../services/banners.service\";\n\n@Component({\n  selector: 'app-predefined-categories-settings',\n  templateUrl: './predefined-categories-settings.component.html',\n  styleUrls: ['./predefined-categories-settings.component.scss']\n})\nexport class PredefinedCategoriesSettingsComponent implements OnInit {\n\n  @Input() predefinedCategories: Observable<SportCategory[]>;\n  public selectedCategory: SportCategory;\n  @Output() selectedCategoryChanged = new EventEmitter<SportCategory>();\n  private predefinedState: String;\n\n  constructor(private bannerService : BannerService) { }\n\n  ngOnInit(): void {\n  }\n\n  selectCategoryAt(index: number) {\n    this.selectedCategoryChanged.emit(this.predefinedCategories[index]);\n  }\n\n  predefinedSetting(category: SportCategory) {\n    if (category.showBanners == true) {\n      this.predefinedState = \"show\";\n    }\n    else {\n      this.predefinedState = \"hide\";\n    }\n    this.bannerService.predefinedSetting(category, this.predefinedState).subscribe(\n        data => console.log(data));\n  }\n\n}\n","<div class=\"pb-5\">\n    <div class=\"predefined-ann bg-white w-100 m-0\">\n        <p>PREDEFINED BANNERS</p>\n    </div>\n    <div class=\"container categories-list mb-5\" >\n        <div class=\"predefined-list-title h-100 pt-3 pb-4 mb-3\">\n            <div class=\"float-left w-50\">\n                <p>CATEGORY NAME</p>\n            </div>\n            <div class=\"float-right w-50\">\n                <p>SHOW/HIDE</p>\n            </div>\n        </div>\n        <div class=\"row d-block\">\n            <div *ngFor=\"let pc of predefinedCategories; let i = index\" class=\"pl-0 pr-0\">\n                <app-category-item [predefinedCategory]=\"pc\" (categoryChange)=\"predefinedSetting($event)\" (click)=\"selectCategoryAt(i)\"></app-category-item>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-banners-header',\n  templateUrl: './banners-header.component.html',\n  styleUrls: ['./banners-header.component.scss']\n})\nexport class BannersHeaderComponent implements OnInit {\n  @Output() addBanner: EventEmitter<any> = new EventEmitter<any>();\n\n  onButtonClick() {\n    this.addBanner.emit();\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"banner-header mb-3\">\n    <div class=\"float-left\">\n        <h4>BANNERS</h4>\n    </div>\n    <div class=\"float-right\">\n        <button type=\"button\" class=\"add-button\" (click)=\"onButtonClick()\">+ New Banner</button>\n    </div>\n</div>\n<hr>\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {ResponseData} from '@modules/user-side/response-data';\nimport {User} from '@modules/user-side/user';\n\n\nconst httpOptions = {\n    headers: new HttpHeaders(\n        {\n            'Content-Type' : 'application/json'\n        }\n    )\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegistrationClientService {\n\n    baseUrl = 'http://localhost:8082';\n    registrationUrl = '/registration';\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    register(requestRegistrationDTO: User): Observable<ResponseData> {\n        return this.http.post<ResponseData>(\n            this.baseUrl + this.registrationUrl,\n            requestRegistrationDTO,\n            httpOptions\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        );\n    }\n\n    handleError(error) {\n        const errorMessage = `Error Code: ${error.status} - ${error.error.error} \\nMessage: ${error.error.message}`;\n        window.alert(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","export class User {\n    email: string;\n    password: string;\n    username: string;\n    role: string;\n    newPassword: string;\n    confirmPassword: string;\n    token: string;\n\n\n\n    public setRole(role: string) {\n        this.role = role;\n    }\n\n    public getRole(): string {\n        return this.role;\n    }\n\n    public setEmail(email: string) {\n        this.email = email;\n    }\n\n    public getEmail(): string {\n        return this.email;\n    }\n\n    public setUsername(username: string) {\n        this.username = username;\n    }\n\n    public getUsername(): string {\n        return this.username;\n    }\n\n    public setPassword(password: string) {\n        this.password = password;\n    }\n\n    public getPassword(): string {\n        return this.password;\n    }\n\n\n\n}\n\n","import {MessagesEnum} from './messagesEnum';\n\nexport class FlashMessage {\n    public title: string;\n    public text: string;\n    public type: MessagesEnum;\n\n\n    constructor() {\n    }\n}\n","import {Observable, throwError} from 'rxjs';\nimport {ResponseData} from '@modules/user-side/response-data';\nimport {catchError, retry} from 'rxjs/operators';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Reset_entity} from '@modules/user-side/reset_entity';\n\nconst httpOptions = {\n    headers: new HttpHeaders(\n        {\n            'Content-Type': 'application/json'\n        }\n    )\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ResetService {\n\n    baseUrl = 'http://localhost:8082';\n    resetUrl = '/reset_password';\n    constructor(\n        private http: HttpClient\n    ) { }\n    reset(resetEntity: Reset_entity): Observable<ResponseData> {\n        return this.http.post<ResponseData>(\n            this.baseUrl + this.resetUrl,\n            resetEntity,\n            httpOptions\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        );\n    }\n\n    handleError(error) {\n        const errorMessage = `Error Code: ${error.status} - ${error.error.error} \\nMessage: ${error.error.message}`;\n        window.alert(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {Banner} from \"../../../../../shared/interfaces/banner\";\nimport {BannerService} from \"../../../../../services/banners.service\";\n\n\nclass HttpErrorResponse {\n  message: \"No banners\";\n}\n\n@Component({\n  selector: 'app-edit-banner',\n  templateUrl: './edit-banner.component.html',\n  styleUrls: ['./edit-banner.component.scss']\n})\nexport class EditBannerComponent implements OnInit {\n\n  @Input() banner: Banner;\n  @Input() isNew: boolean;\n  uploadFile: File = null;\n  @Input() isEditing: boolean;\n  @Output() isEditingChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  constructor(private bannerService: BannerService){}\n\n  ngOnInit() {\n  }\n\n  handleFileInput(files: FileList) {\n      this.uploadFile = files[0];\n  }\n\n    editBanner(){\n      if (!this.isNew) {\n          this.isEditing = true;\n          this.isEditingChange.emit(this.isEditing);\n          this.bannerService.updateBanner(this.banner, this.uploadFile).subscribe(\n              data => console.log(data)\n          );\n          this.isEditing = false;\n      } else {\n          this.bannerService.createBanner(this.banner, this.uploadFile).subscribe(\n              data => console.log(data)\n          )\n          this.isEditing = false;\n      }\n    }\n\n\n    public getBanner(): void {\n    this.bannerService.getBanner(2).subscribe(\n        (response: Banner) => {\n          this.banner = response;\n          console.log(this.banner);\n        },\n        (error: HttpErrorResponse) => {\n          console.log(error);\n        }\n    );\n  }\n\n}\n","<div class=\"banner-card test\" *ngIf=\"banner\">\n    <div *ngIf=\"isEditing else preview\">\n        <form #editForm=\"ngForm\" (ngSubmit)=\"editBanner()\">\n            <div class=\"form-group\">\n                <input type=\"text\" [(ngModel)]=\"banner.title\" name=\"title\" class=\"form-control title-field\" id=\"title\"\n                    placeholder=\"Name\">\n                <div class=\"dropzone\">\n<!--                    <img src=\"../../../../assets/uploaded_images/{{banner.imgPath}}\" alt=\"\" />-->\n                    <img src=\"../../../../assets/add_picture.svg\" class=\"upload-icon\" alt=\"\" />\n                    <input type=\"file\" (change)=\"handleFileInput($event.target.files);\" name=\"file\" id=\"file\"\n                        class=\"upload-input\" />\n                </div>\n            </div>\n            <div>\n                <button (click)=\"isEditing = !isEditing; isEditingChange.emit(isEditing)\" type=\"reset\" class=\"cancel-button\">Cancel</button>\n                <button type=\"submit\" class=\"save-button\" >Save</button>\n            </div>\n        </form>\n        <div class=\"banner-date inside outside\">\n            <p>Last updated {{banner.lastUpdated}} </p>\n        </div>\n    </div>\n    <ng-template #preview>\n        <div class=\"banner-title\">\n            <h6>{{banner.title | uppercase}} </h6>\n        </div>\n        <div class=\"img-container\">\n            <img src=\"../../../../assets/uploaded_images/{{banner.imgPath}}\" alt=\"\" />\n        </div>\n        <button class=\"save-button\" (click)=\"isEditing = !isEditing; isEditingChange.emit(isEditing)\">Edit</button>\n        <div class=\"banner-date inside outside\">\n            <p>Last updated {{banner.lastUpdated}} </p>\n        </div>\n    </ng-template>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Article } from '@shared/interfaces/article';\nimport { AppConstants } from '@shared/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n\n  constructor(private http: HttpClient) { }\n\n  getArticles(): Observable<Article[]> {\n    return this.http.get<Article[]>(AppConstants.API_URL + '/articles');\n  }\n\n  addArticle(formData): Observable<any> {\n    return this.http.post(`${AppConstants.API_URL}/articles`, formData,\n        { responseType: 'text'});\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport class AuthInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const basicHeader = JSON.parse(JSON.stringify(sessionStorage.getItem('Authorization')));\n        if (basicHeader) {\n            req = req.clone({\n                setHeaders: {\n                    Authorization: basicHeader,\n                }\n            });\n        }\n        return next.handle(req);\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor() {}\n}\n","<router-outlet></router-outlet>","import {Pipe, PipeTransform} from '@angular/core';\nimport {Video} from '../shared/interfaces/video';\n\n@Pipe({\n    name: 'VideoPipe'\n})\nexport class VideoPipe implements PipeTransform {\n\n    transform(value: Video[], input: any, view: any): any {\n        let res = [];\n        if (input) {\n            res = this.filterInput(value, input);\n            return this.filterView(res, view);\n        } else {\n            return this.filterView(value, view);\n        }\n    }\n\n    filterInput(value: any, input: any): any {\n        input = input.toLowerCase();\n        const res = [];\n        for (const val of value) {\n            if (val.title !== '') {\n                const lowerVal = val.title.toLowerCase();\n                if (lowerVal.indexOf(input) >= 0) {\n                    res.push(val);\n                }\n            }\n            else{\n                if (input === 'none') {\n                    res.push(val);\n                }\n            }\n        }\n        return res;\n    }\n\n\n    filterView(value: any, view: any): any {\n        if (view !== null) {\n            const res = [];\n            for (const val of value) {\n                if (val.publish === view) {\n                    res.push(val);\n                }\n            }\n            return res;\n        } else {\n            return value;\n        }\n    }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {SportCategory} from '../shared/interfaces/sportCategory';\nimport {AppConstants} from '../shared/app.constants';\n\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SportCategoryService {\n\n    constructor(private httpClient: HttpClient) {\n    }\n\n    getNullParent(): any {\n        return this.httpClient.get<Array<SportCategory>>('http://localhost:8082/sportCategory/basicNavigationList');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { faFilm } from '@fortawesome/free-solid-svg-icons';\nimport {faTwitter} from '@fortawesome/free-brands-svg-icons';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  filmIcon = faTwitter;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"container-fluid footer-page bg-danger\">\n        <div class=\"row p-3\">\n            <div class=\"col-xl-2 col-lg-4 col-md-6 col-sm-12 p-0 m-0\">\n                <h3 class=\"text-white\">Sport Hub</h3>\n            </div>\n            <div class=\"col-xl-10 col-lg-8 col-md-6 col-sm-12 text-xl-end text-lg-end text-md-end text-sm-start text-start\">\n                <p class=\"footer-content-size p-0 m-0 text-white\">Copyright &copy;2021 Sport Hub</p>\n                <a href=\"#\" class=\"footer-content-size nav-link text-white text-xl-end text-lg-end text-md-end text-sm-start text-start p-0\">Privacy/Terms</a>\n            </div>\n        </div>\n</footer>\n","import {Component, OnInit, Input} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {User} from '../user';\nimport {ResponseData} from '../response-data';\nimport {RegistrationClientService} from '@services/Registration.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-registration-form',\n    templateUrl: './registration.component.html',\n    styleUrls: [ './registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n    visible = false;\n    buttonRegister = true;\n    submitted = false;\n\n    private registrationData: User;\n    registrationForm: FormGroup;\n\n\n    constructor(\n        public registrationClient: RegistrationClientService, public router: Router\n    ) {\n    }\n\n\n    enableForm(enable: boolean) {\n        if (enable) {\n\n            this.registrationForm.get('username').enable();\n            this.registrationForm.get('password').enable();\n            this.registrationForm.get('email').enable();\n            this.buttonRegister = true;\n        } else {\n            this.registrationForm.get('username').disable();\n            this.registrationForm.get('password').disable();\n            this.registrationForm.get('email').disable();\n            this.buttonRegister = false;\n        }\n    }\n\n    register() {\n        this.submitted = true;\n        if (this.registrationForm.invalid) {\n            return;\n        } else {\n            this.registrationData = new User();\n            this.registrationData.setUsername(this.registrationForm.get('username').value);\n            this.registrationData.setEmail(this.registrationForm.get('email').value);\n            this.registrationData.setPassword(this.registrationForm.get('password').value);\n            this.registrationClient.register(this.registrationData).subscribe((data: ResponseData) => {\n                console.log('RESPONSE DATA ' + JSON.stringify(data));\n            if (data.responseCode === '200') {\n                    window.alert(data.responseMsg);\n                    this.visible = true;\n                    this.enableForm(false);\n                } else {\n                    this.enableForm(true);\n                }\n            }, error => {\n                console.log('An Error Occured ' + error);\n            });\n            this.router.navigateByUrl('/');\n        }\n    }\n\n    ngOnInit() {\n        this.registrationForm = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            email: new FormControl('', [Validators.required, Validators.email]),\n            password: new FormControl('', [Validators.required])\n        });\n    }\n\n    setSubmitted(submitted: boolean) {\n        this.submitted = submitted;\n    }\n\n}\n","<app-footer></app-footer>\n<div class=\"sidenav\">\n    <div class=\"login-main-text\">\n        <h2>Application<br> Registration Page</h2>\n        <p>Register from here to access.</p>\n    </div>\n</div>\n<!--<div class=\"main\">-->\n<!--<div class=\"col-md-6 col-sm-12\">-->\n<!--    <div class=\"login-form\">-->\n\n        <div class=\"alert alert-danger\" *ngIf=\"registrationForm.controls['username'].errors && submitted\">\n            <div *ngIf=\"registrationForm.controls['username'].errors.required\">First Name is required</div>\n        </div>\n        <div class=\"alert alert-danger\" *ngIf=\"registrationForm.controls['password'].errors  && submitted\">\n            <div *ngIf=\"registrationForm.controls['password'].errors.required\">Last Name is required</div>\n        </div>\n        <div class=\"alert alert-danger\" *ngIf=\"registrationForm.controls['email'].errors  && submitted\">\n            <div *ngIf=\"registrationForm.controls['email'].errors.required\">Email is required</div>\n            <div *ngIf=\"registrationForm.controls['email'].errors.email\">Please Enter Valid Email Format</div>\n        </div>\n<!--    </div>-->\n<!--</div>-->\n<div class=\"main\">\n    <div class=\"col-md-6 col-sm-12\">\n        <div class=\"login-form\">\n            <form [formGroup]=\"registrationForm\" class=\"form-signin\">\n\n                <div class=\"form-group\">\n                    <input type=\"email\" formControlName=\"email\" placeholder=\"Email\" class=\"form-control\" id=\"email\">\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"username\" placeholder=\"username\" class=\"form-control\"\n                           id=\"username\">\n                </div>\n                <div class=\"form-group\">\n\n                    <input type=\"text\" placeholder=\"password\" class=\"form-control\" id=\"password\"\n                           formControlName=\"password\">\n                </div>\n\n\n                <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"buttonRegister==false\"\n                        (click)=\"register()\"\n                >Register\n                </button>\n\n            </form>\n        </div>\n        <div class=\"col-md-6\">\n            <div *ngIf=\"visible==true\">\n            </div>\n        </div>\n    </div>\n</div>\n<!--</div>-->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BannersManagementComponent } from './pages/banners-management/banners-management.component';\nimport { EditBannerComponent } from './components/edit-banner/edit-banner.component';\nimport { BannerItemComponent } from './components/banner-item/banner-item.component';\nimport { BannersListComponent } from './components/banners-list/banners-list.component';\nimport { PredefinedCategoriesSettingsComponent } from './components/predefined-categories-settings/predefined-categories-settings.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {BannersHeaderComponent} from \"./components/banners-header/banners-header.component\";\nimport {CategoryItemComponent} from \"./components/category-item/category-item.component\";\nimport {ModuleModule} from \"../../module.module\";\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatSelectModule} from \"@angular/material/select\";\n\n\n@NgModule({\n    declarations: [BannersManagementComponent, EditBannerComponent, BannerItemComponent, BannersListComponent, PredefinedCategoriesSettingsComponent, BannersHeaderComponent, CategoryItemComponent],\n  exports: [\n      BannerItemComponent,\n      BannersListComponent,\n      EditBannerComponent,\n      BannersManagementComponent\n  ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        ModuleModule,\n        FontAwesomeModule,\n        MatFormFieldModule,\n        MatSelectModule\n    ]\n})\nexport class AdminBannersModule { }\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Video} from '../shared/interfaces/video';\n\n@Pipe({name: 'safe'})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {\n    }\n\n    transform(video: Video): any {\n        let res: string;\n        if (!video.uploaded) {\n            const url = video.url;\n\n            const arr = url.split('?v=');\n            const link = arr[1].split('&')[0];\n            res = 'https://www.youtube-nocookie.com/embed/' + link + '?controls=1';\n            res = (this.sanitizer.bypassSecurityTrustResourceUrl(res) as string);\n        } else {\n            res = 'assets/videos/' + video.url;\n        }\n        console.log(res);\n        return res;\n    }\n}\n","export enum MessagesEnum{\n    successful, warn\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {AdminBannersModule} from \"@modules/admin-side/admin-banners/admin-banners.module\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ModuleModule} from '@modules/module.module';\nimport {AuthentificationService} from '@services/authentification.service';\nimport {UserService} from '@services/user.service';\nimport {AuthInterceptor} from './interceptors/auth.interceptor';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n    declarations: [\n        AppComponent\n        //  Forgot_passwordComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        ModuleModule,\n        FontAwesomeModule,\n        HttpClientModule,\n        AdminBannersModule,\n        HttpClientModule,\n        NoopAnimationsModule,\n        MatListModule,\n        FormsModule,\n        MatSlideToggleModule\n    ],\n    providers: [\n        UserService,\n        AuthentificationService,\n        { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    ],\n    bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner-list-userside',\n  templateUrl: './banner-list-userside.component.html',\n  styleUrls: ['./banner-list-userside.component.scss']\n})\nexport class BannerListUsersideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>banner-list-userside works!</p>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Video} from '../../../../shared/interfaces/video';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {VideoService} from '../../../../services/video.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-video-form',\n    templateUrl: './video-form.component.html',\n    styleUrls: ['./video-form.component.scss']\n})\nexport class VideoFormComponent implements OnInit {\n\n    formVideo: Video = {\n        id: 0,\n        title: '',\n        url: '',\n        publish: false,\n        uploaded: true,\n        showComments: true,\n    };\n\n    file: File;\n\n    disable = true;\n\n    constructor(\n        public dialogRef: MatDialogRef<VideoFormComponent>,\n        private videoService: VideoService,\n        private router: Router,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n    }\n\n    changeDisable(): void {\n        this.disable = false;\n    }\n\n    handleFileInput(files: FileList): void {\n        this.changeDisable();\n        this.file = files.item(0);\n    }\n\n    addVideo(): void {\n        if (this.data == null || this.data.change == null) {\n            if (this.formVideo.url) {\n                this.file = null;\n                this.formVideo.uploaded = false;\n            }\n            this.videoService.add(this.formVideo, this.file);\n        } else {\n            if (this.formVideo.url && this.data.video.uploaded) {\n                this.data.video.uploaded = false;\n                this.data.video.url = this.formVideo.url;\n                this.videoService.update(this.data.video, this.file);\n            }\n\n            if (this.formVideo.url !== this.data.video.url) {\n                this.data.video.url = this.formVideo.url;\n                this.videoService.update(this.data.video, this.file);\n            }\n\n            if (!this.data.video.uploaded && this.file) {\n                this.data.video.uploaded = true;\n                this.videoService.update(this.data.video, this.file);\n            }\n            this.dialogRef.close(this.data.video);\n        }\n        this.dialogRef.close();\n    }\n\n    checkUrlInput(): void {\n        if (this.formVideo.url) {\n            this.changeDisable();\n        } else {\n            this.disable = true;\n        }\n    }\n}\n","<h1 mat-dialog-title class=\"text-center\">Add new video</h1>\n<div mat-dialog-content class=\"container m-md-3\">\n    <mat-label>\n        <h4 class=\"text-secondary mt-5\">ADD URL</h4>\n        <label class=\"w-100 justify-content-center\">\n            <input id=\"url-input\" [(ngModel)]=\"formVideo.url\" (change)=\"checkUrlInput()\" type=\"text\" placeholder=\"Add new url\"/>\n        </label>\n    </mat-label>\n    <mat-label *ngIf=\"!formVideo.url\">\n        <h4 class=\"text-secondary mt-4\">UPLOAD</h4>\n        <label id=\"upload-label\" class=\"w-80\" for=\"upload-video\">\n            <div class=\"upload-section\">\n                <span *ngIf=\"file\" class=\"file-input\">{{ file.name }}</span>\n                <span *ngIf=\"!file\" class=\"file-input\"></span>\n                <span class=\"badge-danger file-button text-center align-items-center\">Upload</span>\n            </div>\n        </label>\n        <label>\n            <input type=\"file\" id=\"upload-video\" (change)=\"handleFileInput($event.target.files)\">\n        </label>\n\n    </mat-label>\n</div>\n<div mat-dialog-actions class=\"float-right mt-0\">\n    <button mat-button class=\"text-danger border-0 text-center\" (click)=\"onNoClick()\">Cancel</button>\n    <button mat-button class=\"bg-danger border-0 text-white text-center\" (click)=\"addVideo()\" [disabled]=\"disable\">Add</button>\n    <!--  <button mat-button [mat-dialog-close]=\"data.title\" cdkFocusInitial>Ok</button>-->\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AppConstants} from '../../../../shared/app.constants';\nimport {AuthentificationService} from '../../../../services/authentification.service';\nimport {User} from '../../../../shared/interfaces/user';\nimport {Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n    languageOptions = [];\n\n    language = null;\n\n    user: User = null;\n\n    searchText: string = null;\n\n\n    constructor(private authenticationService: AuthentificationService,\n                private router: Router) {\n    }\n\n\n    ngOnInit(): void {\n        this.languageOptions = AppConstants.languageOptions;\n        this.language = this.languageOptions[0];\n        if (this.authenticationService.isUserLoggedIn()) {\n            this.authenticationService.getLoggedUser().subscribe(data => {\n                    this.user = data;\n                },\n                error => {\n                    return this.router.navigate(['/login']);\n                });\n        }\n    }\n\n\n    // tslint:disable-next-line:variable-name\n    changeLanguage(language_: any): void {\n        this.language = language_;\n    }\n}\n","<header class=\"mb-2\">\n    <div class=\"container-fluid row m-0 p-0 border-bottom border-1\">\n        <div class=\"col-md-2 bg-danger text-center\">\n            <a href=\"/\" class=\"text-white\">\n                <h2 id=\"header-name\">\n                    Sports Hub\n                </h2>\n            </a>\n        </div>\n        <div class=\"col-md-4 text-center border-right border-1\">\n            <div class=\"search-box\">\n                <span class=\"material-icons\" id=\"search-icon\">\n                    search\n                </span>\n                <input type=\"text\" placeholder=\"Search by\" [(ngModel)]=\"searchText\" [matAutocomplete]=\"auto\">\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option>23</mat-option>\n                    <mat-option>23</mat-option>\n                    <mat-option>23</mat-option>\n                </mat-autocomplete>\n            </div>\n        </div>\n        <div class=\"col-md-2 text-center border-right border-1\">\n            <div class=\"share-box\">\n                <label class=\"text-secondary\">Share</label>\n                <div class=\"btn-group share-group\">\n                    <a href=\"#\" class=\"fa fa-facebook share-button text-dark icon\"></a>\n                    <a href=\"#\" class=\"fa fa-twitter share-button text-dark icon\"></a>\n                    <a href=\"#\" class=\"fa fa-google-plus share-button text-dark icon\"></a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-3 text-center text-center\">\n            <div class=\"user-div\" *ngIf=\"user\">\n                <div class=\"user-image row justify-content-center\">\n                    <div class=\"col-md-4 col-2 text-end p-0\">\n                        <img src=\"favicon.ico\">\n                    </div>\n                    <div class=\"col-md-8 col-10 text-start d-flex\">\n                        <div class=\"col username-admin-div\" *ngIf=\"user.role === 'ROLE_ADMIN'\">\n                            <div class=\"row\">\n                                {{ user.username }}\n                            </div>\n                            <div class=\"row text-secondary p-0\">\n                                <h6 class=\"administrator-text\">Administrator</h6>\n                            </div>\n                        </div>\n                        <div class=\"username-user-div\" *ngIf=\"user.role === 'ROLE_USER'\">\n                            {{ user.username }}\n                        </div>\n                        <div class=\"col p-0\">\n                            <mat-form-field color=\"warn\">\n                                <mat-select>\n                                    <mat-option (click)=\"router.navigate(['user/' + user.id])\">\n                                        Profile\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"!user\" class=\"login-box flex-row\">\n                <a href=\"/registration\" class=\"bg-white btn text-danger sing-up-btn\">Sign up</a>\n                <a href=\"/login\" class=\"bg-white btn text-danger login-btn\">Log in</a>\n            </div>\n        </div>\n        <div class=\"col-md-1 align-self-center text-end language\">\n            <mat-form-field appearance=\"legacy\" color=\"warn\">\n                <mat-select [value]=\"language.viewValue\">\n                    <mat-option *ngFor=\"let language_ of languageOptions\" [value]=\"language_.viewValue\"\n                                (click)=\"changeLanguage(language_)\">\n                        {{ language_.viewValue }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n</header>\n","import {Observable, throwError} from 'rxjs';\nimport {ResponseData} from '@modules/user-side/response-data';\nimport {catchError, retry} from 'rxjs/operators';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {User} from '@modules/user-side/user';\n\n\nconst httpOptions = {\n    headers: new HttpHeaders(\n        {\n            'Content-Type': 'application/json'\n        }\n    )\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SendEmailService {\n\n    baseUrl = 'http://localhost:8082';\n    forgotUrl = '/forgot_password';\n    constructor(\n        private http: HttpClient\n    ) { }\n    send(requestRegistrationDTO: User): Observable<ResponseData> {\n        return this.http.post<ResponseData>(\n            this.baseUrl + this.forgotUrl,\n            requestRegistrationDTO,\n            httpOptions\n        ).pipe(\n            retry(1),\n            catchError(this.handleError)\n        );\n    }\n\n    handleError(error) {\n        let errorMessage = `Error Code: ${error.status} - ${error.error.error} \\nMessage: ${error.error.message}`;\n        window.alert(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>banner works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Video} from '../../../../shared/interfaces/video';\nimport {VideoService} from '../../../../services/video.service';\nimport {VideoFormComponent} from '../video-form/video-form.component';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-video-edit',\n    templateUrl: './video-edit.component.html',\n    styleUrls: ['./video-edit.component.scss']\n})\nexport class VideoEditComponent implements OnInit {\n\n    id: number;\n\n    video: Video;\n\n    constructor(private activateRoute: ActivatedRoute,\n                private dialog: MatDialog,\n                private videoService: VideoService) {\n        this.id = activateRoute.snapshot.params.id;\n    }\n\n    ngOnInit(): void {\n        this.videoService.getById(this.id).subscribe(data => {\n            this.video = data;\n        });\n    }\n\n    allowCommentChange(): void {\n        this.video.showComments = !this.video.showComments;\n    }\n\n    changeVideo(): void {\n        // @ts-ignore\n        const dialogRef = this.dialog.open(VideoFormComponent, {\n            width: document.body.offsetWidth * 0.5,\n            data: {\n                change: true,\n                video: this.video\n            }\n        });\n        dialogRef.afterClosed().subscribe(data => {\n            this.video.url = data.url;\n        });\n    }\n\n    save(): void {\n        this.videoService.saveVideo(this.video);\n    }\n}\n","<div class=\"col-12 pl-5 border-bottom\">\n    <div class=\"container-fluid d-flex justify-content-between\">\n        <h2 class=\"text-danger\">Video</h2>\n        <div class=\"text-danger mr-md-4\">\n            <a href=\"/admin/videos\">\n                <button mat-raised-button color=\"warn\" class=\"add-button text-danger bg-white\">\n                    Cancel\n                </button>\n            </a>\n            <button mat-raised-button color=\"warn\" class=\"add-button\" id=\"save\" (click)=\"save()\">\n                Save\n            </button>\n        </div>\n    </div>\n</div>\n<app-admin-navigation></app-admin-navigation>\n<mat-card class=\"container-fluid col-6 m-auto mt-md-5 position-relative\">\n    <div class=\"preview float-right\">\n        <a [href]=\"'videos/'+id\" class=\"preview-text text-danger\" (click)=\"save()\">\n        <span class=\"material-icons align-middle\">\n            visibility\n        </span>\n            Preview\n        </a>\n    </div>\n    <video *ngIf=\"video.uploaded\" class=\"mt-3 video\" [src]=\"video | safe\" (click)=\"changeVideo()\">\n    </video>\n    <div *ngIf=\"video.uploaded == false\">\n        <iframe id=\"frame\" [src]=\"video | safe\"></iframe>\n        <div class=\"text-right\">\n            <button mat-raised-button color=\"warn\" class=\"add-button\" id=\"change-button\" (click)=\"changeVideo()\">\n                CHANGE\n            </button>\n        </div>\n    </div>\n    <div class=\"text-left m-3\">\n        <h4 class=\"text-secondary\">VIDEO TITLE</h4>\n        <label class=\"w-100 justify-content-center\">\n            <input matInput [(ngModel)]=\"video.title\" type=\"text\" placeholder=\"Add title\" required=\"true\"/>\n        </label>\n    </div>\n    <mat-slide-toggle class=\"text-left w-100 ml-3\" labelPosition=\"before\" color=\"warn\" [checked]=\"video.showComments\"\n                      (toggleChange)=\"allowCommentChange()\">\n        Comments: Show\n    </mat-slide-toggle>\n</mat-card>\n\n\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {SportCategory} from \"../../../../../shared/interfaces/sportCategory\";\n\n@Component({\n  selector: 'app-category-item',\n  templateUrl: './category-item.component.html',\n  styleUrls: ['./category-item.component.scss']\n})\nexport class CategoryItemComponent implements OnInit {\n\n  @Input() predefinedCategory: SportCategory;\n  @Output() categoryChange: EventEmitter<SportCategory> = new EventEmitter<SportCategory>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  categoryChanged() {\n    this.categoryChange.emit(this.predefinedCategory);\n  }\n\n}\n","<div class=\"list-item pt-2 pb-2\">\n    <div class=\"float-left w-50 pl-2 pt-2\">\n        <p>{{predefinedCategory?.name}}</p>\n    </div>\n    <div class=\"float-right w-50 pl-2\">\n<!--        <p>{{predefinedCategory?.showBanners}}</p>-->\n        <div class=\"form-check form-switch switch pl-5\">\n            <input [(ngModel)]=\"predefinedCategory.showBanners\" (ngModelChange)=\"categoryChanged()\" class=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\">\n            <label *ngIf=\"predefinedCategory.showBanners\" class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Show</label>\n            <label *ngIf=\"!predefinedCategory.showBanners\" class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Hide</label>\n        </div>\n    </div>\n</div>\n","import {Component, Inject, OnInit, Input} from '@angular/core';\nimport {FlashMessage} from '../../../shared/interfaces/flashMessage';\n\n@Component({\n    selector: 'app-flash-message',\n    templateUrl: './flash-message.component.html',\n    styleUrls: ['./flash-message.component.scss']\n})\nexport class FlashMessageComponent implements OnInit {\n\n    @Input()\n    messages: FlashMessage[];\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    clear(message: any): void {\n        // @ts-ignore\n        this.messages.splice(this.messages.indexOf(message), 1);\n    }\n}\n","<div class=\"messages\">\n    <div *ngFor=\"let message of messages\">\n        <div class=\"row bg-white message\">\n            <div class=\"col-2 mt-3\">\n                <span class=\"material-icons\" id=\"success\">\n                    check_circle\n                </span>\n            </div>\n            <div class=\"col-10 mt-3\">\n                <button class=\"close-btn\" (click)=\"clear(message)\">\n                    <span class=\"material-icons\">\n                        clear\n                    </span>\n                </button>\n                <b>{{message.title}}</b>\n                <h4>{{message.text}}</h4>\n            </div>\n        </div>\n    </div>\n</div>\n","export class Reset_entity{\n    newPassword: string;\n    confirmPassword: string;\n    token: string;\n\n    public getToken(): string {\n        return this.token;\n    }\n\n    public setToken(token: string) {\n        this.token = token;\n    }\n    public setNewPassword(newPassword: string) {\n        this.newPassword = newPassword;\n    }\n\n    public getNewPassword() {\n        return this.newPassword;\n    }\n\n    public setConfirmPassword(confirmPassword: string) {\n        this.confirmPassword = confirmPassword;\n    }\n\n    public getConfirmPassword() {\n        return this.confirmPassword;\n    }\n}\n","\nimport {AppConstants} from '../../../../shared/app.constants';\nimport {Component, OnInit, Renderer2} from '@angular/core';\nimport {SportCategory} from '@shared/interfaces/sportCategory';\nimport {SportCategoryService} from '@services/sportCategory.service';\n\n\n\n@Component({\n        selector: 'app-navigation',\n        templateUrl: './navigation.component.html',\n        styleUrls: ['./navigation.component.scss']\n    }\n)\nexport class NavigationComponent implements OnInit {\n\n    beforeCategories = AppConstants.Paths.before;\n    afterCategories = AppConstants.Paths.after;\n\n    layers = [];\n\n    sportCategories: Array<SportCategory>;\n\n\n    constructor(private sportCategoryService: SportCategoryService) {\n    }\n\n\n    private generate_first_layer(sportCategory: SportCategory): void {\n        if (sportCategory.parent === null) {\n            if (this.layers.length) {\n                if (this.layers[0][0][0].parent === sportCategory.id) {\n                    console.log('Yes');\n                } else {\n                    this.layers = [];\n                }\n            }\n        }\n        if (this.layers.length !== 0) {\n            for (const layer of this.layers) {\n                for (const layerCategory of layer) {\n                    if (layerCategory.parent === sportCategory.id) {\n                        this.layers = this.layers.slice(0, this.layers.indexOf(layer) + 1);\n                    }\n                }\n            }\n        }\n    }\n\n\n    private check_double_click(sportCategory: SportCategory): void {\n        for (const layer of this.layers) {\n            for (const layerElement of layer) {\n                for (const layerCategory of layerElement) {\n                    if (layerCategory.parent === sportCategory.id) {\n                        this.layers = this.layers.slice(0, this.layers.indexOf(layer) + 1);\n                    }\n                }\n            }\n        }\n    }\n\n\n    private check_previous_layer(sportCategory: SportCategory): void {\n        for (const layer of this.layers) {\n            for (const layerElement of layer) {\n                for (const layerCategory of layerElement) {\n                    if (layerCategory.parent === sportCategory.parent) {\n                        this.layers = this.layers.slice(0, this.layers.indexOf(layer) + 1);\n                    }\n                }\n            }\n        }\n    }\n\n    private click_layer_action(sportCategory: SportCategory): void {\n        let copy = false;\n        let index;\n        if (sportCategory.children.length !== 0) {\n            sportCategory.children.forEach(elem => {\n                for (const layer of this.layers) {\n                    for (const layerElement of layer) {\n                        for (const layerCategory of layerElement) {\n                            if (layerCategory.id === elem.id) {\n                                copy = true;\n                                index = this.layers.indexOf(layer);\n                            }\n                        }\n                    }\n                }\n                elem.parent = sportCategory.id;\n            });\n        } else {\n            this.last_layer_action();\n            return;\n        }\n        if (!copy) {\n            this.layers.push([sportCategory.children]);\n        } else {\n            this.clearLayers();\n            // this.layers = this.layers.slice(0, index + 1);\n        }\n    }\n\n    private last_layer_action(): void {\n        this.clearLayers();\n        return;\n    }\n\n    getChild(sportCategory: SportCategory): void {\n        console.log(this.sportCategories);\n        console.log(this.layers);\n\n        // first layer\n        this.generate_first_layer(sportCategory);\n\n        this.check_double_click(sportCategory);\n\n        // for layer from previous\n        this.check_previous_layer(sportCategory);\n\n        // for double click layer\n        this.click_layer_action(sportCategory);\n\n        return;\n    }\n\n    clearLayers(): void {\n        this.layers = [];\n    }\n\n    ngOnInit(): void {\n        this.sportCategoryService.getNullParent().subscribe(data => {\n            for (const category of data) {\n                category.parent = null;\n            }\n            this.sportCategories = data;\n        });\n    }\n}\n","<div class=\"position-absolute w-18 pt-3\">\n    <div class=\"navbar pl-5 pr-5 w-18 float-left align-items-baseline\">\n        <div class=\"nav-item\">\n            <div *ngFor=\"let category of beforeCategories\">\n                <a class=\"link text-danger\" [href]=\"category.ulr\">{{category.name | uppercase}}</a>\n            </div>\n            <div *ngFor=\"let category of sportCategories\" class=\"nav-item text-danger\">\n                <a class=\"link text-danger\" (click)=\"getChild(category)\">\n                    {{ category.name }}\n                </a>\n            </div>\n\n\n            <div *ngFor=\"let category of afterCategories\">\n                <a class=\"link text-danger\" [href]=\"category.ulr\">{{category.name | uppercase}}</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"navbar p-4 w-18 float-left bg-light align-items-baseline\" *ngFor=\"let layer of layers\">\n        <div class=\"nav-item\" *ngFor=\"let comp of layer\">\n            <div class=\"text-danger\" *ngFor=\"let t of comp\" (click)=\"getChild(t)\">\n                <a class=\"nav-link text-danger\">{{ t.name }}</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n<!--copy-->\n\n<div class=\"position-relative d-print-none pt-3\">\n    <div class=\"navbar pl-5 pr-5 w-18 float-left align-items-baseline\">\n        <div class=\"nav-item\">\n\n\n            <div *ngFor=\"let category of beforeCategories\">\n                <a class=\"link text-danger\" [href]=\"category.ulr\">{{category.name | uppercase}}</a>\n            </div>\n\n\n            <div *ngFor=\"let category of sportCategories\" class=\"nav-item text-danger\">\n                <a class=\"link text-danger\" (click)=\"getChild(category)\">\n                    {{ category.name }}\n                </a>\n            </div>\n\n            <div *ngFor=\"let category of afterCategories\">\n                <a class=\"link text-danger\" [href]=\"category.ulr\">{{category.name | uppercase}}</a>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Banner, BannerStatusShort} from \"../../../../../shared/interfaces/banner\";\nimport {BannerService} from \"../../../../../services/banners.service\";\nimport {SportCategory} from \"../../../../../shared/interfaces/sportCategory\";\n\n@Component({\n  selector: 'app-banners-management',\n  templateUrl: './banners-management.component.html',\n  styleUrls: ['./banners-management.component.scss']\n})\nexport class BannersManagementComponent implements OnInit {\n  banners: Banner[];\n  predefined: SportCategory[];\n  selectedBanner: Banner;\n  isSelectedBannerNew: boolean = true;\n  isEditing: boolean;\n\n  constructor(private bannerService: BannerService) { }\n\n  ngOnInit(): void {\n    this.bannerService.getBanners().subscribe( data =>{\n      this.banners = data;\n    });\n    this.bannerService.getPredefined().subscribe( data =>{\n      this.predefined = data;\n    })\n  }\n\n  setSelectedBanner(banner: Banner, isNew = false) {\n    this.isSelectedBannerNew = isNew;\n    this.selectedBanner = banner;\n    this.isEditing = false;\n  }\n\n  addBanner() {\n    this.setSelectedBanner({title: ''}, true);\n  }\n}\n","<div>\n    <app-header></app-header>\n    <app-banners-header (addBanner)=\"addBanner()\"></app-banners-header>\n    <app-admin-navigation></app-admin-navigation>\n    <div class=\"banners-management pt-4\">\n        <app-banners-list [banners]=\"banners\" (selectedBannerChanged)=\"setSelectedBanner($event)\" ></app-banners-list>\n        <app-edit-banner [(isEditing)]=\"isEditing\" [isNew]=\"isSelectedBannerNew\" [banner]=\"selectedBanner\"></app-edit-banner>\n        <app-predefined-categories-settings [predefinedCategories]=\"predefined\"></app-predefined-categories-settings>\n    </div>\n    <app-footer></app-footer>\n</div>\n","import {Injectable, OnInit} from '@angular/core';\nimport {ResponseData} from '../modules/user-side/response-data';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {User} from '../shared/interfaces/user';\nimport {UserService} from './user.service';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthentificationService implements OnInit {\n    private baseUrl = 'http://localhost:8082';\n    private loginUrl = '/login';\n    private httpOptions: { headers: HttpHeaders };\n\n    constructor(\n        private http: HttpClient,\n        private userService: UserService\n    ) {\n    }\n\n\n    login(requestLoginDTO): Observable<ResponseData> {\n\n        this.httpOptions = {\n            headers: new HttpHeaders(\n                {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Basic ' + btoa(requestLoginDTO.email + ':' + requestLoginDTO.password)\n                }\n            )\n        };\n        return this.http.post<ResponseData>(\n            this.baseUrl + this.loginUrl,\n            JSON.stringify(requestLoginDTO),\n            this.httpOptions\n        ).pipe(\n            map(\n                userData => {\n                    sessionStorage.setItem('email', requestLoginDTO.email);\n                    const authString = 'Basic ' + btoa(requestLoginDTO.email + ':' + requestLoginDTO.password);\n                    sessionStorage.setItem('Authorization', authString);\n                    return userData;\n                })\n        );\n    }\n\n    // handleError(error) {\n    //     let errorMessage = `Error Code: ${error.status} - ${error.error.error} \\nMessage: ${error.error.message}`;\n    //     window.alert(errorMessage);\n    //     return throwError(errorMessage);\n    // }\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem('email');\n        console.log(!(user === null));\n        return !(user === null);\n    }\n\n    logOut() {\n        sessionStorage.removeItem('email');\n    }\n\n    getLoggedUser(): Observable<User>{\n        return this.userService.getByEmail(sessionStorage.getItem('email'));\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ResponseData} from '../response-data';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {SendEmailService} from '@services/SendEmail.service';\nimport {User} from '../user';\n\n@Component({\n    selector: 'app-forgot-form',\n    templateUrl: './forgot_password.component.html',\n    styleUrls: ['./forgot_password.component.scss']\n})\nexport class Forgot_passwordComponent implements OnInit {\n    visible = false;\n    submitted = false;\n    forgotForm: FormGroup;\n    buttonForgot = true;\n    private user: User;\n\n    constructor(public sendEmailService: SendEmailService, public router: Router,\n                private activatedRoute: ActivatedRoute) {\n    }\n\n\n    enableForm(enable: boolean): void {\n        if (enable) {\n            this.forgotForm.get('email').enable();\n\n            this.buttonForgot = true;\n        } else {\n            this.forgotForm.get('email').disable();\n            this.buttonForgot = false;\n        }\n    }\n\n    sendMail() {\n        document.getElementById('text').innerHTML = 'Email sent successfully';\n        this.submitted = true;\n        if (this.forgotForm.invalid) {\n            return;\n        } else {\n            this.user = new User();\n            this.user.setEmail(this.forgotForm.get('email').value);\n            console.log(this.user.getEmail());\n            this.sendEmailService.send(this.user).subscribe((data: ResponseData) => {\n                console.log('RESPONSE DATA ' + JSON.stringify(data));\n                if (data.responseCode === '200') {\n                    window.alert(data.responseMsg);\n                    this.visible = true;\n                    this.enableForm(false);\n                } else {\n                    this.enableForm(true);\n                }\n            }, error => {\n                console.log('An Error Occured ' + error);\n            });\n\n      //      this.router.navigateByUrl('/');\n        }\n    }\n\n    ngOnInit(): void {\n        this.forgotForm = new FormGroup({\n            //   token: new FormControl('', [Validators.required]),\n            email: new FormControl('', [Validators.required, Validators.email]),\n        });\n    }\n\n    setSubmitted(submitted: boolean): void {\n        this.submitted = submitted;\n    }\n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n\n<app-footer></app-footer>\n<div class=\"sidenav\">\n    <div class=\"login-main-text\">\n        <h2>Application<br> Forgot password Page</h2>\n    </div>\n</div>\n<div class=\"main\">\n    <div class=\"col-md-6 col-sm-12\">\n        <div class=\"login-form\">\n\n            <form>\n                <div [formGroup]=\"forgotForm\" class=\"form\">\n                    <label>Email Address</label>\n                    <div class=\"form-group\">\n                        <input type=\"email\" formControlName=\"email\" placeholder=\"Email\" class=\"form-control\" id=\"email\">\n                    </div>\n                </div>\n                <p id=\"text\"></p>\n                <!--                <button type=\"submit\" class=\"btn btn-black\" id=\"go\" value=\"Login\" (click)=\"doLogin()\">Login</button>-->\n                <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"buttonForgot==false\"\n                        (click)=\"sendMail()\"\n                >Send email\n                </button>\n            </form>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Video} from '../shared/interfaces/video';\nimport {J} from '@angular/cdk/keycodes';\nimport {Router} from '@angular/router';\nimport {log} from 'util';\nimport {AppConstants} from '../shared/app.constants';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class VideoService {\n\n    private url = '/videos/';\n\n    constructor(private httpClient: HttpClient,\n                private router: Router) {\n    }\n\n    getAll(): any {\n        return this.httpClient.get<Array<Video>>(AppConstants.API_URL + this.url);\n    }\n\n    getById(id: number): any {\n        return this.httpClient.get<Array<Video>>(AppConstants.API_URL + this.url + id);\n    }\n\n    getPublished(): any {\n        return this.httpClient.get<Array<Video>>(AppConstants.API_URL + this.url + 'published');\n    }\n\n    add(videoDTO: Video, file: File): any {\n        const formData: FormData = new FormData();\n        formData.append('file', file);\n        formData.append('videoDTO', JSON.stringify(videoDTO));\n        this.httpClient.post<Video>(AppConstants.API_URL + this.url , formData).subscribe(data => {\n            console.log(data);\n\n            this.router.navigate(['admin/videos/' + data.id]);\n        });\n    }\n\n    update(videoDTO: Video, file: File): any {\n        const formData: FormData = new FormData();\n        formData.append('file', file);\n        formData.append('videoDTO', JSON.stringify(videoDTO));\n        this.httpClient.put<Video>(AppConstants.API_URL + this.url , formData).subscribe(data => {\n            this.router.navigate(['admin/videos/' + data.id]);\n        });\n    }\n\n\n    saveVideo(videoDTO: Video): any {\n        const formData: FormData = new FormData();\n        formData.append('videoDTO', JSON.stringify(videoDTO));\n        this.httpClient.put<Video>(AppConstants.API_URL + this.url, formData).subscribe(data => {\n            this.router.navigate(['admin/videos/']);\n        });\n    }\n\n\n    delete(video: Video): any {\n        this.httpClient.delete<Video>(AppConstants.API_URL + this.url + video.id).subscribe(data => {\n            this.router.navigate(['admin/video/']);\n        });\n    }\n\n    comment(video: Video, text: string): any{\n        this.httpClient.post(AppConstants.API_URL + this.url + '/' + video.id + '/comment', text);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, Subscription} from 'rxjs';\nimport {User} from '../shared/interfaces/user';\nimport {ResponseData} from '../modules/user-side/response-data';\nimport {catchError, retry} from 'rxjs/operators';\n\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n    private readonly userUrl: string;\n\n    constructor(\n        private http: HttpClient) {\n        this.userUrl = 'http://localhost:8082/user/';\n    }\n\n    public findAll(): Observable<User[]> {          // only for ROLE = ADMIN\n        return this.http.get<User[]>('http://localhost:8082/users',\n        );\n    }\n\n    public getUserById(id: number): Observable<string[]> {\n        console.log('Trying get user ' + id);\n        const url = `${this.userUrl}${id}`;\n\n        return this.http.get<string[]>(url);\n    }\n\n    public updateAll(id: number, file: File, updData): Subscription {\n        console.log('Trying user information update...');\n        const url = `${this.userUrl}${id}`;\n\n        const formData: FormData = new FormData();\n        if (file != null) {\n            formData.append('file', file, file.name);\n        }\n        formData.append('userDTO', JSON.stringify(updData));\n\n        return this.http.post<any>(url, formData)\n            .subscribe(data => {\n                console.log('Successful user updating!!!');\n            }, error => {\n                console.log(JSON.stringify(error));\n            });\n    }\n\n\n    public deleteUser(id: number): Subscription {\n        console.log('Trying user delete...');\n        const url = `${this.userUrl}${id}`;\n\n        return this.http.delete<User>(url).subscribe(data => {\n            console.log('Successful user deleting!!!');\n        }, error => {\n            console.log(JSON.stringify(error));\n        });\n    }\n\n\n    public getByEmail(email: string): Observable<User> {\n        return this.http.get<User>(this.userUrl + 'email/' + email);\n    }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AppConstants {\n    public static URL_PORT = '8082';\n    public static API_URL = `http://localhost:${AppConstants.URL_PORT}`;\n    public static MEDIA_PATH = '';\n\n    public static Paths =\n        {\n            before: [\n                {name: 'Home', ulr: '/'}\n            ],\n            after: [\n                {name: 'Video', ulr: '/videos'},\n                {name: 'DealBook', ulr: '/'},\n                {name: 'LifeStyle', ulr: '/'},\n                {name: 'TeamHub', ulr: '/teamHub'}\n            ]\n        };\n\n    public static languageOptions = [\n        {value: 1, viewValue: 'EN'},\n        {value: 2, viewValue: 'UA'},\n        {value: 2, viewValue: 'FR'},\n        {value: 3, viewValue: 'DE'}\n    ]\n\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Video} from '../../../../shared/interfaces/video';\nimport {VideoService} from '../../../../services/video.service';\nimport {FlashMessage} from '../../../../shared/interfaces/flashMessage';\nimport {MessagesEnum} from '../../../../shared/interfaces/messagesEnum';\nimport {Message} from '@angular/compiler/src/i18n/i18n_ast';\n\n@Component({\n    selector: 'app-video-form-confirm',\n    templateUrl: './video-form-confirm.component.html',\n    styleUrls: ['./video-form-confirm.component.scss']\n})\nexport class VideoFormConfirmComponent implements OnInit {\n\n    video: Video;\n    delete = false;\n    publish = false;\n\n    constructor(public dialogRef: MatDialogRef<VideoFormConfirmComponent>,\n                @Inject(MAT_DIALOG_DATA) private data: any,\n                private videoService: VideoService) {\n    }\n\n    ngOnInit(): void {\n        this.video = this.data.video;\n        if (this.data.delete === true) {\n            this.delete = true;\n        }\n        if (this.data.publish === true) {\n            this.publish = true;\n        }\n        console.log(this.data);\n    }\n\n    deleteVideo(): void {\n        this.videoService.delete(this.video);\n\n        this.dialogRef.close({\n            message: this.deleteMessage()\n        });\n    }\n\n    publishVideo(): void {\n        this.video.publish = !this.video.publish;\n        this.videoService.saveVideo(this.video);\n        this.dialogRef.close(\n            {\n                message: this.publishMessage()\n            });\n    }\n\n\n    deleteMessage(): FlashMessage {\n        const message = new FlashMessage();\n        message.title = 'Successful';\n        message.text = 'Video successfully deleted';\n        message.type = MessagesEnum.warn;\n        return message;\n    }\n\n\n    publishMessage(): FlashMessage {\n        const message = new FlashMessage();\n        message.title = 'Successful';\n        message.text = 'Video successfully changed';\n        message.type = MessagesEnum.successful;\n        return message;\n    }\n}\n","<div *ngIf=\"delete\">\n    <div mat-dialog-title class=\"text-center\">\n        <div class=\"circle\">\n\n        </div>\n        <mat-icon class=\"material-icons-outlined text-white\">\n            delete\n        </mat-icon>\n    </div>\n    <div mat-dialog-content>\n        <mat-label class=\"text-center\">\n            <h4><b>You are about to delete the video<br></b>\n                This video will be deleted from Sports Hub!<br>\n                Are you sure?\n            </h4>\n        </mat-label>\n    </div>\n    <div mat-dialog-actions class=\"float-right mt-0\">\n        <button class=\"text-center bg-white text-danger\" (click)=\"dialogRef.close()\">Cancel</button>\n        <button class=\"text-center bg-danger text-white\" (click)=\"deleteVideo()\">Delete</button>\n    </div>\n</div>\n<div *ngIf=\"publish\">\n    <div mat-dialog-title class=\"text-center\">\n        <div class=\"circle\" id=\"info\">\n\n        </div>\n        <mat-icon class=\"material-icons-outlined text-white\">\n            warning\n        </mat-icon>\n    </div>\n    <div mat-dialog-content>\n        <mat-label class=\"text-center\">\n            <h4 *ngIf=\"video.publish\"><b>You are about to unpublish the video<br></b>\n                This video will be unpublished in Sports Hub!<br>\n                Are you sure?\n            </h4>\n            <h4 *ngIf=\"!video.publish\"><b>You are about to publish the video<br></b>\n                This video will be published in Sports Hub!<br>\n                Are you sure?\n            </h4>\n        </mat-label>\n    </div>\n    <div mat-dialog-actions class=\"float-right mt-0\">\n        <button class=\"text-center bg-white text-danger\" (click)=\"dialogRef.close()\">Cancel</button>\n        <button class=\"text-center bg-danger text-white\" (click)=\"publishVideo()\">Change</button>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Router} from '@angular/router';\nimport {VideoService} from '../../../../services/video.service';\nimport {Video} from '../../../../shared/interfaces/video';\n\n@Component({\n    selector: 'app-video',\n    templateUrl: './videos.component.html',\n    styleUrls: ['./videos.component.scss']\n})\nexport class VideosComponent implements OnInit {\n\n\n    videos: Array<Video>;\n\n    // todo: Class var\n    shareFromClass = true;\n\n    // todo: Class var\n    input: any;\n    isSearch = false;\n\n\n    constructor(private dialog: MatDialog, private router: Router,\n                private videoService: VideoService) {\n    }\n\n    ngOnInit(): void {\n        this.videoService.getPublished().subscribe(data => {\n            this.videos = data;\n        });\n    }\n\n\n    toggleSearch(): void {\n        this.isSearch = !this.isSearch;\n    }\n}\n\n","<app-header></app-header>\n<app-navigation></app-navigation>\n<mat-card class=\"m-auto col-md-8 col-12\">\n    <div class=\"container-fluid text-end\">\n        <div *ngIf=\"isSearch\" class=\"search-div border border-1\">\n            <div class=\"input-div\">\n                    <span class=\"material-icons align-middle\" (click)=\"toggleSearch()\">\n                        search\n                    </span>\n                <input type=\"search\" [(ngModel)]=\"input\" placeholder=\"Type here to search\">\n            </div>\n        </div>\n        <span class=\"material-icons\" *ngIf=\"!isSearch\" (click)=\"toggleSearch()\">\n            search\n        </span>\n    </div>\n    <div class=\"d-md-flex justify-content-between\">\n    </div>\n    <div *ngFor=\"let video of videos | VideoPipe: input:null\" class=\"container-fluid\">\n        <mat-card class=\"home-card container-fluid\">\n            <mat-card-content>\n                <div class=\"home-container\">\n                    <a class=\"text-danger\" [routerLink]=\"video.id\">\n                        <video *ngIf=\"video.uploaded\" disabled=\"true\">\n                            <source\n                                    src=\"assets/videos/{{video.url}}\"\n                                    type='video/mp4'>\n                        </video>\n                        <iframe *ngIf=\"!video.uploaded\" [src]=\"video | safe\"></iframe>\n                    </a>\n                    <div class=\"content\">\n                        <div class=\"video-option-menu\">\n                            <div class=\"video-option\">\n                            </div>\n                        </div>\n                        <a class=\"text-danger\" [routerLink]=\"video.id\">\n                            <div class=\"content-title\">\n                                <h3>{{ video.title }}</h3>\n                            </div>\n                        </a>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</mat-card>\n<app-footer></app-footer>\n","import {EventEmitter, Input, Output} from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport {Banner, BannerStatus} from \"../../../../../shared/interfaces/banner\";\nimport {SportCategory} from \"../../../../../shared/interfaces/sportCategory\";\nimport {BannerService} from \"../../../../../services/banners.service\";\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\n\n@Component({\n  selector: 'app-banner-item',\n  templateUrl: './banner-item.component.html',\n  styleUrls: ['./banner-item.component.scss']\n})\nexport class BannerItemComponent implements OnInit {\n  @Input() banner: Banner;\n  @Output() bannerChange: EventEmitter<Banner> = new EventEmitter<Banner>();\n  @Output() bannerDeleted: EventEmitter<void> = new EventEmitter<void>();\n  categories : SportCategory[];\n  closeResult = '';\n  trash = faTrash;\n\n  constructor(private bannerService : BannerService, private modalService: NgbModal) {\n  }\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then(result => {\n      this.deleteBanner(this.banner);\n    }, reason => { });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  ngOnInit(): void {\n    this.bannerService.getCategories().subscribe( data =>{\n      this.categories = data;\n    })\n  }\n\n  get statuses() {\n    const result = [];\n    for (let option in BannerStatus) {\n      result.push({key: option, value: BannerStatus[option]});\n    }\n\n    return result;\n  }\n\n  bannerChanged() {\n    this.bannerChange.emit(this.banner);\n  }\n\n  compareCategories(cat1, cat2) {\n    return cat1.name === cat2.name;\n  }\n\n  deleteBanner(banner: Banner){\n    this.bannerService.deleteBanner(banner).subscribe(_ => {});\n    this.modalService.dismissAll();\n    this.bannerDeleted.emit();\n  }\n\n}\n","<div class=\"list-item pt-2\">\n     <div class=\"float-left w-50 pl-2 pt-2\">\n         <p>{{banner?.title}}</p>\n     </div>\n     <div class=\"float-right w-50\">\n         <div class=\"width-45 d-inline-flex\">\n             <select [(ngModel)]=\"banner.status\" (ngModelChange)=\"bannerChanged()\" class=\"form-control status-select-drop-down\">\n                 <option *ngFor=\"let option of statuses\" [ngValue]=\"option.key\">{{option.value}}</option>\n             </select>\n         </div>\n         <div class=\"width-45 d-inline-flex\">\n             <select [compareWith]=\"compareCategories\" [ngModel]=\"banner.category ? banner.category : {name: ''}\" (ngModelChange)=\"banner.category = $event; bannerChanged()\" class=\"form-control category-select-drop-down\">\n                 <option *ngFor=\"let category of categories\" [ngValue]=\"category\">{{category.name}}</option>\n             </select>\n         </div>\n         <div class=\"delete-button-trash\">\n             <button class=\"btn btn-lg trash-button custom-svg-inline--fa\" (click)=\"open(content)\"><fa-icon [icon]=\"trash\"></fa-icon></button>\n         </div>\n     </div>\n</div>\n\n<ng-template #content let-modal class=\"custom-modal-content\">\n    <div class=\"ml-auto mr-auto mt-3\">\n        <img src=\"../../../../assets/trash-popup.svg\" alt=\"\" />\n    </div>\n    <div class=\"modal-body\">\n      <h4 class=\"font-weight-bold text-center mb-1\">You are about to delete this banner!</h4>\n      <h4 class=\"text-center mb-1\">This banner will be deleted</h4>\n        <h4  class=\"text-center mb-1\">Are you sure?</h4>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"cancel-button mt-3\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">Cancel</button>\n        <button type=\"submit\" class=\"delete-button mt-3\" (click)=\"deleteBanner(banner)\" >Delete</button>\n    </div>\n</ng-template>\n\n","import {NgModule} from '@angular/core';\n\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from '@modules/user-side/home/home.component';\nimport {BannersManagementComponent} from \"@modules/admin-side/admin-banners/pages/banners-management/banners-management.component\";\nimport {LoginComponent} from '@modules/user-side/login/login.component';\nimport {Forgot_passwordComponent} from '@modules/user-side/forgot_password/forgot_password.component';\nimport {RegistrationComponent} from '@modules/user-side/registration/registration.component';\nimport {UserProfileComponent} from '@modules/user-side/user-profile/user-profile.component';\nimport {UserListComponent} from '@modules/user-side/user-list/user-list.component';\nimport {ResetComponent} from '@modules/user-side/reset_password/reset.component';\nimport {RoleGuard} from '@modules/security/RoleGuard';\nimport {VideoComponent} from '@modules/user-side/video/video/video.component';\nimport {VideosComponent} from '@modules/user-side/video/videos/videos.component';\nimport {AdminHomeComponent} from '@modules/admin-side/home/home.component';\nimport {VideoEditComponent} from '@modules/admin-side/video/video-edit/video-edit.component';\nimport {AdminVideoComponent} from '@modules/admin-side/video/video/video.component';\nimport {AddArticleComponent} from '@modules/admin-side/add-article/add-article.component';\n\n\n\nconst routes: Routes = [\n    {path: '', component: HomeComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'forgot_password', component: Forgot_passwordComponent},\n    {path: 'registration', component: RegistrationComponent},\n    {path: 'user/:user_id', component: UserProfileComponent},\n    {path: 'reset_password',component: ResetComponent},\n\n    {path: 'users', component: UserListComponent, canActivate: [RoleGuard]},\n    {path: 'reset_password', component: ResetComponent},\n    {\n        path: 'admin/add-article',\n        component: AddArticleComponent,\n        data: {\n            expectedRole: 'admin'\n        }\n    },\n    {\n        path: 'admin/banners',\n        component: BannersManagementComponent,\n        // canActivate: [RoleGuard]\n    },\n    {path: 'videos', component: VideosComponent},\n    {path: 'videos/:id', component: VideoComponent},\n    {\n        path: 'admin', component: AdminHomeComponent, children: [\n            {path: 'videos', component: AdminVideoComponent},\n            {path: 'videos/:id', component: VideoEditComponent}\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {HeaderComponent} from './user-side/templates/header/header.component';\nimport {FooterComponent} from './user-side/templates/footer/footer.component';\nimport {NavigationComponent} from './user-side/templates/navigation/navigation.component';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {LoginComponent} from './user-side/login/login.component';\nimport {Forgot_passwordComponent} from './user-side/forgot_password/forgot_password.component';\nimport {RegistrationComponent} from './user-side/registration/registration.component';\nimport {HomeComponent} from './user-side/home/home.component';\nimport {UserProfileComponent} from './user-side/user-profile/user-profile.component';\nimport {UserListComponent} from './user-side/user-list/user-list.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport {ResetComponent} from './user-side/reset_password/reset.component';\nimport { BannerComponent } from './user-side/banners/banner/banner.component';\nimport { BannerListUsersideComponent } from './user-side/banners/banner-list-userside/banner-list-userside.component';\nimport {AdminVideoComponent} from './admin-side/video/video/video.component';\nimport {VideoComponent} from './user-side/video/video/video.component';\nimport {AdminHomeComponent} from './admin-side/home/home.component';\nimport {VideoEditComponent} from './admin-side/video/video-edit/video-edit.component';\nimport {VideosComponent} from './user-side/video/videos/videos.component';\nimport {VideoFormComponent} from './admin-side/video/video-form/video-form.component';\nimport {VideoFormConfirmComponent} from './admin-side/video/video-form-confirm/video-form-confirm.component';\nimport {AdminNavigationComponent} from './admin-side/navigation/navbar/admin-navigation.component';\nimport {FlashMessageComponent} from './admin-side/flash-message/flash-message.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatOptionModule} from '@angular/material/core';\nimport {MatCardModule} from '@angular/material/card';\nimport {VideoPipe} from '../pipes/video.pipe';\nimport {SafePipe} from '../pipes/safe.pipe';\nimport {MatSelectModule} from '@angular/material/select';\nimport {IvyCarouselModule} from 'angular-responsive-carousel';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {AddArticleComponent} from './admin-side/add-article/add-article.component';\n\n\n@NgModule({\n    declarations: [HomeComponent,\n        LoginComponent,\n        Forgot_passwordComponent,\n        HeaderComponent,\n        NavigationComponent,\n        FooterComponent,\n        RegistrationComponent,\n        UserProfileComponent,\n        ResetComponent,\n        UserListComponent,\n        AdminVideoComponent,\n        VideoComponent,\n        AdminHomeComponent,\n        VideoEditComponent,\n        VideosComponent,\n        VideoFormComponent,\n        VideoFormConfirmComponent,\n        AdminNavigationComponent,\n        FlashMessageComponent, VideoPipe, SafePipe,\n        AddArticleComponent,\n        BannerComponent,\n        BannerListUsersideComponent\n    ],\n    exports: [\n        HeaderComponent,\n        FooterComponent,\n        AdminNavigationComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        FormsModule,\n        MatTabsModule,\n        MatInputModule,\n        MatButtonModule,\n        ReactiveFormsModule,\n        MatListModule,\n        MatRadioModule,\n        MatDialogModule,\n        MatOptionModule,\n        MatCardModule,\n        MatSelectModule,\n        MatIconModule,\n        IvyCarouselModule,\n        MatSlideToggleModule,\n        MatAutocompleteModule\n    ]\n})\nexport class ModuleModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}